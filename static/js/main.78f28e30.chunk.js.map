{"version":3,"sources":["services/filecoin/economics.js","services/filecoin/stats.js","services/filecoin/index.js","components/Summary.js","views/Home.js","components/WindowPoStStatus.js","views/Status.js","components/WindowPoSt.js","views/Full.js","components/MinerBar.js","views/Deadline.js","views/MinerInfo.js","services/drand/index.js","components/TinySummary.js","views/Gas.js","App.js","serviceWorker.js","index.js"],"names":["computeEffectiveNetworkTime","cumsumRealized","x0","k","Math","pow","c","log","a","computeBlockReward","newWallClockEpoch","prevWallClockEpoch","newNetworkTimeEpoch","prevNetworkTimeEpoch","mintRate","prevSimpleSupply","E","newSimpleSupply","prevBaselineSupply","getCurrBaseline","e","Comp","currEpoch","nwqap","nwqapP","nwqapV","nwCircSupply","perEpochRewardP","perEpochRewardV","perDurationNwRbGrowth","projectedDays","perDurationMinerQaGrowth","nwCumsumRealized","Object","assign","this","sectorQAP","days","networkQAPFilter","AlphaBetaFilter","perEpochRewardFilter","extrapolateCumsumRatio","projectFutureReward","max","sectorIp","computeInitialPledgeForQAPower","sectorProjectedReward","sectorFaultFee","perEpochNwRbGrowth","perEpochMinerQaGrowth","newInitialPledges","totalInitialPledge","currNetworkQAP","currCumsumRealized","prevNetworkTime","newInitialPledge","push","newNetworkTime","newReward","addNewEntry","p","v","alpha","beta","value","deltaT","residual","numerator","denominator","futureT","x2a","x2b","blockLimit","objectFilter","obj","fn","fromEntries","entries","filter","objectMap","map","i","sizeToString","s","biUnits","unit","length","toFixed","Stats","client","average","fetcher","tipsets","console","fetchHead","head","height","Height","fetchTipsetHead","tipset","keys","transactions","msgs","totalGas","reduce","total","GasUsed","acc","tup","Message","GasLimit","avg","method","parentAndReceiptsMessages","Cids","parseInt","GasFeeCap","div","reduc","tx","allTx","concat","gasUsedMethod","totalUsed","gasLimitMethod","totalLimit","ratios","totalGasLimit","nbBlocks","ratio","totalGasUsed","used","limit","datas","users","tuple","undefined","To","sorted","gas","user","sort","b","slice","miner","allHeights","sortedHeights","getMinerPower","mif","avgGasOfMethod","MinerPower","RawBytePower","nbSectors","size","dailyGas","avgGasFeeCap","maxDailyPrice","raw","TotalPower","atto","d3","require","f","format","b64","bx","BN","schema","testnet","fullNode","b64ToBn","window","BigInt","bin","atob","hex","split","forEach","ch","h","charCodeAt","toString","join","partitionSchema","Sectors","Unproven","Faults","Recoveries","Terminated","ExpirationEpochs","EarlyTerminated","LivePower","UnprovenPower","FaultyPower","RecoveringPower","preCommitSchema","type","key","info","seal_proof","sector_number","sealed_cid","seal_rand_epoch","deal_ids","expiration","replace_capacity","replace_sector_deadline","replace_sector_partition","replace_sector_number","precommit_deposit","precommit_epoch","deal_weight","verified_deal_weight","bytesToBig","bytesToBigRev","mul","add","nextBits","n","res","num","and","shln","sub","shrn","left","toNumber","decodeRLE2","buf","first","x","Error","runs","decodeRLE","cur","r","Filecoin","endpointUrl","url","provider","BrowserProvider","LotusRPC","parents","receipts","minfo","path","state","Blocks","ParentStateRoot","node","chainGetNode","data","Obj","self","Fil","methods","decode","asObject","chainHead","cid","partitionRaw","partitionObj","curr","ChainGetTipSetByHeight","storagePowerActorRaw","TotalRawBytePower","TotalBytesCommitted","TotalQualityAdjPower","TotalQABytesCommitted","TotalPledgeCollateral","ThisEpochRawBytePower","ThisEpochQualityAdjPower","ThisEpochPledgeCollateral","hash","StateReadState","State","Balance","PreCommitDeposits","LockedFunds","InitialPledge","FeeDebt","Available","cached","localStorage","getItem","cachedTime","Date","now","JSON","parse","fetch","json","miners","address","setItem","stringify","deadlinesCids","asyncPool","minerCid","ChainGetNode","deadline","Partitions","LiveSectors","TotalSectors","Raw","Number","deadlines","StateMinerInfo","Promise","all","StateMinerProvingDeadline","fetchDeadlinesProxy","nextDeadlines","Array","_","Index","Close","SectorsCount","d","FaultsCount","ActiveCount","minersInfo","minerId","setMinersIfMounted","minerInfo","fetchMinerInfo","then","catch","error","fetchDeadlines","fetchDeposits","deposits","fetchPreCommittedSectors","preCommits","getData","preCommittedSectors","PreCommitDeadlines","groups","SectorNumber","Expiry","Count","StateMinerSectors","sectorList","ID","number","sectorsCount","chainGetParentMessages","chainGetParentReceipts","parentMessages","receiptParentMessages","zip","entry","exit","ExitCode","inMethod","includes","Method","stateMinerPower","m","StateCirculatingSupply","Supply","Reward","Power","inputs","ThisEpochQAPowerSmoothed","PositionEstimate","VelocityEstimate","ThisEpochRewardSmoothed","CumsumRealized","Economics","summary","arr","arrs","val","Summary","title","desc","className","href","f0","f3","f1","Home","actors","econSummary","computeEconomics","useState","setMinersInfo","useEffect","count","mounted","updateMinerInfo","id","ThisEpochReward","MinerAboveMinPowerCount","to","class","scope","align","rawBytePower","WindowPoStStatus","round","ceil","f2","Status","spa","minersDeadlines","setMinersDeadlines","minersDeadlines2880","setMinersDeadlines2880","prev60","setPrev60","prev120","setPrev120","getPrev","diff","prevHead","fetchPower","prevSpa","fetchingPrevious","minersList","deadlines2880","WindowPoSt","link","out","Full","setHead","fetched","fetchingHead","MinerBar","deadlineId","tag","name","location","flagEmoji","withRouter","useParams","partitions","setPartitions","minerDeadlines","setMinerDeadlines","todayDeadlines","setTodayDeadlines","fetchPartitionsSectors","epochs","day","reverse","data-tip","data-for","effect","place","flat","partition","sector","PostSubmissions","FaultCutoff","Challenge","Open","getFilecoinExpectedHeight","filGenesis","getTime","floor","TinySummary","expected","setFilExpectedHeight","setRound","Drand","current","interval","setInterval","clearInterval","GrowthCard","nstats","commits","setCommits","wposts","setWposts","graph","setGraph","canvasRef","useRef","cardRef","setCollapseEvent","g","addEventListener","update","options","display","text","scales","yAxes","position","scaleLabel","labelString","fillDataset","transactionsPerHeight","allSealed","allProven","sealed","proven","newCommits","newWposts","rounds","filteredCommits","dataCommits","filteredPosts","dataWposts","w","myGraph","dataset","borderColor","chartColors","blue","fill","label","yAxisID","red","lineData","datasets","labels","ctx","getContext","newGraph","Chart","data-toggle","data-target","aria-expanded","aria-controls","ref","aria-labelledby","data-parent","MinerInfoCard","minerAddr","setAddr","setData","searchMiner","preventDefault","for","onChange","target","placeholder","onClick","BiggestGasSpenderCard","setOpts","pie","setPie","biggestGasUserFor","sortedHeight","rawData","backgroundColor","color","newOpts","newDataset","myPie","newPie","GasTableCard","headers","empty","wpost","pre","prove","avgGas","setAvgGas","updateAverage","avgTotalGasUsed","avgGasLimit","computeEntry","avgNumberTx","nTx","gasUsed","gasLimit","avgRatioUsedOverTotalUsed","ratioUsed","avgRatioLimitOverTotalLimit","ratioLimit","avgRatioUsedOverLimit","ratioUsedLimit","avgTotalGasUsedOverTipsetLimit","ratioUsedBlockLimit","avgTotalGasLimitOverTipsetLimit","ratioBlockLimit","results","RowInfo","values","props","idx","isNaN","stats","setStat","updateStats","fetchCids","orange","yellow","green","purple","grey","App","setMiners","setFilClient","setActors","reload","fetchGenesisActors","fetchingEcon","getMiners","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.78f28e30.chunk.js","sourcesContent":["const EPOCHS_PER_DAY = (24 * 60 * 60) / 30\nconst EPOCHS_PER_YEAR = 365 * EPOCHS_PER_DAY\nconst INITIAL_BASELINE = 2888888880000000000\nconst BASELINE_ANNUAL_GROWTH = 1\n\nconst computeEffectiveNetworkTime = function (cumsumRealized) {\n  const x0 = INITIAL_BASELINE\n  const annualGrowth = BASELINE_ANNUAL_GROWTH\n  const k = Math.pow(1 + annualGrowth, 1 / EPOCHS_PER_YEAR)\n  const c = 1 / Math.log(k)\n  const a = -x0 * c\n  return Math.log((cumsumRealized - a) / (x0 * c)) / Math.log(k)\n}\n\nconst computeBlockReward = function (\n  newWallClockEpoch,\n  prevWallClockEpoch,\n  newNetworkTimeEpoch,\n  prevNetworkTimeEpoch\n) {\n  const totalSimpleSupply = 330e6\n  const totalBaselineSupply = 770e6\n  const mintRate = Math.log(2) / (6 * EPOCHS_PER_YEAR)\n\n  const prevSimpleSupply =\n    totalSimpleSupply * (1 - Math.pow(Math.E, -mintRate * prevWallClockEpoch))\n  const newSimpleSupply =\n    totalSimpleSupply * (1 - Math.pow(Math.E, -mintRate * newWallClockEpoch))\n\n  const prevBaselineSupply =\n    totalBaselineSupply *\n    (1 - Math.pow(Math.E, -mintRate * prevNetworkTimeEpoch))\n  const newBaselineSupply =\n    totalBaselineSupply *\n    (1 - Math.pow(Math.E, -mintRate * newNetworkTimeEpoch))\n\n  return (\n    newSimpleSupply + newBaselineSupply - prevSimpleSupply - prevBaselineSupply\n  )\n}\n\nconst getCurrBaseline = function (e) {\n  const x0 = INITIAL_BASELINE\n  const annualGrowth = BASELINE_ANNUAL_GROWTH\n  const k = Math.pow(1 + annualGrowth, 1 / EPOCHS_PER_YEAR)\n  return x0 * Math.pow(k, e)\n}\n\nexport default class Comp {\n  constructor ({\n    currEpoch,\n    nwqap,\n    nwqapP,\n    nwqapV,\n    nwCircSupply,\n    perEpochRewardP,\n    perEpochRewardV,\n    perDurationNwRbGrowth,\n    projectedDays,\n    perDurationMinerQaGrowth,\n    nwCumsumRealized\n  }) {\n    Object.assign(this, {\n      currEpoch,\n      nwqap,\n      nwqapP,\n      nwqapV,\n      nwCircSupply,\n      perEpochRewardP,\n      perEpochRewardV,\n      perDurationNwRbGrowth,\n      projectedDays,\n      perDurationMinerQaGrowth,\n      nwCumsumRealized\n    })\n  }\n\n  projectFutureReward (sectorQAP, days) {\n    const networkQAPFilter = new AlphaBetaFilter(this.nwqapP, this.nwqapV)\n    const perEpochRewardFilter = new AlphaBetaFilter(\n      this.perEpochRewardP,\n      this.perEpochRewardV\n    )\n    return (\n      sectorQAP *\n      extrapolateCumsumRatio(\n        perEpochRewardFilter,\n        networkQAPFilter,\n        days * EPOCHS_PER_DAY\n      )\n    )\n  }\n\n  computeInitialPledgeForQAPower (sectorQAP, currEpoch) {\n    return (\n      this.projectFutureReward(sectorQAP, 20) +\n      (sectorQAP * 0.3 * this.nwCircSupply) /\n        Math.max(this.nwqap, getCurrBaseline(currEpoch))\n    )\n  }\n\n  summary () {\n    const sectorIp = this.computeInitialPledgeForQAPower(\n      32 * 2 ** 30,\n      this.currEpoch\n    )\n    const sectorProjectedReward = this.projectFutureReward(32 * 2 ** 30, 360)\n    const sectorFaultFee = this.projectFutureReward(32 * 2 ** 30, 3.51)\n\n    return {\n      sectorIp,\n      sectorProjectedReward,\n      sectorFaultFee\n    }\n  }\n\n  computeInitialPledgeFromAssumptions () {\n    const {\n      currEpoch,\n      nwqap,\n      nwqapP,\n      nwqapV,\n      nwCircSupply,\n      perEpochRewardP,\n      perEpochRewardV,\n      perDurationNwRbGrowth,\n      projectedDays,\n      perDurationMinerQaGrowth,\n      nwCumsumRealized\n    } = this\n\n    const networkQAPFilter = new AlphaBetaFilter(nwqapP, nwqapV)\n    const perEpochRewardFilter = new AlphaBetaFilter(\n      perEpochRewardP,\n      perEpochRewardV\n    )\n    const perEpochNwRbGrowth =\n      perDurationNwRbGrowth / projectedDays / EPOCHS_PER_DAY\n    const perEpochMinerQaGrowth =\n      perDurationMinerQaGrowth / projectedDays / EPOCHS_PER_DAY\n\n    const newInitialPledges = []\n    var totalInitialPledge = 0\n    let currNetworkQAP = nwqap\n    let currCumsumRealized = nwCumsumRealized\n    var prevNetworkTime = computeEffectiveNetworkTime(nwCumsumRealized)\n\n    for (\n      var e = currEpoch + 1;\n      e < currEpoch + projectedDays * EPOCHS_PER_DAY + 1;\n      e++\n    ) {\n      // first compute initial pledge required for this epoch\n      const newInitialPledge =\n        perEpochMinerQaGrowth *\n        (extrapolateCumsumRatio(\n          perEpochRewardFilter,\n          networkQAPFilter,\n          20 * EPOCHS_PER_DAY\n        ) +\n          (0.3 * nwCircSupply) / Math.max(currNetworkQAP, getCurrBaseline(e)))\n      newInitialPledges.push(newInitialPledge)\n      totalInitialPledge += newInitialPledge\n      // then update filter values\n      currNetworkQAP += perEpochNwRbGrowth\n      currCumsumRealized += currNetworkQAP\n      const newNetworkTime = computeEffectiveNetworkTime(currCumsumRealized)\n      const newReward = computeBlockReward(\n        e,\n        e - 1,\n        newNetworkTime,\n        prevNetworkTime\n      )\n      perEpochRewardFilter.addNewEntry(newReward, 1)\n      networkQAPFilter.addNewEntry(currNetworkQAP, 1)\n      prevNetworkTime = newNetworkTime\n    }\n\n    return { newInitialPledges, totalInitialPledge }\n  }\n}\n\nclass AlphaBetaFilter {\n  constructor (p, v) {\n    this.alpha = 9.25e-4\n    this.beta = 2.84e-7\n    this.p = p\n    this.v = v\n  }\n\n  addNewEntry (value, deltaT) {\n    this.p += this.v * deltaT\n    const residual = value - this.p\n    this.p += this.alpha * residual\n    this.p = Math.max(this.p, 0)\n    this.v += (this.beta * residual) / deltaT\n  }\n}\n\nconst extrapolateCumsumRatio = function (numerator, denominator, futureT) {\n  const x2a = Math.log(denominator.p + denominator.v)\n  const x2b = Math.log(denominator.p + denominator.v + denominator.v * futureT)\n  const m1 = denominator.v * numerator.p * (x2b - x2a)\n  const m2 =\n    numerator.v * (denominator.p * (x2a - x2b) + denominator.v * futureT)\n  return (m1 + m2) / Math.pow(denominator.v, 2)\n}\n","const blockLimit = 5 * 10 ** 9\nconst roundsPerDay = 2 * 60 * 24\nconst roundsInDeadline = 2 * 30\nconst deadlines = 48\nconst maxSectorsPerPost = 2349\nexport function wpostToSectors (wpost) {\n  return maxSectorsPerPost * wpost\n}\n\nfunction gbToPB (v) {\n  return v / 1024 / 1024\n}\nfunction pbToGB (v) {\n  return v * 1024 * 1024\n}\n// Returns the estimated growthRate per day assuming this number of prove\n// commits at one height (or an average etc)\nexport function growthRate (prove) {\n  return gbToPB(prove * 32) * roundsPerDay\n}\n\nexport function objectFilter (obj, fn) {\n  return Object.fromEntries(Object.entries(obj).filter(([k, v]) => fn(v, k)))\n}\n\nexport function objectMap (obj, fn) {\n  return Object.entries(obj).map(([k, v], i) => fn(v, k, i))\n}\n\nfunction roundsInDays (rounds) {\n  return Math.ceil(rounds / 2 / 60 / 24)\n}\n\nfunction sectorsToPost (sectors) {\n  return sectors / maxSectorsPerPost\n}\n\nfunction sizeToString (s) {\n  var biUnits = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB']\n  var unit = 0\n  while (s >= 1024 && unit < biUnits.length - 1) {\n    s /= 1024\n    unit++\n  }\n  s = s.toFixed(2)\n  return `${s} ${biUnits[unit]}`\n}\n\nfunction sizeToSectors (s) {\n  return s / 1024 / 1024 / 1024 / 32\n}\n\nfunction attoToFIL (atto) {\n  return atto * 10 ** -18\n}\n\nexport default class Stats {\n  constructor (client, average) {\n    this.fetcher = client\n    this.average = average\n    this.tipsets = {}\n  }\n\n  // XXX Make head a paramter and fethc only what it needs\n  async fetchCids () {\n    // at the moment take the first block - this is ok since parent tipset\n    // is the same for all the blocks\n    console.log('Initializing gas stats engine')\n    const head = await this.fetcher.fetchHead()\n    const height = head.Height\n    this.tipsets[head.Height] = head\n    for (var i = 1; i < this.average; i++) {\n      const tipset = await this.fetcher.fetchTipsetHead(height - i)\n      this.tipsets[tipset.Height] = tipset\n      console.log(\n        i,\n        '/',\n        this.average,\n        ': init fetched tipset at height ',\n        tipset.Height,\n        ' with [0] = ',\n        tipset\n      )\n    }\n    console.log(\n      'Stats: got ' +\n        Object.keys(this.tipsets).length +\n        ' tipset CIDs to make stats from'\n    )\n  }\n\n  // returns the average gas used of a given method\n  async avgGasOfMethod (...method) {\n    const msgs = await this.transactions(...method)\n    const totalGas = msgs.reduce((total, v) => total + v[1].GasUsed, 0)\n    return totalGas / msgs.length\n  }\n\n  // Return the average of the gas limit PER height\n  async avgGasLimit (...method) {\n    return (await this.transactions(...method)).reduce(\n      (acc, tup) => acc + tup[0].Message.GasLimit,\n      0\n    )\n  }\n\n  async avgGasFeeCap (...method) {\n    var avg = 0\n    for (var height in this.tipsets) {\n      const tipset = this.tipsets[height]\n      const msgs = await this.fetcher.parentAndReceiptsMessages(\n        tipset.Cids[0],\n        ...method\n      )\n      avg +=\n        msgs.reduce((total, v) => total + parseInt(v[0].Message.GasFeeCap), 0) /\n        msgs.length\n    }\n    return avg / Object.keys(this.tipsets).length\n  }\n\n  // Returns the average of the total gas used PER height\n  async avgTotalGasUsed (...method) {\n    const div = Object.keys(this.tipsets).length\n    const reduc = (await this.transactions(...method)).reduce(\n      (total, tup) => total + tup[1].GasUsed,\n      0\n    )\n    return reduc / div\n  }\n\n  async avgNumberTx (...method) {\n    const tx = await this.transactions(...method)\n    return tx.length / Object.keys(this.tipsets).length\n  }\n\n  async transactions (...method) {\n    var allTx = []\n    for (var height in this.tipsets) {\n      const tipset = this.tipsets[height]\n      const msgs = await this.fetcher.parentAndReceiptsMessages(\n        tipset.Cids[0],\n        ...method\n      )\n      allTx = allTx.concat(msgs)\n    }\n    return allTx\n  }\n\n  async transactionsPerHeight (...method) {\n    const allTx = {}\n    for (var height in this.tipsets) {\n      const tipset = this.tipsets[height]\n      const msgs = await this.fetcher.parentAndReceiptsMessages(\n        tipset.Cids[0],\n        ...method\n      )\n      allTx[height] = msgs\n    }\n    return allTx\n  }\n\n  async avgRatioUsedOverTotalUsed (...method) {\n    const gasUsedMethod = (await this.transactions(...method)).reduce(\n      (acc, v) => acc + v[1].GasUsed,\n      0\n    )\n    const totalUsed = (await this.transactions()).reduce(\n      (acc, v) => acc + v[1].GasUsed,\n      0\n    )\n    return gasUsedMethod / totalUsed\n  }\n\n  async avgRatioLimitOverTotalLimit (...method) {\n    const gasLimitMethod = (await this.transactions(...method)).reduce(\n      (acc, v) => acc + v[0].Message.GasLimit,\n      0\n    )\n    const totalLimit = (await this.transactions()).reduce(\n      (acc, v) => acc + v[0].Message.GasLimit,\n      0\n    )\n    return gasLimitMethod / totalLimit\n  }\n\n  // return the avg total gas limit set per height for the given method over\n  // the maximal theoretical gas limit\n  async avgTotalGasLimitOverTipsetLimit (...method) {\n    var ratios = []\n    for (var height in this.tipsets) {\n      const tipset = this.tipsets[height]\n      const msgs = await this.fetcher.parentAndReceiptsMessages(\n        tipset.Cids[0],\n        ...method\n      )\n      const totalGasLimit = msgs.reduce(\n        (total, tup) => total + tup[0].Message.GasLimit,\n        0\n      )\n      const nbBlocks = tipset.Cids.length\n      const ratio = totalGasLimit / (blockLimit * nbBlocks)\n      ratios.push(ratio)\n    }\n    // make the average\n    return ratios.reduce((acc, v) => acc + v, 0) / ratios.length\n  }\n\n  async avgTotalGasUsedOverTipsetLimit (...method) {\n    var ratios = []\n    for (var height in this.tipsets) {\n      const tipset = this.tipsets[height]\n      const msgs = await this.fetcher.parentAndReceiptsMessages(\n        tipset.Cids[0],\n        ...method\n      )\n      const totalGasUsed = msgs.reduce(\n        (total, tup) => total + tup[1].GasUsed,\n        0\n      )\n      const nbBlocks = tipset.Cids.length\n      const ratio = totalGasUsed / (blockLimit * nbBlocks)\n      ratios.push(ratio)\n    }\n    // make the average\n    return ratios.reduce((acc, v) => acc + v, 0) / ratios.length\n  }\n\n  async avgRatioUsedOverLimit (...method) {\n    const used = (await this.transactions(...method)).reduce(\n      (acc, v) => acc + v[1].GasUsed,\n      0\n    )\n    const limit = (await this.transactions(...method)).reduce(\n      (acc, v) => acc + v[0].Message.GasLimit,\n      0\n    )\n    return used / limit\n  }\n\n  async biggestGasUserFor (...methods) {\n    var datas = {}\n    for (var height in this.tipsets) {\n      const msgs = await this.transactions(...methods)\n      var users = msgs.reduce((acc, tuple) => {\n        if (acc[tuple[0].Message.To] == undefined) {\n          acc[tuple[0].Message.To] = 0\n        }\n        acc[tuple[0].Message.To] += tuple[1].GasUsed\n        return acc\n      }, {})\n      // combinatio of mapping over dict\n      // https://stackoverflow.com/questions/14810506/map-function-for-objects-instead-of-arrays\n      // and sorting in decreasing order\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n      const sorted = objectMap(users, (gas, user) => [user, gas]).sort(\n        (a, b) => b[1] - a[1]\n      )\n      datas[height] = sorted\n      console.log('Biggest txs at height', height, ' -> ', sorted.slice(0, 10))\n    }\n    return datas\n  }\n\n  sortedHeights () {\n    return Object.keys(this.tipsets).sort((a, b) => b - a)\n  }\n\n  async minerInfo (miner) {\n    const allHeights = this.sortedHeights()\n    const tipset = this.tipsets[allHeights[0]]\n    const mif = await this.fetcher.getMinerPower(\n      tipset.Cids,\n      tipset.Height,\n      miner\n    )\n    const gas = await this.avgGasOfMethod(5)\n    const nbSectors = sizeToSectors(mif.MinerPower.RawBytePower)\n    const size = sizeToString(mif.MinerPower.RawBytePower)\n    const dailyGas = sectorsToPost(nbSectors) * gas\n    const maxDailyPrice = dailyGas * (await this.avgGasFeeCap(5))\n    return {\n      raw: mif.MinerPower.RawBytePower,\n      ratio: (\n        mif.MinerPower.RawBytePower / mif.TotalPower.RawBytePower\n      ).toFixed(3),\n      size: size,\n      dailyGas: dailyGas.toFixed(2),\n      maxDailyPrice: attoToFIL(maxDailyPrice).toFixed(2)\n    }\n  }\n}\n","import { LotusRPC } from '@filecoin-shipyard/lotus-client-rpc'\nimport { BrowserProvider } from '@filecoin-shipyard/lotus-client-provider-browser'\nimport Fil from 'js-hamt-filecoin'\nimport Economics from './economics'\nimport Stats from './stats'\nimport { partition } from 'd3'\nimport asyncPool from 'tiny-async-pool'\nconst d3 = require('d3')\nconst f = d3.format('0.2f')\nconst bx = require('base-x')\nconst BASE64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nconst b64 = bx(BASE64)\nconst BN = require('bn.js')\n\nconst schema = require('@filecoin-shipyard/lotus-client-schema').testnet\n  .fullNode\n\nfunction b64ToBn (b64) {\n  if (b64 === '') return window.BigInt(0)\n  var bin = atob(b64)\n  var hex = []\n\n  bin.split('').forEach(function (ch) {\n    var h = ch.charCodeAt(0).toString(16)\n    if (h.length % 2) {\n      h = '0' + h\n    }\n    hex.push(h)\n  })\n\n  return window.BigInt('0x' + hex.join(''))\n}\n\nconst partitionSchema = height => {\n  console.log('>>>> HEIGHT', height)\n  if (!height || height >= 138720) {\n    return {\n      Sectors: 'buffer',\n      Unproven: 'buffer',\n      Faults: 'buffer',\n      Recoveries: 'buffer',\n      Terminated: 'buffer',\n      ExpirationEpochs: 'cid',\n      EarlyTerminated: 'cid',\n      LivePower: {\n        a: 'bigint',\n        b: 'bigint'\n      },\n      UnprovenPower: {\n        a: 'bigint',\n        b: 'bigint'\n      },\n      FaultyPower: {\n        a: 'bigint',\n        b: 'bigint'\n      },\n      RecoveringPower: {\n        a: 'bigint',\n        b: 'bigint'\n      }\n    }\n  }\n  return {\n    Sectors: 'buffer',\n    Faults: 'buffer',\n    Recoveries: 'buffer',\n    Terminated: 'buffer',\n    ExpirationEpochs: 'cid',\n    EarlyTerminated: 'cid',\n    LivePower: {\n      a: 'bigint',\n      b: 'bigint'\n    },\n    FaultyPower: {\n      a: 'bigint',\n      b: 'bigint'\n    },\n    RecoveringPower: {\n      a: 'bigint',\n      b: 'bigint'\n    }\n  }\n}\n\nconst preCommitSchema = {\n  type: 'hamt',\n  key: 'bigint',\n  value: {\n    info: {\n      seal_proof: 'int',\n      sector_number: 'int',\n      sealed_cid: 'cid',\n      seal_rand_epoch: 'int',\n      deal_ids: ['list', 'int'],\n      expiration: 'int',\n      replace_capacity: 'bool',\n      replace_sector_deadline: 'int',\n      replace_sector_partition: 'int',\n      replace_sector_number: 'int'\n    },\n    precommit_deposit: 'bigint',\n    precommit_epoch: 'int',\n    deal_weight: 'bigint',\n    verified_deal_weight: 'bigint'\n  }\n}\n\nfunction bytesToBig (p) {\n  let acc = 0n\n  for (let i = 0; i < p.length; i++) {\n    acc *= 256n\n    acc += window.BigInt(p[i])\n  }\n  return acc\n}\n\nfunction bytesToBigRev (p) {\n  let acc = new BN(0)\n  for (let i = 0; i < p.length; i++) {\n    acc = acc.mul(new BN(256))\n    acc = acc.add(new BN(p[p.length - i - 1]))\n  }\n  return acc\n}\n\nfunction nextBits (obj, n) {\n  // if (obj.left < n) throw new Error(\"out of bits\")\n  const res = obj.num.and(new BN(1).shln(n).sub(new BN(1)))\n  obj.num = obj.num.shrn(n)\n  obj.left -= n\n  return res.toNumber()\n}\n\nfunction decodeRLE (buf) {\n  const obj = {\n    left: 8 * buf.length,\n    num: bytesToBigRev(buf)\n  }\n  const version = nextBits(obj, 2)\n  const first = nextBits(obj, 1)\n  const res = []\n  while (obj.left > 0) {\n    let b1 = nextBits(obj, 1)\n    if (b1 === 1) {\n      res.push(1)\n      continue\n    }\n    let b2 = nextBits(obj, 1)\n    if (b2 === 1) {\n      const a = nextBits(obj, 4)\n      res.push(a)\n      continue\n    }\n    let x = 0\n    let s = 0\n    for (let i = 0; true; i++) {\n      if (i === 10) {\n        throw new Error('run too long')\n      }\n      let b = nextBits(obj, 8)\n      if (b < 0x80) {\n        if (i > 9 || (i === 9 && b > 1)) {\n          throw new Error('run too long')\n        } else if (b === 0 && s > 0) {\n          throw new Error('invalid run')\n        }\n        x |= b << s\n        break\n      }\n      x |= (b & 0x7f) << s\n      s += 7\n    }\n    res.push(x)\n  }\n  return { first, runs: res }\n}\n\nfunction decodeRLE2 (buf) {\n  const { first, runs } = decodeRLE(buf)\n  let cur = first\n  const res = []\n  let acc = 0\n  for (let r of runs) {\n    for (let i = 0; i < r; i++) {\n      if (cur === 1) res.push(acc)\n      acc++\n    }\n    cur = 1 - cur\n  }\n  return res\n}\n\nfunction decodeRLE3 (runs) {\n  let cur = 0\n  const res = []\n  let acc = 0\n  for (let r of runs) {\n    for (let i = 0; i < r; i++) {\n      if (cur === 1) res.push(acc)\n      acc++\n    }\n    cur = 1 - cur\n  }\n  return res\n}\n\nexport default class Filecoin {\n  constructor (endpointUrl) {\n    this.url = endpointUrl\n    const provider = new BrowserProvider(endpointUrl)\n    console.log('new endpoint', endpointUrl)\n    this.client = new LotusRPC(provider, { schema })\n    this.parents = {}\n    this.receipts = {}\n    this.minfo = {}\n  }\n\n  async getData (head, path, schema) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const node =\n      head.Height >= 138720 ? `${state}/1/${path}` : `${state}/${path}`\n    const data = (await this.client.chainGetNode(node)).Obj\n\n    const self = this\n    return await Fil.methods.decode(schema, data).asObject(async a => {\n      const res = await self.client.chainGetNode(a)\n      return res.Obj\n    })\n  }\n\n  async fetchHead () {\n    return this.client.chainHead()\n  }\n\n  // async fetchPartitionsSectors (head, miner, deadline) {\n  //   const partitions = await this.client.StateMinerPartitions(\n  //     miner,\n  //     deadline,\n  //     head.Cids\n  //   )\n  //   partitions.map(p => ({\n  //     Sectors: decodeRLE3(p.AllSectors),\n  //     Faults: decodeRLE3(p.FaultySectors).reduce((acc, curr) => {\n  //       acc[curr] = true\n  //       return acc\n  //     }, {}),\n  //     Recoveries: decodeRLE2(p.RecoveringSectors).reduce((acc, curr) => {\n  //       acc[curr] = true\n  //       return acc\n  //     }, {}),\n  //     Active: decodeRLE2(p.ActiveSectors).reduce((acc, curr) => {\n  //       acc[curr] = true\n  //       return acc\n  //     }, {})\n  //   }))\n  // }\n\n  async fetchPartitionsSectors (cid, height) {\n    const node = (await this.client.chainGetNode(`${cid['/']}`)).Obj[2][2]\n    console.log('>> partition', node)\n    return node.map(partitionRaw => {\n      const partitionObj = Fil.methods.decode(\n        partitionSchema(height),\n        partitionRaw\n      )\n      return [\n        {\n          Sectors: decodeRLE2(partitionObj.Sectors),\n          Faults: decodeRLE2(partitionObj.Faults).reduce((acc, curr) => {\n            acc[curr] = true\n            return acc\n          }, {}),\n          Terminated: decodeRLE2(partitionObj.Terminated).reduce(\n            (acc, curr) => {\n              acc[curr] = true\n              return acc\n            },\n            {}\n          ),\n          Recoveries: decodeRLE2(partitionObj.Recoveries).reduce(\n            (acc, curr) => {\n              acc[curr] = true\n              return acc\n            },\n            {}\n          )\n        }\n      ]\n    })\n  }\n\n  async fetchTipsetHead (height) {\n    return await this.client.ChainGetTipSetByHeight(height, null)\n  }\n\n  async fetchPower (head) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const node =\n      head.Height >= 138720 ? `${state}/1/@Ha:t04/1` : `${state}/@Ha:t04/1`\n    const storagePowerActorRaw = (await this.client.chainGetNode(node)).Obj\n    return {\n      TotalRawBytePower: bytesToBig(b64.decode(storagePowerActorRaw[0])),\n      TotalBytesCommitted: bytesToBig(b64.decode(storagePowerActorRaw[1])),\n      TotalQualityAdjPower: bytesToBig(b64.decode(storagePowerActorRaw[2])),\n      TotalQABytesCommitted: bytesToBig(b64.decode(storagePowerActorRaw[3])),\n      TotalPledgeCollateral: bytesToBig(b64.decode(storagePowerActorRaw[4])),\n      ThisEpochRawBytePower: bytesToBig(b64.decode(storagePowerActorRaw[5])),\n      ThisEpochQualityAdjPower: bytesToBig(b64.decode(storagePowerActorRaw[6])),\n      ThisEpochPledgeCollateral: bytesToBig(b64.decode(storagePowerActorRaw[7]))\n    }\n  }\n\n  async fetchDeposits (hash, head) {\n    const state = await this.client.StateReadState(hash, head.Cids)\n    const { State, Balance } = state\n    const { PreCommitDeposits, LockedFunds, InitialPledge, FeeDebt } = State\n    const Available = Balance - InitialPledge - PreCommitDeposits - LockedFunds\n\n    return {\n      Balance: f(Balance / 1000000000000000000),\n      InitialPledge: f(InitialPledge / 1000000000000000000),\n      Available: f(Available / 1000000000000000000),\n      LockedFunds: f(LockedFunds / 1000000000000000000),\n      PreCommitDeposits: f(PreCommitDeposits / 1000000000000000000),\n      FeeDebt: f(FeeDebt / 1000000000000000000)\n    }\n  }\n\n  async getMiners () {\n    const cached = window.localStorage.getItem('miners')\n    const cachedTime = window.localStorage.getItem('time')\n    if (cached && cachedTime && Date.now() - +cachedTime < 1000)\n      return JSON.parse(cached)\n\n    const json = await (\n      await fetch('https://filfox.info/api/v0/miner/list/power?pageSize=1000')\n    ).json()\n    const miners = json.miners.reduce((acc, curr) => {\n      acc[curr.address] = curr\n      return acc\n    }, {})\n\n    window.localStorage.setItem('miners', JSON.stringify(miners))\n    window.localStorage.setItem('time', Date.now())\n\n    return miners\n  }\n\n  async fetchDeadlinesProxy (miner, head) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const node =\n      head.Height >= 138720\n        ? `${state}/1/@Ha:${miner}/1/12`\n        : `${state}/@Ha:${miner}/1/11`\n    const deadlinesCids = (await this.client.chainGetNode(node)).Obj[0]\n    console.log('d - ', node)\n\n    const deadlines = await asyncPool(24, deadlinesCids, async minerCid => {\n      const deadline = (await this.client.ChainGetNode(`${minerCid['/']}`)).Obj\n      console.log('d - ', `${minerCid['/']}`)\n      return {\n        Partitions: deadline[0],\n        LiveSectors: deadline[4],\n        TotalSectors: deadline[5],\n        FaultyPower: { Raw: Number(b64ToBn(deadline[6][0])) }\n      }\n    })\n    return deadlines\n  }\n\n  async fetchMinerInfo (hash, head) {\n    return this.client.StateMinerInfo(hash, head.Cids)\n  }\n\n  async fetchDeadlines (hash, head) {\n    const [deadline, deadlines] = await Promise.all([\n      this.client.StateMinerProvingDeadline(hash, head.Cids),\n      this.fetchDeadlinesProxy(hash, head)\n    ])\n    console.log('>>> got deadline and deadline')\n\n    const nextDeadlines = [...Array(48)].map((_, i) => ({\n      ...deadlines[(deadline.Index + i) % 48],\n      Close: deadline.Close + i * 60,\n      Index: (deadline.Index + i) % 48\n    }))\n\n    const SectorsCount = deadlines\n      .map(d => +d.LiveSectors)\n      .reduce((acc, curr) => acc + curr, 0)\n\n    const FaultsCount =\n      deadlines\n        .map(d => +d.FaultyPower.Raw)\n        .reduce((acc, curr) => acc + curr, 0) /\n      (32 * 1024 * 1024 * 1024)\n\n    return {\n      deadlines: deadlines.map((d, i) => ({\n        ...deadlines[i],\n        Close: deadline.Close + i * 60,\n        Index: i\n      })),\n      nextDeadlines,\n      SectorsCount,\n      FaultsCount,\n      ActiveCount: SectorsCount - FaultsCount,\n      deadline\n    }\n  }\n\n  async updateMinerInfo (\n    minersInfo,\n    minerId,\n    setMinersIfMounted,\n    head,\n    filter = { deadlines: true }\n  ) {\n    const minerInfo = minersInfo[minerId]\n    setMinersIfMounted({ ...minersInfo, [minerId]: { ...minerInfo } })\n\n    this.fetchMinerInfo(minerId, head)\n      .then(info => {\n        minerInfo.info = info\n        setMinersIfMounted({ ...minersInfo, [minerId]: { ...minerInfo } })\n      })\n      .catch(e => {\n        console.error('failed to fetch miner info')\n      })\n\n    if (filter.deadlines)\n      this.fetchDeadlines(minerId, head)\n        .then(deadlines => {\n          minerInfo.deadlines = deadlines\n          setMinersIfMounted({\n            ...minersInfo,\n            [minerId]: { ...minerInfo }\n          })\n          console.log('deadlines setting')\n        })\n        .catch(e => {\n          console.error('failed to fetch deadlines')\n        })\n\n    this.fetchDeposits(minerId, head)\n      .then(deposits => {\n        minerInfo.deposits = deposits\n        setMinersIfMounted({\n          ...minersInfo,\n          [minerId]: { ...minerInfo }\n        })\n      })\n      .catch(e => {\n        console.error('failed to fetch deposits')\n      })\n\n    this.fetchPreCommittedSectors(minerId, head)\n      .then(preCommits => {\n        minerInfo.preCommits = preCommits\n        setMinersIfMounted({\n          ...minersInfo,\n          [minerId]: { ...minerInfo }\n        })\n      })\n      .catch(e => {\n        console.error('failed to fetch precommitted sectors', e)\n      })\n  }\n\n  async fetchPreCommittedSectors (hash, head) {\n    const node = head.Height >= 138720 ? `@Ha:${hash}/1/6` : `@Ha:${hash}/1/5`\n    const preCommittedSectors = await this.getData(head, node, preCommitSchema)\n    const PreCommitDeadlines = d3\n      .groups(\n        Object.keys(preCommittedSectors).map(d => ({\n          SectorNumber: preCommittedSectors[d].info.sector_number,\n          Expiry: preCommittedSectors[d].precommit_epoch + (10000 + 60 + 150)\n        })),\n        d => d.Expiry\n      )\n      .map(([Expiry, Sectors]) => ({\n        Expiry,\n        Sectors: Sectors.map(d => d.SectorNumber)\n      }))\n      .sort((a, b) => a.Expiry - b.Expiry)\n\n    return {\n      PreCommitDeadlines,\n      Count: Object.keys(preCommittedSectors).length\n    }\n  }\n\n  async fetchSectors (hash, head) {\n    const sectorList = await this.client.StateMinerSectors(\n      hash,\n      null,\n      head.Cids\n    )\n    const Sectors = sectorList.reduce((acc, curr) => {\n      acc[curr.ID] = { number: curr.ID, info: curr }\n      return acc\n    }, {})\n\n    const sectorsCount = Object.keys(Sectors).length\n    return { sectorsCount, Sectors }\n  }\n\n  async parentMessages (cid) {\n    if (cid['/'] in this.parents) {\n      return this.parents[cid['/']]\n    }\n    const msgs = await this.client.chainGetParentMessages(cid)\n    this.parents[cid['/']] = msgs\n    return msgs\n  }\n\n  async receiptParentMessages (cid) {\n    if (cid['/'] in this.receipts) {\n      return this.receipts[cid['/']]\n    }\n    const r = await this.client.chainGetParentReceipts(cid)\n    this.receipts[cid['/']] = r\n    return r\n  }\n\n  async parentAndReceiptsMessages (cid, ...methods) {\n    const msgs = await this.parentMessages(cid)\n    const receipts = await this.receiptParentMessages(cid)\n    if (msgs.length != receipts.length) {\n      throw new Error('invalid length')\n    }\n    return zip(msgs, receipts).filter(entry => {\n      const [tx, r] = entry\n      const exit = r.ExitCode == 0\n      var inMethod = true\n      if (methods.length > 0) {\n        inMethod = methods.includes(tx.Message.Method)\n      }\n      return exit && inMethod\n    })\n  }\n\n  async getMinerPower (tipset, height, miner) {\n    if (tipset['/'] in this.minfo) {\n      return this.minfo[tipset['/']]\n    }\n    //let m = await this.client.minerGetBaseInfo(miner,height,tipset)\n    let m = await this.client.stateMinerPower(miner, tipset)\n    this.minfo[tipset['/']] = m\n    return m\n  }\n\n  async fetchGenesisActors (head) {\n    const [Supply, Reward, Power] = await Promise.all([\n      this.client.StateCirculatingSupply(head.Cids),\n      this.client.StateReadState('f02', head.Cids),\n      this.client.StateReadState('f04', head.Cids)\n    ])\n\n    return { Supply, Reward, Power }\n  }\n\n  computeEconomics (\n    head,\n    { Supply, Reward, Power },\n    {\n      projectedDays,\n      perDurationNwRbGrowth = 10 * 2 ** 50,\n      perDurationMinerQaGrowth = 2 ** 51\n    }\n  ) {\n    const inputs = {\n      currEpoch: +head.Height,\n      nwqap: +Power.State.ThisEpochQualityAdjPower,\n      nwqapP: +Power.State.ThisEpochQAPowerSmoothed.PositionEstimate / 2 ** 128,\n      nwqapV: +Power.State.ThisEpochQAPowerSmoothed.VelocityEstimate / 2 ** 128,\n      nwCircSupply: +Supply / 1e18,\n      perEpochRewardP:\n        +Reward.State.ThisEpochRewardSmoothed.PositionEstimate /\n        (2 ** 128 * 1e18),\n      perEpochRewardV:\n        +Reward.State.ThisEpochRewardSmoothed.VelocityEstimate /\n        (2 ** 128 * 1e18),\n      nwCumsumRealized: +Reward.State.CumsumRealized,\n      perDurationNwRbGrowth,\n      projectedDays,\n      perDurationMinerQaGrowth\n    }\n\n    const econ = new Economics(inputs)\n\n    return econ.summary()\n  }\n}\n\nconst zip = (arr, ...arrs) => {\n  return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]))\n}\n","import React from 'react'\n\nexport default function Summary ({ title, url, desc }) {\n  return (\n    <div className='summary col-sm'>\n      <div className='summary-title'>\n        {url ? <a href={url}>{title}</a> : <>{title}</>}\n      </div>\n      <div className='summary-desc'>{desc}</div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Summary from '../components/Summary'\n\nconst d3 = require('d3')\nconst f = d3.format(',')\nconst f0 = d3.format(',.0f')\nconst f3 = d3.format(',.3f')\nconst f1 = d3.format(',.1f')\n\nexport default function Home ({ miners, client, actors, head }) {\n  const econSummary =\n    actors &&\n    client.computeEconomics(head, actors, {\n      projectedDays: 1\n    })\n\n  const WindowPoStGasAvg = 534297287\n  const PreCommitGasAvg = 21701073\n  const ProveCommitGasAvg = 47835932\n\n  const [minersInfo, setMinersInfo] = useState({})\n\n  useEffect(() => {\n    setMinersInfo(miners)\n  }, [miners])\n\n  let count = 0\n\n  useEffect(() => {\n    if (!client || !head || !miners) {\n      return\n    }\n\n    console.log('reload miners list', count++)\n\n    let mounted = true\n    const setMinersIfMounted = info => {\n      if (mounted) setMinersInfo(info)\n    }\n\n    Object.keys(miners).forEach(minerId => {\n      client.updateMinerInfo(minersInfo, minerId, setMinersIfMounted, head, {\n        deadlines: false\n      })\n    })\n    return () => {\n      mounted = false\n    }\n  }, [client, head, miners])\n\n  return (\n    <section id='home' className='container'>\n      {actors && (\n        <div id='actors' className='section'>\n          <h3>Tokens</h3>\n          <div className='grid'>\n            <Summary\n              title={`${f0(+actors.Supply / 1e18 || 0)} FIL`}\n              desc='Circulating Supply'\n            />\n            {/* <Summary\n              title={`${f0(+actors.Supply.FilBurnt / 1e18 || 0)} FIL`}\n              desc='Burnt'\n            />\n            <Summary\n              desc='Locked'\n              title={`${f0(+actors.Supply.FilLocked / 1e18 || 0)} FIL`}\n            /> */}\n          </div>\n        </div>\n      )}\n      {actors && (\n        <div id='actors2' className='section'>\n          <h3>Power</h3>\n          <div className='grid'>\n            <Summary\n              title={`${f0(\n                +actors.Power.State.TotalBytesCommitted / 2 ** 50 || 0\n              )} PiB`}\n              desc='Network Raw'\n            />\n            <Summary\n              title={`${f3(\n                +actors.Reward.State.ThisEpochReward / 5 / 1e18 || 0\n              )} FIL`}\n              desc='Block Reward'\n            />\n            <Summary\n              desc='Active Miners'\n              title={`${f0(+actors.Power.State.MinerAboveMinPowerCount || 0)}`}\n            />\n          </div>\n        </div>\n      )}\n      {econSummary && (\n        <div id='economics' className='section'>\n          <h3>Economics</h3>\n          <div className='grid'>\n            {econSummary && (\n              <Summary\n                title={`${f3(econSummary.sectorIp || 0)} FIL`}\n                desc='Sector Pledge'\n              />\n            )}\n\n            {econSummary && (\n              <Summary\n                title={`${f3(econSummary.sectorProjectedReward || 0)} FIL`}\n                desc='Sector 360-Days Reward'\n              />\n            )}\n\n            {econSummary && (\n              <Summary\n                desc='Sector Fault Fee'\n                title={`${f3(econSummary.sectorFaultFee || 0)} FIL`}\n              />\n            )}\n          </div>\n          These numbers are approximate projections based on the current network\n          state and may be incorrect, do your own research.\n        </div>\n      )}\n      <div className='section'>\n        <h3>Gas</h3>\n        See <Link to='/gas'> here </Link> for a detailed gas analysis.\n      </div>\n      <div className='spacerace'>\n        <h3>Top miners</h3>\n        <table class='table space'>\n          <thead>\n            <tr>\n              <th scope='col'>#</th>\n              <th scope='col'>Miner</th>\n              <th scope='col'>Power</th>\n              <th scope='col'>PreCommits</th>\n              <th scope='col'>Available Balance</th>\n            </tr>\n          </thead>\n          <tbody>\n            {minersInfo &&\n              miners &&\n              Object.keys(miners)\n                // .slice(0, 5)\n                .map((d, i) => (\n                  <tr key={i}>\n                    <th scope='row'>{i + 1}</th>\n                    <td align='right'>\n                      <Link to={`/miners/${miners[d].address}`}>\n                        {miners && miners[d] && miners[d].address}\n                      </Link>\n                    </td>\n                    <td align='right'>\n                      {f1(\n                        minersInfo[d] && +minersInfo[d].rawBytePower / 2 ** 50\n                      )}{' '}\n                      PiB\n                    </td>\n                    <td align='right'>\n                      {minersInfo[d] &&\n                        minersInfo[d].preCommits &&\n                        minersInfo[d].preCommits.Count}\n                    </td>\n                    <td align='right'>\n                      {minersInfo[d] &&\n                        minersInfo[d].deposits &&\n                        minersInfo[d].deposits.Available}\n                    </td>\n                    {/* S: {JSON.stringify(minersInfo)} */}\n                  </tr>\n                ))}\n          </tbody>\n        </table>\n        <div>\n          See deadlines of <Link to='/full'>top 50 miners</Link> or click on\n          individual miners or the <Link to='/status'>network status</Link>.\n        </div>\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function WindowPoStStatus ({ deadline, head }) {\n  const d = deadline\n\n  return (\n    <div className='deadlines windowpost'>\n      <div className={d.LiveSectors === 0 ? 'deadline opacity5' : 'deadline'}>\n        <div className='out'>\n          In {d.Close - head.Height}\n          {/* <span className=\"epochs\">epochs</span> */}\n        </div>\n        <div className='hddWrapper'>\n          <div className='in'>\n            {Math.round((d.LiveSectors * 32) / 1024)} TiB\n          </div>\n          <div className='hdds'>\n            {[\n              ...Array(\n                Math.ceil(\n                  Math.round(\n                    (d.LiveSectors * 32) / 1024 -\n                      +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                  ) / 8\n                )\n              )\n            ].map((v, i) => (\n              <div key={i} className='hdd'>\n                {' '}\n              </div>\n            ))}\n            {[\n              ...Array(\n                Math.ceil(\n                  Math.round(+d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)) /\n                    8\n                )\n              )\n            ].map((v, i) => (\n              <div key={i} className='hdd faulty'>\n                {' '}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport asyncPool from 'tiny-async-pool'\nimport { Link } from 'react-router-dom'\nimport Summary from '../components/Summary'\nimport WindowPoStStatus from '../components/WindowPoStStatus'\n\nconst d3 = require('d3')\nconst f2 = d3.format(',.2f')\nconst bytesToPiB = 1024 * 1024 * 1024 * 1024 * 1024\n\nexport default function Status ({ client, spa, head, miners }) {\n  const [minersDeadlines, setMinersDeadlines] = useState({})\n  const [minersDeadlines2880, setMinersDeadlines2880] = useState({})\n  const [prev60, setPrev60] = useState()\n  const [prev120, setPrev120] = useState()\n\n  useEffect(() => {\n    if (!head) return\n\n    const fetchingPrevious = async () => {\n      const getPrev = async diff => {\n        const prevHead = await client.fetchTipsetHead(head.Height - diff)\n        const prevSpa = await client.fetchPower(prevHead)\n        return prevSpa\n      }\n\n      const [prev60, prev120] = await Promise.all([getPrev(60), getPrev(120)])\n\n      await setPrev60(prev60)\n      await setPrev120(prev120)\n    }\n    fetchingPrevious()\n  }, [head])\n\n  useEffect(() => {\n    let mounted = true\n    if (!head) return\n\n    const minersList = Object.keys(miners)\n      .slice(0, 40)\n      .map(d => miners[d].address)\n    asyncPool(5, minersList, async minerId => {\n      if (!mounted) return\n      const deadlines = await client.fetchDeadlines(minerId, head)\n      if (!mounted) return\n      const prevHead = await client.fetchTipsetHead(head.Height - 2880)\n      if (!mounted) return\n      const deadlines2880 = await client.fetchDeadlines(minerId, prevHead)\n      if (!mounted) return\n      minersDeadlines[minerId] = deadlines\n      minersDeadlines2880[minerId] = deadlines2880\n      await setMinersDeadlines({ ...minersDeadlines })\n      return await setMinersDeadlines2880({ ...minersDeadlines2880 })\n    })\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, miners])\n\n  return (\n    <section className='container'>\n      <div id='deposits' className='section'>\n        <div className='grid'>\n          {spa && (\n            <>\n              <Summary\n                title={f2(parseInt(spa.TotalQualityAdjPower) / bytesToPiB)}\n                desc='Total QA Power'\n              />\n            </>\n          )}\n          {prev60 && spa && (\n            <>\n              <Summary\n                title={f2(\n                  parseInt(\n                    spa.TotalQualityAdjPower - prev60.TotalQualityAdjPower\n                  ) / bytesToPiB\n                )}\n                desc='60 Epochs delta'\n              />\n            </>\n          )}\n          {prev120 && spa && (\n            <>\n              <Summary\n                title={f2(\n                  parseInt(\n                    spa.TotalQualityAdjPower - prev120.TotalQualityAdjPower\n                  ) / bytesToPiB\n                )}\n                desc='120 Epochs delta'\n              />\n            </>\n          )}\n        </div>\n      </div>\n      Listing WindowPoSt duties of the top 50 miners.\n      {miners &&\n        Object.keys(miners)\n          .slice(0, 40)\n          .map((d, i) => (\n            <div className='flex' key={i}>\n              <Link to={`/miners/${miners[d].address}`}>\n                {miners[d].address}\n              </Link>\n              {minersDeadlines && minersDeadlines[miners[d].address] && (\n                <WindowPoStStatus\n                  head={head}\n                  deadline={\n                    minersDeadlines[miners[d].address].nextDeadlines[47]\n                  }\n                />\n              )}\n              {minersDeadlines2880 &&\n                minersDeadlines2880[miners[d].address] && (\n                  <WindowPoStStatus\n                    head={head}\n                    deadline={\n                      minersDeadlines2880[miners[d].address].nextDeadlines[47]\n                    }\n                  />\n                )}\n            </div>\n          ))}\n    </section>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function WindowPoSt ({ minerId, deadlines, head, link, out }) {\n  if (!link) {\n    link = d => `/miners/${minerId}/deadlines/${d.Index}`\n  }\n  if (!out) {\n    out = ({ d, head, i }) => `In ${d.Close - head.Height}`\n  }\n  if (!head || !deadlines) {\n    return <></>\n  }\n  return (\n    <div className='deadlines windowpost'>\n      {deadlines &&\n        deadlines.map((d, i) => (\n          <div\n            key={i}\n            className={d.LiveSectors === 0 ? 'deadline opacity5' : 'deadline'}\n          >\n            <Link to={link(d)}>\n              <div className='out'>\n                {out({ d, head, i })}\n                {/* <span className=\"epochs\">epochs</span> */}\n              </div>\n              <div className='hddWrapper'>\n                <div className='in'>\n                  {Math.round((d.LiveSectors * 32) / 1024)} TiB\n                </div>\n                <div className='hdds'>\n                  {[\n                    ...Array(\n                      Math.ceil(\n                        Math.round(\n                          (d.LiveSectors * 32) / 1024 -\n                            +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                        ) / 8\n                      )\n                    )\n                  ].map((v, i) => (\n                    <div key={i} className='hdd'>\n                      {' '}\n                    </div>\n                  ))}\n                  {/* {Math.round(+d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024))} */}\n                  {[\n                    ...Array(\n                      Math.ceil(\n                        Math.round(\n                          +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                        ) / 8\n                      )\n                    )\n                  ].map((v, i) => (\n                    <div key={i} className='hdd faulty'>\n                      {' '}\n                    </div>\n                  ))}\n                </div>\n              </div>\n              {/* <div className=\"partitions\">\n                            {\n                            [...Array(Math.ceil(d.LiveSectors/2349))].map(v =>\n                            <div className='partition'></div>\n                            )\n                            }\n                            </div> */}\n            </Link>\n          </div>\n        ))}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport asyncPool from 'tiny-async-pool'\n\nimport WindowPoSt from '../components/WindowPoSt'\n\nexport default function Full ({ miners, client }) {\n  const [minersDeadlines, setMinersDeadlines] = useState({})\n  const [head, setHead] = useState()\n\n  useEffect(() => {\n    const fetchingHead = async () => {\n      const fetched = await client.fetchHead()\n      setHead(fetched)\n    }\n    fetchingHead()\n  }, [client])\n\n  useEffect(() => {\n    let mounted = true\n    if (!head) return\n\n    const minersList = Object.keys(miners)\n      .slice(0, 50)\n      .map(d => miners[d].address)\n    asyncPool(5, minersList, async minerId => {\n      if (!mounted) return\n      const deadlines = await client.fetchDeadlines(minerId, head)\n      if (!mounted) return\n      minersDeadlines[minerId] = deadlines.nextDeadlines\n      return await setMinersDeadlines({ ...minersDeadlines })\n    })\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, miners])\n\n  return (\n    <section id='LookUp' className='container'>\n      Listing WindowPoSt duties of the top 50 miners.\n      {miners &&\n        Object.keys(miners)\n          .slice(0, 50)\n          .map((d, i) => (\n            <div key={i}>\n              <Link to={`/miners/${miners[d].address}`}>\n                {miners[d].address}\n              </Link>\n\n              <WindowPoSt\n                deadlines={minersDeadlines[miners[d].address]}\n                head={head}\n              />\n            </div>\n          ))}\n    </section>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function MinerBar ({\n  client,\n  miners,\n  minerId,\n  deadlineId,\n  miner\n}) {\n  return (\n    <div className='section minerbar'>\n      {/* <div>{miner && miner.info && JSON.stringify(miner.info)}</div> */}\n      <div className='minerId'>\n        {!deadlineId && (\n          <>\n            <Link to={`/miners/${minerId}`}>{minerId}</Link>\n            <span className='tinyarrow'>\n              <a href={`https://filfox.info/en/address/${minerId}`}>↗</a>\n            </span>\n            {miner && miner.deposits && +miner.deposits.FeeDebt !== 0 && (\n              <span className='rekt'>DEBT</span>\n            )}\n          </>\n        )}\n        {deadlineId && (\n          <>\n            <Link to={`/miners/${minerId}/deadlines/${deadlineId}`}>\n              Deadline {deadlineId}\n            </Link>\n          </>\n        )}\n      </div>\n      {deadlineId && (\n        <>\n          <div className='backto'>\n            <Link to={`/miners/${minerId}`}>\n              See miner\n              <span className='bolder'> {minerId}</span>\n            </Link>\n          </div>\n        </>\n      )}\n      {!deadlineId && (\n        <div>\n          {miners && miners[minerId] && miners[minerId].tag && (\n            <span className='miner-name'>\n              {miners[minerId].tag.name}\n\n              {miners && miners[minerId].location && (\n                <span> {miners[minerId].location.flagEmoji}</span>\n              )}\n            </span>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams, withRouter } from 'react-router-dom'\nimport ReactTooltip from 'react-tooltip'\nimport WindowPoSt from '../components/WindowPoSt'\nimport Summary from '../components/Summary'\nimport asyncPool from 'tiny-async-pool'\nimport MinerBar from '../components/MinerBar'\nconst d3 = require('d3')\nconst f = d3.format(',')\nconst f2 = d3.format(',.1f')\n\nfunction Deadline ({ miners, client, head }) {\n  const { minerId, deadlineId } = useParams()\n  const [partitions, setPartitions] = useState()\n  // const [miner, setMiner] = useState({ id: minerId })\n  const [minerDeadlines, setMinerDeadlines] = useState({})\n  const [todayDeadlines, setTodayDeadlines] = useState()\n\n  const deadlinesArray = () => {\n    return Object.keys(minerDeadlines)\n      .sort((a, b) => +a - +b)\n      .map(k => [k, minerDeadlines[k]])\n  }\n\n  const deadlineArray = i => {\n    return deadlinesArray()\n      .map(([epoch, deadlines]) => {\n        return deadlines.deadlines[i]\n      })\n      .flat()\n  }\n\n  useEffect(() => {\n    if (!todayDeadlines) return\n\n    console.log('>> today is set', todayDeadlines)\n    client\n      .fetchPartitionsSectors(todayDeadlines.deadlines[deadlineId].Partitions)\n      .then(d => {\n        setPartitions(d)\n      })\n      .catch(e => {\n        console.error('failed to load sectors')\n      })\n  }, [todayDeadlines])\n\n  useEffect(() => {\n    if (!minerId || !head || !deadlineId) {\n      return\n    }\n\n    let mounted = true\n    let firstTime = true\n    const continueLoad = () => firstTime || mounted\n\n    const days = Math.ceil(head.Height / 2880)\n    const epochs = [...Array(days)]\n      .map((_, i) => ({\n        height: i * 2880 <= head.Height ? i * 2880 : head.Height,\n        day: days - i - 1\n      }))\n      .reverse()\n\n    console.log('>>> epochs', epochs)\n\n    if (todayDeadlines) {\n      return\n    }\n\n    try {\n      asyncPool(40, epochs, async ({ day, height }) => {\n        let prevHead\n        try {\n          prevHead = await client.fetchTipsetHead(height)\n          if (!continueLoad()) return\n        } catch (e) {\n          console.log('could not fetch head', minerId, day, height, e)\n          return\n        }\n\n        try {\n          const deadlines = await client.fetchDeadlines(minerId, prevHead)\n          if (!continueLoad()) return\n          minerDeadlines[day] = deadlines\n          setMinerDeadlines({ ...minerDeadlines })\n          if (day === 0) {\n            setTodayDeadlines(deadlines)\n          }\n        } catch (e) {\n          console.log('could not find', minerId, day, height, e)\n        }\n      })\n    } catch (e) {\n      console.log('trouble with ', e)\n    }\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, minerId, deadlineId, todayDeadlines])\n\n  return (\n    <section className='container'>\n      <MinerBar\n        client={client}\n        miners={miners}\n        minerId={minerId}\n        deadlineId={deadlineId}\n      />\n      <div className='section wpost'>\n        <div className='grid'>\n          {minerDeadlines && minerDeadlines[0] && (\n            <Summary\n              title={`${f2(\n                (+minerDeadlines[0].deadlines[deadlineId].LiveSectors * 32) /\n                  1024\n              )} TiB`}\n              desc={`${f(\n                minerDeadlines[0].deadlines[deadlineId].LiveSectors\n              )} Live Sectors`}\n            />\n          )}\n          {minerDeadlines && minerDeadlines[0] && (\n            <Summary\n              title={`${f2(\n                +minerDeadlines[0].deadlines[deadlineId].FaultyPower.Raw /\n                  (1024 * 1024 * 1024 * 1024)\n              )} TiB`}\n              desc={`${f(\n                +minerDeadlines[0].deadlines[deadlineId].FaultyPower.Raw /\n                  ((1024 * 1024 * 1024 * 1024) / 32)\n              )} Faulty Sectors`}\n            />\n          )}\n        </div>\n      </div>\n      <div className='section wpost'>\n        <div className='row'>\n          <div className='col section-title'>\n            <h3>History</h3>\n            <a data-tip data-for='wpost-desc'>\n              (what is this?)\n            </a>\n            <ReactTooltip id='wpost-desc' effect='solid' place='top'>\n              <span>\n                List of 48 WindowPoSt submission deadlines ordered by due time\n                (in epochs).\n                <br />\n                Bars represent ~8TB disks to be proven, white are healthy disks,\n                red are faulty.\n              </span>\n            </ReactTooltip>\n          </div>\n        </div>\n        <WindowPoSt\n          link={d => `/miners/${minerId}/deadlines/${deadlineId}`}\n          deadlines={deadlineArray(deadlineId)}\n          head={head}\n          out={({ d, head, i }) => (i === 0 ? `Today` : `${i}d ago`)}\n        />\n      </div>\n      <div className='section sectors'>\n        <div className='row'>\n          <div className='col section-title'>\n            <h3>Sectors</h3>\n            <a data-tip data-for='sectors-desc'>\n              (what is this?)\n            </a>\n            <ReactTooltip id='sectors-desc' effect='solid' place='top'>\n              <span>Each square is a 32GiB sector.</span>\n            </ReactTooltip>\n          </div>\n        </div>\n        {partitions && (\n          <div>\n            {partitions.map((partition, i) => (\n              <div key={i}>\n                <h4>\n                  Partition {i}{' '}\n                  {Object.keys(partition[0].Faults).length ===\n                    partition[0].Sectors.length && (\n                    <span className='rekt'>REKT</span>\n                  )}\n                </h4>\n                <div className='s-partition'>\n                  {partition[0].Sectors.map(sector => (\n                    <div\n                      key={sector}\n                      className={`s-sector ${partition[0].Faults[sector] &&\n                        'faulty'} ${partition[0].Terminated[sector] &&\n                        'terminated'} ${partition[0].Recoveries[sector] &&\n                        'recovering'}`}\n                    >\n                      <span>{sector}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </section>\n  )\n}\n\nexport default withRouter(Deadline)\n","import React, { useState, useEffect } from 'react'\nimport { useParams, withRouter } from 'react-router-dom'\n\nimport Summary from '../components/Summary'\nimport ReactTooltip from 'react-tooltip'\nimport WindowPoSt from '../components/WindowPoSt'\nimport MinerBar from '../components/MinerBar'\n\nconst d3 = require('d3')\nconst f = d3.format(',')\nconst f2 = d3.format(',.0f')\n\nfunction MinerInfo ({ client, miners, head, actors }) {\n  const { minerId } = useParams()\n  const [minersInfo, setMinersInfo] = useState({ [minerId]: { id: minerId } })\n\n  const sectorFaultFee =\n    actors &&\n    client.computeEconomics(head, actors, {\n      projectedDays: 1\n    }).sectorFaultFee\n\n  // On new (hash or head): fetch miner\n  useEffect(() => {\n    if (!minerId || !head || !client) {\n      return\n    }\n\n    let mounted = true\n    const setMinersIfMounted = info => {\n      if (mounted) setMinersInfo(info)\n    }\n\n    client.updateMinerInfo(minersInfo, minerId, setMinersIfMounted, head)\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, minerId])\n\n  if (!minerId || !head || !minersInfo[minerId]) {\n    return <></>\n  }\n\n  const miner = minersInfo[minerId]\n\n  return (\n    <section className='container'>\n      <MinerBar\n        client={client}\n        miners={miners}\n        minerId={minerId}\n        miner={miner}\n      />\n      <div id='deposits' className='section'>\n        <div className='grid'>\n          {miner.deposits && (\n            <Summary\n              title={`${f(miner.deposits.Balance || 0)} FIL`}\n              desc='Balance'\n            />\n          )}\n\n          {miner.deposits && (\n            <Summary\n              title={`${f(miner.deposits.Available || 0)} FIL`}\n              desc='Available'\n            />\n          )}\n\n          {miner.deposits && (\n            <Summary\n              desc='Vesting'\n              title={`${f(miner.deposits.LockedFunds || 0)} FIL`}\n            />\n          )}\n        </div>\n        <div className='grid grid-4'>\n          {miner.deposits && (\n            <Summary\n              title={`${f(miner.deposits.InitialPledge || 0)} FIL`}\n              desc='Initial Pledge'\n            />\n          )}\n          {miner.deposits && (\n            <Summary\n              desc='PreCommit Deposit'\n              title={`${f(miner.deposits.PreCommitDeposits || 0)} FIL`}\n            />\n          )}\n          {miner.deposits && (\n            <Summary\n              title={`${f(miner.deposits.FeeDebt || 0)} FIL`}\n              desc='Fee Debt'\n            />\n          )}\n          {miner.deposits && sectorFaultFee && (\n            <Summary\n              title={`${f2(\n                (+miner.deposits.Available + +miner.deposits.LockedFunds) /\n                  +sectorFaultFee || 0\n              )}`}\n              desc='Faults to Debt'\n            />\n          )}\n        </div>\n      </div>\n\n      <div id='sectors'>\n        <div className='grid grid-4'>\n          {miner.deadlines && (\n            <Summary\n              title={`${f2((miner.deadlines.SectorsCount * 32) / 1024)} TiB`}\n              desc={`${f(miner.deadlines.SectorsCount || 0)} Total Sectors`}\n            />\n          )}\n          {miner.deadlines && (\n            <Summary\n              title={`${f2((miner.deadlines.ActiveCount * 32) / 1024)} TiB`}\n              desc={`${f(miner.deadlines.ActiveCount || 0)} Active Sectors`}\n            />\n          )}\n          {miner.deadlines && (\n            <Summary\n              title={`${f2((miner.deadlines.FaultsCount * 32) / 1024)} TiB`}\n              desc={`${f(miner.deadlines.FaultsCount || 0)} Faulty Sectors`}\n            />\n          )}\n          {miner.preCommits && (\n            <Summary title={f(miner.preCommits.Count || 0)} desc='PreCommits' />\n          )}\n        </div>\n      </div>\n\n      {miner.deadlines && (\n        <div className='section wpost'>\n          <div className='row'>\n            <div className='col section-title'>\n              <h3>Deadlines</h3>\n              <a data-tip data-for='wpost-desc'>\n                (what is this?)\n              </a>\n              <ReactTooltip id='wpost-desc' effect='solid' place='top'>\n                <span>\n                  List of 48 WindoPoSt submission deadlines ordered by due time\n                  (in epochs).\n                  <br />\n                  Bars represent ~8TB disks to be proven, white are healthy\n                  disks, red are faulty.\n                </span>\n              </ReactTooltip>\n            </div>\n          </div>\n          <WindowPoSt\n            minerId={minerId}\n            deadlines={miner.deadlines.nextDeadlines}\n            head={head}\n          />\n        </div>\n      )}\n\n      {miner.deadlines && (\n        <div className='section'>\n          <div className='row'>\n            <div className='col section-title'>\n              <h3>Upcoming Deadline</h3>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='col'>\n              <div className='timeline'></div>\n              <ul>\n                <li>\n                  PoStSubmissions:\n                  {miner.deadlines.nextDeadlines[0].PostSubmissions}\n                </li>\n                <li>\n                  Sectors to Prove:{' '}\n                  {miner.deadlines.nextDeadlines[0].LiveSectors}\n                </li>\n                <li>Current Deadline: {miner.deadlines.deadline.Index}</li>\n                <li>\n                  FaultCutoff:{' '}\n                  {miner.deadlines.deadline.FaultCutoff - head.Height}\n                </li>\n                <li>\n                  Challenge: {miner.deadlines.deadline.Challenge - head.Height}\n                </li>\n                <li>\n                  {miner.deadlines.deadline.Open - head.Height > 0\n                    ? 'Open'\n                    : 'Opened'}\n                  : {miner.deadlines.deadline.Open - head.Height}\n                </li>\n                <li>Close: {miner.deadlines.deadline.Close - head.Height}</li>\n              </ul>\n            </div>\n            <div className='col'>\n              <WindowPoSt\n                minerId={minerId}\n                deadlines={[miner.deadlines.nextDeadlines[0]]}\n                head={head}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {miner.preCommits && (\n        <div id='provecommit' className='section'>\n          <div className='row'>\n            <div className='col section-title'>\n              <h3>New sectors</h3>\n              <a data-tip data-for='provecommit-desc'>\n                (what is this?)\n              </a>\n              <ReactTooltip id='provecommit-desc' effect='solid' place='top'>\n                <span>\n                  List of ProveCommits ordered by due time (in epochs).\n                  <br />\n                  Circles represent sectors to be proven.\n                </span>\n              </ReactTooltip>\n            </div>\n          </div>\n          <div className='deadlines provecommit'>\n            {miner.preCommits.PreCommitDeadlines.map((d, i) => (\n              <div key={i} className='deadline'>\n                <div className='out'>\n                  In {d.Expiry - head.Height}\n                  {/* <span className=\"epochs\">epochs</span> */}\n                </div>\n                <div className='hddWrapper'>\n                  <div className='in'>\n                    {Math.round(d.Sectors.length)} sectors\n                  </div>\n                  <div className='hdds'>\n                    {d.Sectors.map(v => (\n                      <div key={v} className='hdd'>\n                        {''}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </section>\n  )\n}\n\nexport default withRouter(MinerInfo)\n","export default async function () {\n  return await (await fetch('https://api3.drand.sh/health')).json()\n}\n","import React, { useState, useEffect } from 'react'\nimport Drand from '../services/drand'\n\nconst d3 = require('d3')\nconst f = d3.format(',')\n\nfunction getFilecoinExpectedHeight () {\n  const filGenesis = new Date('2020-08-24 22:00:00Z').getTime()\n  return Math.floor((Date.now() - filGenesis) / 1000 / 30)\n}\n\nexport default function TinySummary ({ client, head }) {\n  const [expected, setFilExpectedHeight] = useState(getFilecoinExpectedHeight())\n  const [round, setRound] = useState()\n\n  useEffect(() => {\n    let mounted = true\n\n    const fetchingHead = async () => {\n      Drand().then(fetched => {\n        if (!mounted) return\n        if (round && fetched.current === round.current) {\n          console.log('   repeated drand, skip')\n          return\n        }\n        console.log('   new drand', fetched)\n        setRound(fetched)\n      })\n\n      if (getFilecoinExpectedHeight() !== expected) {\n        setFilExpectedHeight(getFilecoinExpectedHeight())\n      }\n    }\n\n    fetchingHead()\n\n    const interval = setInterval(() => {\n      if (mounted) {\n        fetchingHead()\n      }\n    }, 5000)\n\n    return () => {\n      mounted = false\n      clearInterval(interval)\n      console.log('removing interval')\n    }\n  }, [client, head, round])\n\n  return (\n    <>\n      <div className='tiny-grid'>\n        {head && expected && (\n          <div>\n            Filecoin Status{' '}\n            <span>\n              {head.Height < expected\n                ? expected - head.Height === 1\n                  ? 'gathering blocks'\n                  : 'catching up'\n                : 'ok'}\n            </span>\n          </div>\n        )}\n        {head && (\n          <div className='tiny'>\n            Current Tipset{' '}\n            <a href={`https://filfox.info/en/tipset/${head.Height}`}>\n              {f(head.Height)}\n            </a>\n          </div>\n        )}\n        {expected && (\n          <div className='tiny'>\n            Expected Tipset{' '}\n            <a href={`https://filfox.info/en/tipset/${expected}`}>\n              {f(expected)}\n            </a>\n          </div>\n        )}\n        {round && (\n          <>\n            <div className='tiny'>\n              Drand Status{' '}\n              <span>\n                {round.current < round.expected ? 'catching up' : 'ok'}\n              </span>\n            </div>\n            <div className='tiny'>\n              Current Drand{' '}\n              <a href={`https://api.drand.sh/public/${round.current}`}>\n                {f(round.current)}\n              </a>\n            </div>\n            <div className='tiny'>\n              Expected Drand{' '}\n              <a href={`https://api.drand.sh/public/${round.expected}`}>\n                {f(round.expected)}\n              </a>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Chart from 'chart.js'\nimport Stats, {\n  objectMap,\n  objectFilter,\n  growthRate,\n  wpostToSectors\n} from '../services/filecoin/stats'\n\n// number of consecutive block we take the average from\nconst averageLength = 3\n\nfunction Gas ({ client, head }) {\n  const [stats, setStat] = useState()\n\n  const updateStats = async () => {\n    const s = new Stats(client, averageLength)\n    await s.fetchCids()\n    setStat(s)\n  }\n\n  useEffect(() => {\n    updateStats()\n  }, [client, head])\n\n  if (!stats) return <></>\n\n  return (\n    <div className='row'>\n      <div className='accordion col-12' id='accordionExample'>\n        <GrowthCard nstats={stats} head={head} />\n        <MinerInfoCard nstats={stats} />\n        <BiggestGasSpenderCard nstats={stats} head={head} />\n        <GasTableCard nstats={stats} head={head} />\n      </div>\n    </div>\n  )\n}\n\nfunction GrowthCard ({ nstats, head }) {\n  const [commits, setCommits] = useState({})\n  const [wposts, setWposts] = useState({})\n  const [graph, setGraph] = useState(undefined)\n  const maxRounds = 30\n  const canvasRef = useRef(null)\n  const cardRef = useRef(null)\n\n  const setCollapseEvent = g => {\n    cardRef.current.addEventListener('show.bs.collapse', function () {\n      g.update()\n    })\n    cardRef.current.addEventListener('hide.bs.collapse', function () {\n      g.update()\n    })\n  }\n\n  const options = {\n    title: {\n      display: true,\n      text: 'Growth rate and proven sectors'\n    },\n    scales: {\n      yAxes: [\n        {\n          id: 'commits',\n          type: 'linear',\n          position: 'left',\n          scaleLabel: {\n            labelString: 'Estimated Growth Rate (PB/day) ',\n            display: true\n          }\n        },\n        {\n          id: 'wposts',\n          type: 'linear',\n          position: 'right',\n          scaleLabel: {\n            labelString: 'Estimated Sectors Proven per height',\n            display: true\n          }\n        }\n      ]\n    }\n  }\n\n  const fillDataset = async () => {\n    const allSealed = await nstats.transactionsPerHeight(7)\n    const allProven = await nstats.transactionsPerHeight(5)\n    // convert those to only the number of transactions per height\n    const sealed = Object.fromEntries(\n      objectMap(allSealed, (v, k) => [k, v.length])\n    )\n    const proven = Object.fromEntries(\n      objectMap(allProven, (v, k) => [k, v.length])\n    )\n    // merge what we have with potentially new stuff - overwrite old data\n    // with new data if same height\n    const newCommits = { ...commits, ...sealed }\n    const newWposts = { ...wposts, ...proven }\n    // sort in decreasing order, take some of it then show it in reverse\n    // order\n    const rounds = objectMap(newCommits, (v, k) => k)\n      .sort((a, b) => b - a)\n      .slice(0, maxRounds)\n      .reverse()\n    // filter only rounds selected and convert to growth rate\n    const filteredCommits = objectFilter(newCommits, (v, k) =>\n      rounds.includes(k)\n    )\n    setCommits(filteredCommits)\n    const dataCommits = rounds\n      .map(r => filteredCommits[r])\n      .map(c => Math.round(growthRate(c)))\n    // filter only rounds selected and convert to number of sectors\n    const filteredPosts = objectFilter(newWposts, (v, k) => rounds.includes(k))\n    setWposts(filteredPosts)\n    const dataWposts = rounds\n      .map(r => filteredPosts[r])\n      .map(w => Math.round(wpostToSectors(w)))\n    var myGraph = graph\n    if (myGraph == undefined) {\n      const dataset = [\n        {\n          data: dataCommits,\n          borderColor: chartColors.blue,\n          fill: false,\n          label: 'Estimated growth rate in PB per day',\n          yAxisID: 'commits'\n        },\n        {\n          data: dataWposts,\n          borderColor: chartColors.red,\n          fill: false,\n          label: 'Estimated number of proven sectors per height',\n          yAxisID: 'wposts'\n        }\n      ]\n      const lineData = {\n        datasets: dataset,\n        labels: rounds\n      }\n      const ctx = canvasRef.current.getContext('2d')\n      const newGraph = new Chart(ctx, {\n        type: 'line',\n        data: lineData,\n        options: options\n      })\n      myGraph = newGraph\n      setCollapseEvent(myGraph)\n    } else {\n      myGraph.data.datasets[0].data = dataCommits\n      myGraph.data.datasets[1].data = dataWposts\n      myGraph.data.labels = rounds\n      myGraph.update()\n    }\n    setGraph(myGraph)\n  }\n\n  useEffect(() => {\n    fillDataset()\n  }, [head, nstats])\n\n  return (\n    <div className='card'>\n      <div className='card-header' id='growth'>\n        <h2>\n          <button\n            className='btn btn-link'\n            type='button'\n            data-toggle='collapse'\n            data-target='#collapseGrowth'\n            aria-expanded='true'\n            aria-controls='collapseBiggest'\n          >\n            Growth evolution\n          </button>\n        </h2>\n      </div>\n      <div\n        id='collapseGrowth'\n        ref={cardRef}\n        className='collapse'\n        aria-labelledby='growth'\n        data-parent='#accordionExample'\n      >\n        <div className='card-body'>\n          <div className='col-12'>\n            {graph == undefined && <p> Loading.... </p>}\n            <canvas ref={canvasRef}>Loading...</canvas>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction MinerInfoCard ({ nstats }) {\n  const headers = [\n    'Miner',\n    'Raw Byte Power',\n    'Ratio over total raw power',\n    'Size',\n    'Daily gas required (wpost)',\n    'Daily price FIL'\n  ]\n\n  const [minerAddr, setAddr] = useState('')\n  const [data, setData] = useState({})\n\n  const drawHeaders = v => v.map(h => <th key={h}> {h} </th>)\n  const searchMiner = async e => {\n    e.preventDefault()\n    console.log('search miner for ', minerAddr)\n    const res = await nstats.minerInfo(minerAddr)\n    setData(res)\n  }\n\n  return (\n    <div className='card'>\n      <div className='card-header' id='minerInfo'>\n        <h2>\n          <button\n            className='btn btn-link'\n            type='button'\n            data-toggle='collapse'\n            data-target='#collapseInfo'\n            aria-expanded='true'\n            aria-controls='collapseInfo'\n          >\n            Miner info search\n          </button>\n        </h2>\n      </div>\n      <div\n        id='collapseInfo'\n        className='collapse'\n        aria-labelledby='minerInfo'\n        data-parent='#accordionExample'\n      >\n        <div className='card-body'>\n          <div className='row'>\n            <div className='col-4'> </div>\n            <form>\n              <div className='form-group'>\n                <label for='minerAddress'>Miner address</label>\n                <input\n                  value={minerAddr}\n                  onChange={e => setAddr(e.target.value)}\n                  type='text'\n                  className='form-control'\n                  placeholder='Enter miner address'\n                />\n              </div>\n              <button\n                onClick={searchMiner}\n                type='submit'\n                className='btn btn-primary'\n              >\n                Search\n              </button>\n            </form>\n          </div>\n          <div className='row'>\n            <div className='col-12'>\n              <table className='table table-hover'>\n                <thead>\n                  <tr>{drawHeaders(headers)}</tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td> {minerAddr} </td>\n                    <td> {data.raw} </td>\n                    <td> {data.ratio} </td>\n                    <td> {data.size} </td>\n                    <td> {data.dailyGas} </td>\n                    <td> {data.maxDailyPrice} </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction BiggestGasSpenderCard ({ head, nstats }) {\n  const [dataset, setData] = useState({})\n  const [opts, setOpts] = useState({})\n  const [pie, setPie] = useState(undefined)\n  const maxUser = 10\n  const canvasRef = useRef(null)\n  const cardRef = useRef(null)\n\n  const setCollapseEvent = pie => {\n    cardRef.current.addEventListener('show.bs.collapse', function () {\n      pie.update()\n    })\n    cardRef.current.addEventListener('hide.bs.collapse', function () {\n      pie.update()\n    })\n  }\n\n  const fillDataset = async () => {\n    const allHeights = await nstats.biggestGasUserFor()\n    if (Object.keys(allHeights).length < 1) {\n      return\n    }\n    const sortedHeight = Object.keys(allHeights).sort((a, b) => b - a)\n    const data = allHeights[sortedHeight[0]]\n    const rawData = data.slice(0, maxUser).map(d => d[1])\n    const datasets = [\n      {\n        data: rawData,\n        backgroundColor: objectMap(chartColors, (color, name) => color).slice(\n          0,\n          maxUser\n        ),\n        label: 'transaction gas'\n      }\n    ]\n    const labels = data.slice(0, maxUser).map(d => d[0])\n    const newOpts = {\n      title: {\n        display: true,\n        text: `Gas usage at height ${sortedHeight[0]}`\n      }\n    }\n    const newDataset = {\n      datasets: datasets,\n      labels: labels\n    }\n    setOpts(newOpts)\n    setData(newDataset)\n\n    var myPie = pie\n    if (myPie == undefined) {\n      const ctx = canvasRef.current.getContext('2d')\n      const newPie = new Chart(ctx, {\n        type: 'doughnut',\n        data: newDataset,\n        options: newOpts\n      })\n      myPie = newPie\n      setCollapseEvent(myPie)\n    } else {\n      pie.data.datasets[0].data = rawData\n      pie.options = newOpts\n      pie.update()\n    }\n    setPie(myPie)\n  }\n\n  useEffect(() => {\n    fillDataset()\n  }, [head, nstats])\n\n  return (\n    <div className='card'>\n      <div className='card-header' id='biggestGas'>\n        <h2>\n          <button\n            className='btn btn-link'\n            type='button'\n            data-toggle='collapse'\n            data-target='#collapseBiggest'\n            aria-expanded='true'\n            aria-controls='collapseBiggest'\n          >\n            Biggest gas users\n          </button>\n        </h2>\n      </div>\n      <div\n        id='collapseBiggest'\n        ref={cardRef}\n        className='collapse'\n        aria-labelledby='biggestGas'\n        data-parent='#accordionExample'\n      >\n        <div className='card-body'>\n          <div className='col-12'>\n            {pie == undefined && <p> Loading.... </p>}\n            <canvas ref={canvasRef}>Loading...</canvas>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GasTableCard ({ nstats, head }) {\n  const headers = [\n    '',\n    'Average Count',\n    'Average GasUsed ',\n    'Ratio over total GasUsed',\n    'Average GasLimit',\n    'Ratio avg over total GasLimit',\n    'Ratio GasUsed over GasLimit',\n    'Ratio GasUsed over BlockLimit',\n    'Ratio GasLimit over BlockLimit'\n  ]\n  const empty = Array(headers.length - 1).fill(0)\n  const [avgGas, setAvgGas] = useState({\n    headers: headers,\n    total: empty,\n    wpost: empty,\n    pre: empty,\n    prove: empty\n  })\n\n  const updateAverage = async nstats => {\n    const totalGasUsed = await nstats.avgTotalGasUsed()\n    const totalGasLimit = await nstats.avgGasLimit()\n\n    const computeEntry = async (...method) => {\n      const nTx = await nstats.avgNumberTx(...method)\n      const gasUsed = await nstats.avgGasOfMethod(...method)\n      const gasLimit = await nstats.avgGasLimit(...method)\n      const ratioUsed = await nstats.avgRatioUsedOverTotalUsed(...method)\n      const ratioLimit = await nstats.avgRatioLimitOverTotalLimit(...method)\n      const ratioUsedLimit = await nstats.avgRatioUsedOverLimit(...method)\n      const ratioUsedBlockLimit = await nstats.avgTotalGasUsedOverTipsetLimit(\n        ...method\n      )\n      const ratioBlockLimit = await nstats.avgTotalGasLimitOverTipsetLimit(\n        ...method\n      )\n      return [\n        nTx,\n        gasUsed,\n        ratioUsed,\n        gasLimit,\n        ratioLimit,\n        ratioUsedLimit,\n        ratioUsedBlockLimit,\n        ratioBlockLimit\n      ]\n    }\n    const results = {}\n    results.headers = headers\n    results.total = await computeEntry()\n    results.wpost = await computeEntry(5)\n    results.pre = await computeEntry(6)\n    results.prove = await computeEntry(7)\n    setAvgGas(results)\n  }\n\n  useEffect(() => {\n    updateAverage(nstats)\n  }, [nstats, head])\n\n  const drawHeaders = v => v.map(h => <th key={h}> {h} </th>)\n\n  return (\n    <div className='card'>\n      <div className='card-header' id='headingOne'>\n        <h2>\n          <button\n            className='btn btn-link'\n            type='button'\n            data-toggle='collapse'\n            data-target='#collapseOne'\n            aria-expanded='false'\n            aria-controls='collapseOne'\n          >\n            Gas usage table\n          </button>\n        </h2>\n      </div>\n      <div\n        id='collapseOne'\n        className='collapse'\n        aria-labelledby='headingOne'\n        data-parent='#accordionExample'\n      >\n        <div className='card-body'>\n          <div className='row'>\n            <p>\n              {' '}\n              This table shows different statistics about the gas usage per\n              epoch. All results are averaged accross the last\n              {averageLength} epochs. You can find a complete description of\n              each column below the table.{' '}\n            </p>\n            <div className='row'>\n              <div className='col-12'>\n                <table className='table table-hover'>\n                  <thead>\n                    <tr>{drawHeaders(avgGas.headers)}</tr>\n                  </thead>\n                  <tbody>\n                    <RowInfo name='Total gas used:' values={avgGas.total} />\n                    <RowInfo name='WindowPoSt:' values={avgGas.wpost} />\n                    <RowInfo name='PreCommit:' values={avgGas.pre} />\n                    <RowInfo name='ProveCommit:' values={avgGas.prove} />\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div className='row'>\n              <div className='col-0'> </div>\n              <div className='col-11'>\n                <ul className='list-group list-group-flush'>\n                  <li className='list-group-item'>\n                    <b>Average Count:</b> number of transaction per epoch in\n                    average of the method{' '}\n                  </li>\n                  <li className='list-group-item'>\n                    <b>Average GasUsed:</b> gas used per transaction of the\n                    method\n                  </li>\n                  <li className='list-group-item'>\n                    <b>Ratio over total GasUsed:</b> Precedent number divided by\n                    the total gas used accross all epochs\n                  </li>\n                  <li className='list-group-item'>\n                    <b>Average GasLimit:</b> gas limit set per transaction of\n                    the method\n                  </li>\n                  <li className='list-group-item'>\n                    <b>Ratio over total GasLimit:</b> Precedent number divided\n                    by the total gas used accross all epochs\n                  </li>\n                  <li className='list-group-item'>\n                    <b>Ratio GasUsed over GasLimit:</b> Total gas used for the\n                    method over total gas limit set accross all epoch\n                  </li>\n                  <li className='list-group-item'>\n                    <b>Total GasUsed over BlockLimit:</b> Total gas used divided\n                    by total gas limit set per epoch\n                  </li>\n                  <li className='list-group-item'>\n                    <b>Total GasLimit over BlockLimit:</b> precedent number\n                    divided by total gas limit set per epoch\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// RowInfo is simply a row of the table filled by the main table\nfunction RowInfo (props) {\n  const showValues = vv =>\n    vv.map((v, idx) => (\n      <td key={idx.toString()}>\n        {isNaN(v) || Math.ceil(v) === v ? v : v.toFixed(2)}\n      </td>\n    ))\n\n  return (\n    <tr>\n      <td> {props.name} </td>\n      {showValues(props.values)}\n    </tr>\n  )\n}\n\nexport default withRouter(Gas)\n\nconst chartColors = {\n  red: 'rgb(255, 99, 132)',\n  orange: 'rgb(255, 159, 64)',\n  yellow: 'rgb(255, 205, 86)',\n  green: 'rgb(75, 192, 192)',\n  blue: 'rgb(54, 162, 235)',\n  purple: 'rgb(153, 102, 255)',\n  grey: 'rgb(201, 203, 207)'\n}\n","import React, { useState, useEffect } from 'react'\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\nimport Filecoin from './services/filecoin'\n\nimport Home from './views/Home'\nimport Status from './views/Status'\nimport Full from './views/Full'\nimport Deadline from './views/Deadline'\nimport MinerInfo from './views/MinerInfo'\nimport TinySummary from './components/TinySummary'\nimport Gas from './views/Gas'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\nimport './App.scss'\n\nfunction App () {\n  console.log('reloaded')\n  const [miners, setMiners] = useState()\n  const [head, setHead] = useState()\n  const [node, setNode] = useState('wss://node.glif.io/space07/lotus/rpc/v0')\n  const [client, setFilClient] = useState(new Filecoin(node))\n  const [spa, setSpa] = useState()\n  const [actors, setActors] = useState()\n\n  useEffect(() => {\n    const reload = async () => {\n      await setHead()\n      await setFilClient(new Filecoin(node))\n    }\n\n    reload()\n  }, [node])\n\n  useEffect(() => {\n    if (!head) return\n    const fetchingEcon = async () => {\n      const actors = await client.fetchGenesisActors(head)\n      setActors(actors)\n    }\n\n    fetchingEcon()\n  }, [client, head])\n\n  // useEffect(() => {\n  //   if (!head) return\n\n  //   client.fetchPower(head).then(power => {\n  //     setSpa(power)\n  //   })\n  // }, [head, client])\n\n  useEffect(() => {\n    let mounted = true\n\n    client.getMiners().then(res => {\n      if (!mounted) return\n      setMiners(res)\n    })\n\n    const fetchingHead = async () => {\n      client.fetchHead().then(fetched => {\n        if (!mounted) return\n        if (head && fetched.Height === head.Height) {\n          console.log('   repeated block, skip')\n          return\n        }\n        console.log('   new block', fetched.Height, head && head.Height)\n        setHead(fetched)\n      })\n    }\n\n    fetchingHead()\n\n    const interval = setInterval(() => {\n      if (mounted) {\n        fetchingHead()\n      }\n    }, 5000)\n\n    return () => {\n      mounted = false\n      clearInterval(interval)\n      console.log('removing interval')\n    }\n  }, [client, head])\n\n  return (\n    <Router>\n      <div className='App'>\n        <div className='container'>\n          {/* <div className='row'>\n            <div className='col'>\n              Connected to Filecoin Network via&nbsp;\n              <select onChange={e => setNode(e.target.value)} value={node}>\n                <option value='wss://lotus.jimpick.com/spacerace_api/0/node/rpc/v0'>\n                  Jim's node 0\n                </option>\n                <option value='wss://lotus.jimpick.com/spacerace_api/1/node/rpc/v0'>\n                  Jim's node 1\n                </option>\n                <option value='ws://www.border.ninja:12342/node/rpc/v0'>\n                  Border's node\n                </option>\n                <option value='wss://node.glif.io/space07/lotus/rpc/v0'>\n                  Glif's node\n                </option>\n              </select>\n            </div>\n          </div> */}\n          <TinySummary client={client} head={head} />\n        </div>\n        <header className='container-fluid'>\n          <Link to='/'>\n            <h1 id='logo' className='logo'>\n              <span>spacegap</span>\n            </h1>\n          </Link>\n        </header>\n        <div className='container'>\n          <Switch>\n            <Route path='/miners/:minerId/deadlines/:deadlineId'>\n              <Deadline client={client} miners={miners} head={head} />\n            </Route>\n            <Route path='/miners/:minerId'>\n              <MinerInfo\n                actors={actors}\n                client={client}\n                miners={miners}\n                head={head}\n              />\n            </Route>\n            <Route path='/full'>\n              <Full client={client} miners={miners} />\n            </Route>\n            <Route path='/status'>\n              <Status head={head} spa={spa} client={client} miners={miners} />\n            </Route>\n            <Route path='/gas'>\n              <Gas client={client} head={head} />\n            </Route>\n            <Route path='/'>\n              <Home\n                actors={actors}\n                client={client}\n                head={head}\n                miners={miners}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}