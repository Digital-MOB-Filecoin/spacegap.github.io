{"version":3,"sources":["services/filecoin/index.js","services/drand/index.js","views/Home.js","components/Summary.js","components/WindowPoStStatus.js","views/Status.js","components/WindowPoSt.js","views/Full.js","components/MinerBar.js","views/Deadline.js","views/MinerInfo.js","components/TinySummary.js","App.js","serviceWorker.js","index.js"],"names":["d3","require","f","format","b64","bx","BN","schema","testnet","fullNode","b64ToBn","bin","atob","hex","split","forEach","ch","h","charCodeAt","toString","length","push","window","BigInt","join","partitionSchema","Sectors","Faults","Recoveries","Terminated","ExpirationEpochs","EarlyTerminated","LivePower","a","b","FaultyPower","RecoveringPower","preCommitSchema","type","key","value","info","seal_proof","sector_number","sealed_cid","seal_rand_epoch","deal_ids","expiration","replace_capacity","replace_sector_deadline","replace_sector_partition","replace_sector_number","precommit_deposit","precommit_epoch","deal_weight","verified_deal_weight","bytesToBig","p","acc","i","bytesToBigRev","mul","add","nextBits","obj","n","res","num","and","shln","sub","shrn","left","toNumber","decodeRLE2","buf","first","x","s","Error","runs","decodeRLE","cur","r","Filecoin","endpointUrl","this","url","provider","BrowserProvider","console","log","client","LotusRPC","head","path","state","Blocks","ParentStateRoot","chainGetNode","data","Obj","self","Fil","methods","decode","asObject","chainHead","cid","node","map","partitionRaw","partitionObj","reduce","curr","height","ChainGetTipSetByHeight","storagePowerActorRaw","TotalRawBytePower","TotalBytesCommitted","TotalQualityAdjPower","TotalQABytesCommitted","TotalPledgeCollateral","ThisEpochRawBytePower","ThisEpochQualityAdjPower","ThisEpochPledgeCollateral","hash","StateReadState","Cids","precommitdeposits","State","PreCommitDeposits","locked","LockedFunds","collateral","Balance","available","cached","localStorage","getItem","JSON","parse","fetch","json","miners","address","setItem","stringify","miner","deadlinesCids","asyncPool","minerCid","ChainGetNode","deadline","Partitions","LiveSectors","TotalSectors","Raw","Number","deadlines","Promise","all","StateMinerProvingDeadline","fetchDeadlinesProxy","nextDeadlines","Array","_","Index","Close","SectorsCount","d","FaultsCount","ActiveCount","getData","preCommittedSectors","PreCommitDeadlines","groups","Object","keys","SectorNumber","Expiry","sort","Count","StateMinerSectors","sectorList","ID","number","sectorsCount","Home","id","className","slice","to","Summary","title","desc","href","WindowPoStStatus","Height","Math","round","ceil","v","f2","Status","spa","useState","minersDeadlines","setMinersDeadlines","minersDeadlines2880","setMinersDeadlines2880","prev60","setPrev60","prev120","setPrev120","useEffect","getPrev","diff","fetchTipsetHead","prevHead","fetchPower","prevSpa","fetchingPrevious","mounted","minersList","minerId","fetchDeadlines","deadlines2880","parseInt","WindowPoSt","link","out","Full","setHead","fetchHead","fetched","fetchingHead","MinerBar","deadlineId","tag","en","location","flagEmoji","withRouter","useParams","partitions","setPartitions","minerDeadlines","setMinerDeadlines","todayDeadlines","setTodayDeadlines","fetchPartitionsSectors","then","epochs","day","e","data-tip","data-for","effect","place","k","flat","partition","sector","setMiner","catch","err","error","fetchDeposits","deposits","fetchPreCommittedSectors","preCommits","fetchSectors","sectors","PostSubmissions","FaultCutoff","Challenge","Open","TinySummary","expected","current","getFilecoinExpectedHeight","filGenesis","Date","getTime","floor","now","App","setMiners","setRound","setNode","setFilClient","filExpectedHeight","setFilExpectedHeight","setSpa","reload","power","getMiners","Drand","interval","setInterval","clearInterval","onChange","target","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ac666556.chunk.js","sourcesContent":["import { LotusRPC } from '@filecoin-shipyard/lotus-client-rpc'\nimport { BrowserProvider } from '@filecoin-shipyard/lotus-client-provider-browser'\nimport Fil from 'js-hamt-filecoin'\nimport { partition } from 'd3'\nimport asyncPool from 'tiny-async-pool'\nconst d3 = require('d3')\nconst f = d3.format('0.2f')\nconst bx = require('base-x')\nconst BASE64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nconst b64 = bx(BASE64)\nconst BN = require('bn.js')\n\nconst schema = require('@filecoin-shipyard/lotus-client-schema').testnet\n  .fullNode\n\nfunction b64ToBn (b64) {\n  if (b64 === '') return 0n\n  var bin = atob(b64)\n  var hex = []\n\n  bin.split('').forEach(function (ch) {\n    var h = ch.charCodeAt(0).toString(16)\n    if (h.length % 2) {\n      h = '0' + h\n    }\n    hex.push(h)\n  })\n\n  return window.BigInt('0x' + hex.join(''))\n}\n\nconst partitionSchema = {\n  Sectors: 'buffer',\n  Faults: 'buffer',\n  Recoveries: 'buffer',\n  Terminated: 'buffer',\n  ExpirationEpochs: 'cid',\n  EarlyTerminated: 'cid',\n  LivePower: {\n    a: 'bigint',\n    b: 'bigint'\n  },\n  FaultyPower: {\n    a: 'bigint',\n    b: 'bigint'\n  },\n  RecoveringPower: {\n    a: 'bigint',\n    b: 'bigint'\n  }\n}\n\nconst preCommitSchema = {\n  type: 'hamt',\n  key: 'bigint',\n  value: {\n    info: {\n      seal_proof: 'int',\n      sector_number: 'int',\n      sealed_cid: 'cid',\n      seal_rand_epoch: 'int',\n      deal_ids: ['list', 'int'],\n      expiration: 'int',\n      replace_capacity: 'bool',\n      replace_sector_deadline: 'int',\n      replace_sector_partition: 'int',\n      replace_sector_number: 'int'\n    },\n    precommit_deposit: 'bigint',\n    precommit_epoch: 'int',\n    deal_weight: 'bigint',\n    verified_deal_weight: 'bigint'\n  }\n}\n\nfunction bytesToBig (p) {\n  let acc = 0n\n  for (let i = 0; i < p.length; i++) {\n    acc *= 256n\n    acc += window.BigInt(p[i])\n  }\n  return acc\n}\n\nfunction bytesToBigRev (p) {\n  let acc = new BN(0)\n  for (let i = 0; i < p.length; i++) {\n    acc = acc.mul(new BN(256))\n    acc = acc.add(new BN(p[p.length - i - 1]))\n  }\n  return acc\n}\n\nfunction nextBits (obj, n) {\n  // if (obj.left < n) throw new Error(\"out of bits\")\n  const res = obj.num.and(new BN(1).shln(n).sub(new BN(1)))\n  obj.num = obj.num.shrn(n)\n  obj.left -= n\n  return res.toNumber()\n}\n\nfunction decodeRLE (buf) {\n  const obj = {\n    left: 8 * buf.length,\n    num: bytesToBigRev(buf)\n  }\n  const version = nextBits(obj, 2)\n  const first = nextBits(obj, 1)\n  const res = []\n  while (obj.left > 0) {\n    let b1 = nextBits(obj, 1)\n    if (b1 === 1) {\n      res.push(1)\n      continue\n    }\n    let b2 = nextBits(obj, 1)\n    if (b2 === 1) {\n      const a = nextBits(obj, 4)\n      res.push(a)\n      continue\n    }\n    let x = 0\n    let s = 0\n    for (let i = 0; true; i++) {\n      if (i === 10) {\n        throw new Error('run too long')\n      }\n      let b = nextBits(obj, 8)\n      if (b < 0x80) {\n        if (i > 9 || (i === 9 && b > 1)) {\n          throw new Error('run too long')\n        } else if (b === 0 && s > 0) {\n          throw new Error('invalid run')\n        }\n        x |= b << s\n        break\n      }\n      x |= (b & 0x7f) << s\n      s += 7\n    }\n    res.push(x)\n  }\n  return { first, runs: res }\n}\n\nfunction decodeRLE2 (buf) {\n  const { first, runs } = decodeRLE(buf)\n  let cur = first\n  const res = []\n  let acc = 0\n  for (let r of runs) {\n    for (let i = 0; i < r; i++) {\n      if (cur === 1) res.push(acc)\n      acc++\n    }\n    cur = 1 - cur\n  }\n  return res\n}\n\nexport default class Filecoin {\n  constructor (endpointUrl) {\n    this.url = endpointUrl\n    const provider = new BrowserProvider(endpointUrl)\n    console.log('new endpoint', endpointUrl)\n    this.client = new LotusRPC(provider, { schema })\n  }\n\n  async getData (head, path, schema) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const data = (await this.client.chainGetNode(`${state}/${path}`)).Obj\n\n    const self = this\n    return await Fil.methods.decode(schema, data).asObject(async a => {\n      const res = await self.client.chainGetNode(a)\n      return res.Obj\n    })\n  }\n\n  async fetchHead () {\n    return await this.client.chainHead()\n  }\n\n  async fetchPartitionsSectors (cid) {\n    const node = (await this.client.chainGetNode(`${cid['/']}`)).Obj[2][2]\n    return node.map(partitionRaw => {\n      const partitionObj = Fil.methods.decode(partitionSchema, partitionRaw)\n      return [\n        {\n          Sectors: decodeRLE2(partitionObj.Sectors),\n          Faults: decodeRLE2(partitionObj.Faults).reduce((acc, curr) => {\n            acc[curr] = true\n            return acc\n          }, {}),\n          Terminated: decodeRLE2(partitionObj.Terminated).reduce(\n            (acc, curr) => {\n              acc[curr] = true\n              return acc\n            },\n            {}\n          ),\n          Recoveries: decodeRLE2(partitionObj.Recoveries).reduce(\n            (acc, curr) => {\n              acc[curr] = true\n              return acc\n            },\n            {}\n          )\n        }\n      ]\n    })\n  }\n\n  async fetchTipsetHead (height) {\n    return await this.client.ChainGetTipSetByHeight(height, null)\n  }\n\n  async fetchPower (head) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const storagePowerActorRaw = (\n      await this.client.chainGetNode(`${state}/@Ha:t04/1`)\n    ).Obj\n    return {\n      TotalRawBytePower: bytesToBig(b64.decode(storagePowerActorRaw[0])),\n      TotalBytesCommitted: bytesToBig(b64.decode(storagePowerActorRaw[1])),\n      TotalQualityAdjPower: bytesToBig(b64.decode(storagePowerActorRaw[2])),\n      TotalQABytesCommitted: bytesToBig(b64.decode(storagePowerActorRaw[3])),\n      TotalPledgeCollateral: bytesToBig(b64.decode(storagePowerActorRaw[4])),\n      ThisEpochRawBytePower: bytesToBig(b64.decode(storagePowerActorRaw[5])),\n      ThisEpochQualityAdjPower: bytesToBig(b64.decode(storagePowerActorRaw[6])),\n      ThisEpochPledgeCollateral: bytesToBig(b64.decode(storagePowerActorRaw[7]))\n    }\n  }\n\n  async fetchDeposits (hash, head) {\n    const state = await this.client.StateReadState(hash, head.Cids)\n    const precommitdeposits = state.State.PreCommitDeposits\n    const locked = state.State.LockedFunds\n    const collateral = state.Balance\n    const available = collateral - precommitdeposits - locked\n\n    return {\n      collateral: f(state.Balance / 1000000000000000000),\n      available: f(available / 1000000000000000000),\n      locked: f(locked / 1000000000000000000),\n      precommitdeposits: f(precommitdeposits / 1000000000000000000)\n    }\n  }\n\n  async getMiners () {\n    const cached = window.localStorage.getItem('miners')\n    if (cached) return JSON.parse(cached)\n\n    const json = await (\n      await fetch(\n        'https://filfox.info/api/v0/miner/list/power?pageSize=1000&page=0'\n      )\n    ).json()\n    const miners = json.miners.reduce((acc, curr) => {\n      acc[curr.address] = curr\n      return acc\n    }, {})\n\n    window.localStorage.setItem('miners', JSON.stringify(miners))\n\n    return miners\n  }\n\n  async fetchDeadlinesProxy (miner, head) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const deadlinesCids = (\n      await this.client.chainGetNode(`${state}/@Ha:${miner}/1/11`)\n    ).Obj[0]\n    const deadlines = await asyncPool(24, deadlinesCids, async minerCid => {\n      const deadline = (await this.client.ChainGetNode(`${minerCid['/']}`)).Obj\n      return {\n        Partitions: deadline[0],\n        LiveSectors: deadline[4],\n        TotalSectors: deadline[5],\n        FaultyPower: { Raw: Number(b64ToBn(deadline[6][0])) }\n      }\n    })\n    return deadlines\n  }\n\n  async fetchDeadlines (hash, head) {\n    const [deadline, deadlines] = await Promise.all([\n      this.client.StateMinerProvingDeadline(hash, head.Cids),\n      this.fetchDeadlinesProxy(hash, head)\n    ])\n\n    const nextDeadlines = [...Array(48)].map((_, i) => ({\n      ...deadlines[(deadline.Index + i) % 48],\n      Close: deadline.Close + i * 60,\n      Index: (deadline.Index + i) % 48\n    }))\n\n    const SectorsCount = deadlines\n      .map(d => +d.LiveSectors)\n      .reduce((acc, curr) => acc + curr, 0)\n\n    const FaultsCount =\n      deadlines\n        .map(d => +d.FaultyPower.Raw)\n        .reduce((acc, curr) => acc + curr, 0) /\n      (32 * 1024 * 1024 * 1024)\n\n    return {\n      deadlines: deadlines.map((d, i) => ({\n        ...deadlines[i],\n        Close: deadline.Close + i * 60,\n        Index: i\n      })),\n      nextDeadlines,\n      SectorsCount,\n      FaultsCount,\n      ActiveCount: SectorsCount - FaultsCount,\n      deadline\n    }\n  }\n\n  async fetchPreCommittedSectors (hash, head) {\n    const preCommittedSectors = await this.getData(\n      head,\n      `@Ha:${hash}/1/5`,\n      preCommitSchema\n    )\n    const PreCommitDeadlines = d3\n      .groups(\n        Object.keys(preCommittedSectors).map(d => ({\n          SectorNumber: preCommittedSectors[d].info.sector_number,\n          Expiry: preCommittedSectors[d].precommit_epoch + (10000 + 60 + 150)\n        })),\n        d => d.Expiry\n      )\n      .map(([Expiry, Sectors]) => ({\n        Expiry,\n        Sectors: Sectors.map(d => d.SectorNumber)\n      }))\n      .sort((a, b) => a.Expiry - b.Expiry)\n\n    return {\n      PreCommitDeadlines,\n      Count: Object.keys(preCommittedSectors).length\n    }\n  }\n\n  async fetchSectors (hash, head) {\n    const sectorList = await this.client.StateMinerSectors(\n      hash,\n      null,\n      head.Cids\n    )\n    const Sectors = sectorList.reduce((acc, curr) => {\n      acc[curr.ID] = { number: curr.ID, info: curr }\n      return acc\n    }, {})\n\n    const sectorsCount = Object.keys(Sectors).length\n    return { sectorsCount, Sectors }\n  }\n}\n","export default async function () {\n  return await (await fetch('https://api3.drand.sh/health')).json()\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Home ({ miners }) {\n  return (\n    <section id='home' className='container'>\n      <div className='spacerace'>\n        Top miners:\n        {miners &&\n          Object.keys(miners)\n            .slice(0, 15)\n            .map((d, i) => (\n              <div key={i}>\n                {i + 1}.{' '}\n                <Link to={`/miners/${miners[d].address}`}>\n                  {miners[d].address}\n                </Link>\n              </div>\n            ))}\n      </div>\n      <div>\n        See deadlines of <Link to='/full'>top 50 miners</Link> or click on\n        individual miners or the <Link to='/status'>network status</Link>.\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function Summary ({ title, url, desc }) {\n  return (\n    <div className='summary col-sm'>\n      <div className='summary-title'>\n        {url ? <a href={url}>{title}</a> : <>{title}</>}\n      </div>\n      <div className='summary-desc'>{desc}</div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function WindowPoStStatus ({ deadline, head }) {\n  const d = deadline\n\n  return (\n    <div className='deadlines windowpost'>\n      <div className={d.TotalSectors === 0 ? 'deadline opacity5' : 'deadline'}>\n        <div className='out'>\n          In {d.Close - head.Height}\n          {/* <span className=\"epochs\">epochs</span> */}\n        </div>\n        <div className='hddWrapper'>\n          <div className='in'>\n            {Math.round((d.TotalSectors * 32) / 1024)} TiB\n          </div>\n          <div className='hdds'>\n            {[\n              ...Array(\n                Math.ceil(\n                  Math.round(\n                    (d.TotalSectors * 32) / 1024 -\n                      +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                  ) / 8\n                )\n              )\n            ].map((v, i) => (\n              <div key={i} className='hdd'>\n                {' '}\n              </div>\n            ))}\n            {[\n              ...Array(\n                Math.ceil(\n                  Math.round(+d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)) /\n                    8\n                )\n              )\n            ].map((v, i) => (\n              <div key={i} className='hdd faulty'>\n                {' '}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport asyncPool from 'tiny-async-pool'\nimport { Link } from 'react-router-dom'\nimport Summary from '../components/Summary'\nimport WindowPoStStatus from '../components/WindowPoStStatus'\n\nconst d3 = require('d3')\nconst f2 = d3.format(',.2f')\nconst bytesToPiB = 1024 * 1024 * 1024 * 1024 * 1024\n\nexport default function Status ({ client, spa, head, miners }) {\n  const [minersDeadlines, setMinersDeadlines] = useState({})\n  const [minersDeadlines2880, setMinersDeadlines2880] = useState({})\n  const [prev60, setPrev60] = useState()\n  const [prev120, setPrev120] = useState()\n\n  useEffect(() => {\n    if (!head) return\n\n    const fetchingPrevious = async () => {\n      const getPrev = async diff => {\n        const prevHead = await client.fetchTipsetHead(head.Height - diff)\n        const prevSpa = await client.fetchPower(prevHead)\n        return prevSpa\n      }\n\n      const [prev60, prev120] = await Promise.all([getPrev(60), getPrev(120)])\n\n      await setPrev60(prev60)\n      await setPrev120(prev120)\n    }\n    fetchingPrevious()\n  }, [head])\n\n  useEffect(() => {\n    let mounted = true\n    if (!head) return\n\n    const minersList = Object.keys(miners)\n      .slice(0, 40)\n      .map(d => miners[d].address)\n    asyncPool(5, minersList, async minerId => {\n      if (!mounted) return\n      const deadlines = await client.fetchDeadlines(minerId, head)\n      if (!mounted) return\n      const prevHead = await client.fetchTipsetHead(head.Height - 2880)\n      if (!mounted) return\n      const deadlines2880 = await client.fetchDeadlines(minerId, prevHead)\n      if (!mounted) return\n      minersDeadlines[minerId] = deadlines\n      minersDeadlines2880[minerId] = deadlines2880\n      await setMinersDeadlines({ ...minersDeadlines })\n      return await setMinersDeadlines2880({ ...minersDeadlines2880 })\n    })\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, miners])\n\n  return (\n    <section className='container'>\n      <div id='deposits' className='section'>\n        <div className='grid'>\n          {spa && (\n            <>\n              <Summary\n                title={f2(parseInt(spa.TotalQualityAdjPower) / bytesToPiB)}\n                desc='Total QA Power'\n              />\n            </>\n          )}\n          {prev60 && spa && (\n            <>\n              <Summary\n                title={f2(\n                  parseInt(\n                    spa.TotalQualityAdjPower - prev60.TotalQualityAdjPower\n                  ) / bytesToPiB\n                )}\n                desc='60 Epochs delta'\n              />\n            </>\n          )}\n          {prev120 && spa && (\n            <>\n              <Summary\n                title={f2(\n                  parseInt(\n                    spa.TotalQualityAdjPower - prev120.TotalQualityAdjPower\n                  ) / bytesToPiB\n                )}\n                desc='120 Epochs delta'\n              />\n            </>\n          )}\n        </div>\n      </div>\n      Listing WindowPoSt duties of the top 50 miners.\n      {miners &&\n        Object.keys(miners)\n          .slice(0, 40)\n          .map((d, i) => (\n            <div className='flex' key={i}>\n              <Link to={`/miners/${miners[d].address}`}>\n                {miners[d].address}\n              </Link>\n              {minersDeadlines && minersDeadlines[miners[d].address] && (\n                <WindowPoStStatus\n                  head={head}\n                  deadline={\n                    minersDeadlines[miners[d].address].nextDeadlines[47]\n                  }\n                />\n              )}\n              {minersDeadlines2880 &&\n                minersDeadlines2880[miners[d].address] && (\n                  <WindowPoStStatus\n                    head={head}\n                    deadline={\n                      minersDeadlines2880[miners[d].address].nextDeadlines[47]\n                    }\n                  />\n                )}\n            </div>\n          ))}\n    </section>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function WindowPoSt ({ minerId, deadlines, head, link, out }) {\n  if (!link) {\n    link = d => `/miners/${minerId}/deadlines/${d.Index}`\n  }\n  if (!out) {\n    out = ({ d, head, i }) => `In ${d.Close - head.Height}`\n  }\n  if (!head || !deadlines) {\n    return <></>\n  }\n  return (\n    <div className='deadlines windowpost'>\n      {deadlines &&\n        deadlines.map((d, i) => (\n          <div\n            key={i}\n            className={d.TotalSectors === 0 ? 'deadline opacity5' : 'deadline'}\n          >\n            <Link to={link(d)}>\n              <div className='out'>\n                {out({ d, head, i })}\n                {/* <span className=\"epochs\">epochs</span> */}\n              </div>\n              <div className='hddWrapper'>\n                <div className='in'>\n                  {Math.round((d.TotalSectors * 32) / 1024)} TiB\n                </div>\n                <div className='hdds'>\n                  {[\n                    ...Array(\n                      Math.ceil(\n                        Math.round(\n                          (d.TotalSectors * 32) / 1024 -\n                            +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                        ) / 8\n                      )\n                    )\n                  ].map((v, i) => (\n                    <div key={i} className='hdd'>\n                      {' '}\n                    </div>\n                  ))}\n                  {/* {Math.round(+d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024))} */}\n                  {[\n                    ...Array(\n                      Math.ceil(\n                        Math.round(\n                          +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                        ) / 8\n                      )\n                    )\n                  ].map((v, i) => (\n                    <div key={i} className='hdd faulty'>\n                      {' '}\n                    </div>\n                  ))}\n                </div>\n              </div>\n              {/* <div className=\"partitions\">\n                            {\n                            [...Array(Math.ceil(d.TotalSectors/2349))].map(v =>\n                            <div className='partition'></div>\n                            )\n                            }\n                            </div> */}\n            </Link>\n          </div>\n        ))}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport asyncPool from 'tiny-async-pool'\n\nimport WindowPoSt from '../components/WindowPoSt'\n\nexport default function Full ({ miners, client }) {\n  const [minersDeadlines, setMinersDeadlines] = useState({})\n  const [head, setHead] = useState()\n\n  useEffect(() => {\n    const fetchingHead = async () => {\n      const fetched = await client.fetchHead()\n      setHead(fetched)\n    }\n    fetchingHead()\n  }, [client])\n\n  useEffect(() => {\n    let mounted = true\n    if (!head) return\n\n    const minersList = Object.keys(miners)\n      .slice(0, 50)\n      .map(d => miners[d].address)\n    asyncPool(5, minersList, async minerId => {\n      if (!mounted) return\n      const deadlines = await client.fetchDeadlines(minerId, head)\n      if (!mounted) return\n      minersDeadlines[minerId] = deadlines.nextDeadlines\n      return await setMinersDeadlines({ ...minersDeadlines })\n    })\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, miners])\n\n  return (\n    <section id='LookUp' className='container'>\n      Listing WindowPoSt duties of the top 50 miners.\n      {miners &&\n        Object.keys(miners)\n          .slice(0, 50)\n          .map((d, i) => (\n            <div key={i}>\n              <Link to={`/miners/${miners[d].address}`}>\n                {miners[d].address}\n              </Link>\n\n              <WindowPoSt\n                deadlines={minersDeadlines[miners[d].address]}\n                head={head}\n              />\n            </div>\n          ))}\n    </section>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function MinerBar ({ client, miners, minerId, deadlineId }) {\n  return (\n    <div className='section minerbar'>\n      <div className='minerId'>\n        {!deadlineId && (\n          <>\n            <Link to={`/miners/${minerId}`}>{minerId}</Link>\n            <span className='tinyarrow'>\n              <a href={`https://filfox.info/en/address/${minerId}`}>↗</a>\n            </span>\n          </>\n        )}\n        {deadlineId && (\n          <>\n            <Link to={`/miners/${minerId}/deadlines/${deadlineId}`}>\n              Deadline {deadlineId}\n            </Link>\n          </>\n        )}\n      </div>\n      {deadlineId && (\n        <>\n          <div className='backto'>\n            <Link to={`/miners/${minerId}`}>\n              See miner\n              <span className='bolder'> {minerId}</span>\n            </Link>\n          </div>\n        </>\n      )}\n      {!deadlineId && (\n        <div>\n          {miners && miners[minerId] && miners[minerId].tag && (\n            <span className='miner-name'>\n              {miners[minerId].tag.en}\n\n              {miners && miners[minerId].location && (\n                <span> {miners[minerId].location.flagEmoji}</span>\n              )}\n            </span>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams, withRouter } from 'react-router-dom'\nimport ReactTooltip from 'react-tooltip'\nimport WindowPoSt from '../components/WindowPoSt'\nimport Summary from '../components/Summary'\nimport asyncPool from 'tiny-async-pool'\nimport MinerBar from '../components/MinerBar'\nconst d3 = require('d3')\nconst f = d3.format(',')\nconst f2 = d3.format(',.1f')\n\nfunction Deadline ({ miners, client, head }) {\n  const { minerId, deadlineId } = useParams()\n  const [partitions, setPartitions] = useState()\n  // const [miner, setMiner] = useState({ id: minerId })\n  const [minerDeadlines, setMinerDeadlines] = useState({})\n  const [todayDeadlines, setTodayDeadlines] = useState()\n\n  const deadlinesArray = () => {\n    return Object.keys(minerDeadlines)\n      .sort((a, b) => +a - +b)\n      .map(k => [k, minerDeadlines[k]])\n  }\n\n  const deadlineArray = i => {\n    return deadlinesArray()\n      .map(([epoch, deadlines]) => {\n        return deadlines.deadlines[i]\n      })\n      .flat()\n  }\n\n  useEffect(() => {\n    if (!todayDeadlines) return\n    client\n      .fetchPartitionsSectors(todayDeadlines.deadlines[deadlineId].Partitions)\n      .then(d => {\n        setPartitions(d)\n      })\n  }, [todayDeadlines])\n\n  useEffect(() => {\n    if (!minerId || !head || !deadlineId) {\n      return\n    }\n\n    let mounted = true\n\n    const epochs = [...Array(28)].map((_, i) => ({\n      height: head.Height - i * 2880,\n      day: i\n    }))\n\n    try {\n      asyncPool(10, epochs, async ({ day, height }) => {\n        try {\n          const prevHead = await client.fetchTipsetHead(height)\n          if (!mounted) return\n          const deadlines = await client.fetchDeadlines(minerId, prevHead)\n          if (!mounted) return\n          minerDeadlines[day] = deadlines\n          setMinerDeadlines({ ...minerDeadlines })\n          if (day === 0) {\n            setTodayDeadlines(deadlines)\n          }\n        } catch (e) {\n          console.log('could not find', day, height)\n          console.log(e)\n        }\n      })\n    } catch (e) {\n      console.log('trouble with ', e)\n    }\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, minerId, deadlineId])\n\n  return (\n    <section className='container'>\n      <MinerBar\n        client={client}\n        miners={miners}\n        minerId={minerId}\n        deadlineId={deadlineId}\n      />\n      <div className='section wpost'>\n        <div className='grid'>\n          {minerDeadlines && minerDeadlines[0] && (\n            <Summary\n              title={`${f2(\n                (+minerDeadlines[0].deadlines[deadlineId].LiveSectors * 32) /\n                  1024\n              )} TiB`}\n              desc={`${f(\n                minerDeadlines[0].deadlines[deadlineId].LiveSectors\n              )} Live Sectors`}\n            />\n          )}\n          {minerDeadlines && minerDeadlines[0] && (\n            <Summary\n              title={`${f2(\n                (+minerDeadlines[0].deadlines[deadlineId].TotalSectors * 32) /\n                  1024\n              )} TiB`}\n              desc={`${f(\n                minerDeadlines[0].deadlines[deadlineId].TotalSectors\n              )} Total Sectors`}\n            />\n          )}\n          {minerDeadlines && minerDeadlines[0] && (\n            <Summary\n              title={`${f2(\n                +minerDeadlines[0].deadlines[deadlineId].FaultyPower.Raw /\n                  (1024 * 1024 * 1024 * 1024)\n              )} TiB`}\n              desc={`${f(\n                +minerDeadlines[0].deadlines[deadlineId].FaultyPower.Raw /\n                  ((1024 * 1024 * 1024 * 1024) / 32)\n              )} Faulty Sectors`}\n            />\n          )}\n        </div>\n      </div>\n      <div className='section wpost'>\n        <div className='row'>\n          <div className='col section-title'>\n            <h3>History</h3>\n            <a data-tip data-for='wpost-desc'>\n              (what is this?)\n            </a>\n            <ReactTooltip id='wpost-desc' effect='solid' place='top'>\n              <span>\n                List of 48 WindowPoSt submission deadlines ordered by due time\n                (in epochs).\n                <br />\n                Bars represent ~8TB disks to be proven, white are healthy disks,\n                red are faulty.\n              </span>\n            </ReactTooltip>\n          </div>\n        </div>\n        <WindowPoSt\n          link={d => `/miners/${minerId}/deadlines/${deadlineId}`}\n          deadlines={deadlineArray(deadlineId)}\n          head={head}\n          out={({ d, head, i }) => (i === 0 ? `Today` : `${i}d ago`)}\n        />\n      </div>\n      <div className='section sectors'>\n        <div className='row'>\n          <div className='col section-title'>\n            <h3>Sectors</h3>\n            <a data-tip data-for='sectors-desc'>\n              (what is this?)\n            </a>\n            <ReactTooltip id='sectors-desc' effect='solid' place='top'>\n              <span>Each square is a 32GiB sector.</span>\n            </ReactTooltip>\n          </div>\n        </div>\n        {partitions && (\n          <div>\n            {partitions.map((partition, i) => (\n              <div key={i}>\n                <h4>\n                  Partition {i}{' '}\n                  {Object.keys(partition[0].Faults).length ===\n                    partition[0].Sectors.length && (\n                    <span className='rekt'>REKT</span>\n                  )}\n                </h4>\n                <div className='s-partition'>\n                  {partition[0].Sectors.map(sector => (\n                    <div\n                      key={sector}\n                      className={`s-sector ${partition[0].Faults[sector] &&\n                        'faulty'} ${partition[0].Terminated[sector] &&\n                        'terminated'} ${partition[0].Recoveries[sector] &&\n                        'recovering'}`}\n                    >\n                      <span>{sector}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </section>\n  )\n}\n\nexport default withRouter(Deadline)\n","import React, { useState, useEffect } from 'react'\nimport { useParams, withRouter } from 'react-router-dom'\n\nimport Summary from '../components/Summary'\nimport ReactTooltip from 'react-tooltip'\nimport WindowPoSt from '../components/WindowPoSt'\nimport MinerBar from '../components/MinerBar'\n\nconst d3 = require('d3')\nconst f = d3.format(',')\nconst f2 = d3.format(',.0f')\n\nfunction MinerInfo ({ client, miners, head }) {\n  const { minerId } = useParams()\n  const [miner, setMiner] = useState({ id: minerId })\n\n  // On new (hash or head): fetch miner\n  useEffect(() => {\n    if (!minerId || !head) {\n      return\n    }\n\n    let mounted = true\n\n    const fetchInfo = () => {\n      setMiner({ ...miner })\n\n      client\n        .fetchDeadlines(minerId, head)\n        .then(deadlines => {\n          if (mounted) {\n            miner.deadlines = deadlines\n            setMiner({ ...miner })\n          }\n        })\n        .catch(err => {\n          console.error('failed to load deadline', err)\n        })\n\n      client.fetchDeposits(minerId, head).then(deposits => {\n        if (mounted) {\n          miner.deposits = deposits\n          setMiner({ ...miner })\n        }\n      })\n\n      client.fetchPreCommittedSectors(minerId, head).then(preCommits => {\n        if (mounted) {\n          miner.preCommits = preCommits\n          setMiner({ ...miner })\n        }\n      })\n\n      client.fetchSectors(minerId, head).then(sectors => {\n        if (mounted) {\n          miner.sectors = sectors\n          setMiner({ ...miner })\n        }\n      })\n    }\n\n    fetchInfo()\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, minerId])\n\n  if (!miner || !head) {\n    return <></>\n  }\n\n  return (\n    <section className='container'>\n      <MinerBar client={client} miners={miners} minerId={minerId} />\n      <div id='deposits' className='section'>\n        <div className='grid'>\n          {miner.deposits && (\n            <Summary\n              title={`${f(miner.deposits.collateral || 0)} FIL`}\n              desc='Collateral'\n            />\n          )}\n\n          {miner.deposits && (\n            <Summary\n              title={`${f(miner.deposits.available || 0)} FIL`}\n              desc='Available'\n            />\n          )}\n\n          {miner.deposits && (\n            <Summary\n              desc='Locked'\n              title={`${f(miner.deposits.locked || 0)} FIL`}\n            />\n          )}\n        </div>\n      </div>\n\n      <div id='sectors'>\n        <div className='grid grid-4'>\n          {miner.deadlines && (\n            <Summary\n              title={`${f2((miner.deadlines.SectorsCount * 32) / 1024)} TiB`}\n              desc={`${f(miner.deadlines.SectorsCount || 0)} Total Sectors`}\n            />\n          )}\n          {miner.deadlines && (\n            <Summary\n              title={`${f2((miner.deadlines.ActiveCount * 32) / 1024)} TiB`}\n              desc={`${f(miner.deadlines.ActiveCount || 0)} Active Sectors`}\n            />\n          )}\n          {miner.deadlines && (\n            <Summary\n              title={`${f2((miner.deadlines.FaultsCount * 32) / 1024)} TiB`}\n              desc={`${f(miner.deadlines.FaultsCount || 0)} Faulty Sectors`}\n            />\n          )}\n          {miner.preCommits && (\n            <Summary title={f(miner.preCommits.Count || 0)} desc='PreCommits' />\n          )}\n        </div>\n      </div>\n\n      {miner.deadlines && (\n        <div className='section wpost'>\n          <div className='row'>\n            <div className='col section-title'>\n              <h3>Deadlines</h3>\n              <a data-tip data-for='wpost-desc'>\n                (what is this?)\n              </a>\n              <ReactTooltip id='wpost-desc' effect='solid' place='top'>\n                <span>\n                  List of 48 WindoPoSt submission deadlines ordered by due time\n                  (in epochs).\n                  <br />\n                  Bars represent ~8TB disks to be proven, white are healthy\n                  disks, red are faulty.\n                </span>\n              </ReactTooltip>\n            </div>\n          </div>\n          <WindowPoSt\n            minerId={minerId}\n            deadlines={miner.deadlines.nextDeadlines}\n            head={head}\n          />\n        </div>\n      )}\n\n      {miner.deadlines && (\n        <div className='section'>\n          <div className='row'>\n            <div className='col section-title'>\n              <h3>Upcoming Deadline</h3>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='col'>\n              <div className='timeline'></div>\n              <ul>\n                <li>\n                  PoStSubmissions:\n                  {miner.deadlines.nextDeadlines[0].PostSubmissions}\n                </li>\n                <li>\n                  Sectors to Prove:{' '}\n                  {miner.deadlines.nextDeadlines[0].TotalSectors}\n                </li>\n                <li>Current Deadline: {miner.deadlines.deadline.Index}</li>\n                <li>\n                  FaultCutoff:{' '}\n                  {miner.deadlines.deadline.FaultCutoff - head.Height}\n                </li>\n                <li>\n                  Challenge: {miner.deadlines.deadline.Challenge - head.Height}\n                </li>\n                <li>\n                  {miner.deadlines.deadline.Open - head.Height > 0\n                    ? 'Open'\n                    : 'Opened'}\n                  : {miner.deadlines.deadline.Open - head.Height}\n                </li>\n                <li>Close: {miner.deadlines.deadline.Close - head.Height}</li>\n              </ul>\n            </div>\n            <div className='col'>\n              {/* {miner.deadlines.nextDeadlines\n                .map(d => +d.TotalSectors)\n                .find(d => d !== 0)} */}\n              <WindowPoSt\n                minerId={minerId}\n                deadlines={[miner.deadlines.nextDeadlines[0]]}\n                head={head}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {miner.preCommits && (\n        <div id='provecommit' className='section'>\n          <div className='row'>\n            <div className='col section-title'>\n              <h3>New sectors</h3>\n              <a data-tip data-for='provecommit-desc'>\n                (what is this?)\n              </a>\n              <ReactTooltip id='provecommit-desc' effect='solid' place='top'>\n                <span>\n                  List of ProveCommits ordered by due time (in epochs).\n                  <br />\n                  Circles represent sectors to be proven.\n                </span>\n              </ReactTooltip>\n            </div>\n          </div>\n          <div className='deadlines provecommit'>\n            {miner.preCommits.PreCommitDeadlines.map((d, i) => (\n              <div key={i} className='deadline'>\n                <div className='out'>\n                  In {d.Expiry - head.Height}\n                  {/* <span className=\"epochs\">epochs</span> */}\n                </div>\n                <div className='hddWrapper'>\n                  <div className='in'>\n                    {Math.round(d.Sectors.length)} sectors\n                  </div>\n                  <div className='hdds'>\n                    {d.Sectors.map(v => (\n                      <div\n                        key={v}\n                        className={`hdd ${!!miner.sectors &&\n                          !!miner.sectors.Sectors[v]}`}\n                      >\n                        {v === 215428\n                          ? miner.sectors && miner.sectors.Sectors[v]\n                          : ''}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </section>\n  )\n}\n\nexport default withRouter(MinerInfo)\n","import React from 'react'\n\nconst d3 = require('d3')\nconst f = d3.format(',')\n\nexport default function TinySummary ({ head, expected, round }) {\n  return (\n    <div className='tiny-grid'>\n      {head && expected && (\n        <div>\n          Filecoin Status{' '}\n          <span>\n            {head.Height < expected\n              ? expected - head.Height === 1\n                ? 'gathering blocks'\n                : 'catching up'\n              : 'ok'}\n          </span>\n        </div>\n      )}\n      {head && (\n        <div className='tiny'>\n          Current Tipset{' '}\n          <a href={`https://filfox.info/en/tipset/${head.Height}`}>\n            {f(head.Height)}\n          </a>\n        </div>\n      )}\n      {expected && (\n        <div className='tiny'>\n          Expected Tipset{' '}\n          <a href={`https://filfox.info/en/tipset/${expected}`}>\n            {f(expected)}\n          </a>\n        </div>\n      )}\n      {round && (\n        <>\n          <div className='tiny'>\n            Drand Status{' '}\n            <span>{round.current < round.expected ? 'catching up' : 'ok'}</span>\n          </div>\n          <div className='tiny'>\n            Current Drand{' '}\n            <a href={`https://api.drand.sh/public/${round.current}`}>\n              {f(round.current)}\n            </a>\n          </div>\n          <div className='tiny'>\n            Expected Drand{' '}\n            <a href={`https://api.drand.sh/public/${round.expected}`}>\n              {f(round.expected)}\n            </a>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\nimport Filecoin from './services/filecoin'\nimport Drand from './services/drand'\n\nimport Home from './views/Home'\nimport Status from './views/Status'\nimport Full from './views/Full'\nimport Deadline from './views/Deadline'\nimport MinerInfo from './views/MinerInfo'\nimport TinySummary from './components/TinySummary'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.scss'\n\nfunction getFilecoinExpectedHeight () {\n  const filGenesis = new Date('2020-08-24 22:00:00Z').getTime()\n  return Math.floor((Date.now() - filGenesis) / 1000 / 30)\n}\n\nfunction App () {\n  const [miners, setMiners] = useState()\n  const [head, setHead] = useState()\n  const [round, setRound] = useState()\n  const [node, setNode] = useState('wss://node.glif.io/space07/lotus/rpc/v0')\n  const [client, setFilClient] = useState(new Filecoin(node))\n  const [filExpectedHeight, setFilExpectedHeight] = useState(\n    getFilecoinExpectedHeight()\n  )\n  const [spa, setSpa] = useState()\n\n  useEffect(() => {\n    const reload = async () => {\n      await setHead()\n      await setFilClient(new Filecoin(node))\n    }\n\n    reload()\n  }, [node])\n\n  useEffect(() => {\n    if (!head) return\n\n    client.fetchPower(head).then(power => {\n      setSpa(power)\n    })\n  }, [head, client])\n\n  useEffect(() => {\n    let mounted = true\n\n    client.getMiners().then(res => {\n      if (!mounted) return\n      setMiners(res)\n    })\n\n    const fetchingHead = async () => {\n      client.fetchHead().then(fetched => {\n        if (!mounted) return\n        if (head && fetched.Height === head.Height) {\n          console.log('repeated block, skip')\n          return\n        }\n        console.log('new block', fetched.Height, head && head.Height)\n        setHead(fetched)\n      })\n\n      Drand().then(fetched => {\n        if (!mounted) return\n        if (round && fetched.current === round.current) {\n          console.log('repeated drand, skip')\n          return\n        }\n        console.log('new drand', fetched)\n        setRound(fetched)\n      })\n\n      setFilExpectedHeight(getFilecoinExpectedHeight())\n    }\n\n    fetchingHead()\n\n    const interval = setInterval(() => {\n      fetchingHead()\n    }, 5000)\n\n    return () => {\n      mounted = false\n      clearInterval(interval)\n    }\n  }, [client, head, round])\n\n  return (\n    <Router>\n      <div className='App'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col'>\n              <select onChange={e => setNode(e.target.value)} value={node}>\n                <option value='wss://lotus.jimpick.com/spacerace_api/0/node/rpc/v0'>\n                  Jim's node 0\n                </option>\n                <option value='wss://lotus.jimpick.com/spacerace_api/1/node/rpc/v0'>\n                  Jim's node 1\n                </option>\n                <option value='ws://www.border.ninja:12342/node/rpc/v0'>\n                  Border's node\n                </option>\n                <option value='wss://node.glif.io/space07/lotus/rpc/v0'>\n                  Glif's node\n                </option>\n              </select>\n            </div>\n          </div>\n          <TinySummary head={head} expected={filExpectedHeight} round={round} />\n        </div>\n        <header className='container-fluid'>\n          <Link to='/'>\n            <h1 id='logo' className='logo'>\n              <span>spacegap</span>\n            </h1>\n          </Link>\n        </header>\n        <Switch>\n          <Route path='/miners/:minerId/deadlines/:deadlineId'>\n            <Deadline client={client} miners={miners} head={head} />\n          </Route>\n          <Route path='/miners/:minerId'>\n            <MinerInfo client={client} miners={miners} head={head} />\n          </Route>\n          <Route path='/full'>\n            <Full client={client} miners={miners} />\n          </Route>\n          <Route path='/status'>\n            <Status head={head} spa={spa} client={client} miners={miners} />\n          </Route>\n          <Route path='/'>\n            <Home miners={miners} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}