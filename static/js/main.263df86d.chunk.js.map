{"version":3,"sources":["services/filecoin/economics.js","services/filecoin/index.js","components/Summary.js","views/Home.js","components/WindowPoStStatus.js","views/Status.js","components/WindowPoSt.js","views/Full.js","components/MinerBar.js","views/Deadline.js","views/MinerInfo.js","services/drand/index.js","components/TinySummary.js","App.js","serviceWorker.js","index.js"],"names":["computeEffectiveNetworkTime","cumsumRealized","x0","k","Math","pow","c","log","a","computeBlockReward","newWallClockEpoch","prevWallClockEpoch","newNetworkTimeEpoch","prevNetworkTimeEpoch","mintRate","prevSimpleSupply","E","newSimpleSupply","prevBaselineSupply","getCurrBaseline","e","Comp","currEpoch","nwqap","nwqapP","nwqapV","nwCircSupply","perEpochRewardP","perEpochRewardV","perDurationNwRbGrowth","projectedDays","perDurationMinerQaGrowth","nwCumsumRealized","Object","assign","this","sectorQAP","days","networkQAPFilter","AlphaBetaFilter","perEpochRewardFilter","extrapolateCumsumRatio","projectFutureReward","max","sectorIp","computeInitialPledgeForQAPower","sectorProjectedReward","sectorFaultFee","perEpochNwRbGrowth","perEpochMinerQaGrowth","newInitialPledges","totalInitialPledge","currNetworkQAP","currCumsumRealized","prevNetworkTime","newInitialPledge","push","newNetworkTime","newReward","addNewEntry","p","v","alpha","beta","value","deltaT","residual","numerator","denominator","futureT","x2a","x2b","d3","require","f","format","b64","bx","BN","schema","testnet","fullNode","b64ToBn","window","BigInt","bin","atob","hex","split","forEach","ch","h","charCodeAt","toString","length","join","partitionSchema","height","console","Sectors","Unproven","Faults","Recoveries","Terminated","ExpirationEpochs","EarlyTerminated","LivePower","b","UnprovenPower","FaultyPower","RecoveringPower","preCommitSchema","type","key","info","seal_proof","sector_number","sealed_cid","seal_rand_epoch","deal_ids","expiration","replace_capacity","replace_sector_deadline","replace_sector_partition","replace_sector_number","precommit_deposit","precommit_epoch","deal_weight","verified_deal_weight","bytesToBig","acc","i","bytesToBigRev","mul","add","nextBits","obj","n","res","num","and","shln","sub","shrn","left","toNumber","decodeRLE2","buf","first","x","s","Error","runs","decodeRLE","cur","r","Filecoin","endpointUrl","url","provider","BrowserProvider","client","LotusRPC","head","path","state","Blocks","ParentStateRoot","node","Height","chainGetNode","data","Obj","self","Fil","methods","decode","asObject","chainHead","cid","map","partitionRaw","partitionObj","reduce","curr","ChainGetTipSetByHeight","storagePowerActorRaw","TotalRawBytePower","TotalBytesCommitted","TotalQualityAdjPower","TotalQABytesCommitted","TotalPledgeCollateral","ThisEpochRawBytePower","ThisEpochQualityAdjPower","ThisEpochPledgeCollateral","hash","StateReadState","Cids","State","Balance","PreCommitDeposits","LockedFunds","InitialPledge","FeeDebt","Available","cached","localStorage","getItem","cachedTime","Date","now","JSON","parse","fetch","json","miners","address","setItem","stringify","miner","deadlinesCids","asyncPool","minerCid","ChainGetNode","deadline","Partitions","LiveSectors","TotalSectors","Raw","Number","deadlines","StateMinerInfo","Promise","all","StateMinerProvingDeadline","fetchDeadlinesProxy","nextDeadlines","Array","_","Index","Close","SectorsCount","d","FaultsCount","ActiveCount","getData","preCommittedSectors","PreCommitDeadlines","groups","keys","SectorNumber","Expiry","sort","Count","StateMinerSectors","sectorList","ID","number","sectorsCount","StateCirculatingSupply","Supply","Reward","Power","inputs","ThisEpochQAPowerSmoothed","PositionEstimate","VelocityEstimate","FilCirculating","ThisEpochRewardSmoothed","CumsumRealized","Economics","summary","Summary","title","desc","className","href","f3","Home","useState","econSummary","setEconSummary","useEffect","fetchGenesisActors","actors","computeEconomics","fetchingEcon","id","slice","to","WindowPoStStatus","round","ceil","f2","Status","spa","minersDeadlines","setMinersDeadlines","minersDeadlines2880","setMinersDeadlines2880","prev60","setPrev60","prev120","setPrev120","getPrev","diff","fetchTipsetHead","prevHead","fetchPower","prevSpa","fetchingPrevious","mounted","minersList","minerId","fetchDeadlines","deadlines2880","parseInt","WindowPoSt","link","out","Full","setHead","fetchHead","fetched","fetchingHead","MinerBar","deadlineId","deposits","tag","name","location","flagEmoji","withRouter","useParams","partitions","setPartitions","minerDeadlines","setMinerDeadlines","todayDeadlines","setTodayDeadlines","fetchPartitionsSectors","then","epochs","day","data-tip","data-for","effect","place","flat","partition","sector","setMiner","fetchMinerInfo","catch","error","fetchDeposits","fetchPreCommittedSectors","preCommits","PostSubmissions","FaultCutoff","Challenge","Open","getFilecoinExpectedHeight","filGenesis","getTime","floor","TinySummary","expected","setFilExpectedHeight","setRound","Drand","current","interval","setInterval","clearInterval","App","setMiners","setFilClient","reload","getMiners","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8VAKMA,EAA8B,SAAUC,GAC5C,IAAMC,EAJiB,aAMjBC,EAAIC,KAAKC,IAAI,EAAkB,EAPf,SAQhBC,EAAI,EAAIF,KAAKG,IAAIJ,GACjBK,GAAKN,EAAKI,EAChB,OAAOF,KAAKG,KAAKN,EAAiBO,IAAMN,EAAKI,IAAMF,KAAKG,IAAIJ,IAGxDM,EAAqB,SACzBC,EACAC,EACAC,EACAC,GAEA,IAEMC,EAAWV,KAAKG,IAAI,GAAT,QAEXQ,EAJoB,MAKH,EAAIX,KAAKC,IAAID,KAAKY,GAAIF,EAAWH,IAClDM,EANoB,MAOH,EAAIb,KAAKC,IAAID,KAAKY,GAAIF,EAAWJ,IAElDQ,EARsB,MAUzB,EAAId,KAAKC,IAAID,KAAKY,GAAIF,EAAWD,IAKpC,OACEI,EAhB0B,MAazB,EAAIb,KAAKC,IAAID,KAAKY,GAAIF,EAAWF,IAGIG,EAAmBG,GAIvDC,EAAkB,SAAUC,GAChC,IAEMjB,EAAIC,KAAKC,IAAI,EAAkB,EA3Cf,SA4CtB,OA3CuB,aA2CXD,KAAKC,IAAIF,EAAGiB,IAGLC,E,WACnB,cAYI,IAXFC,EAWC,EAXDA,UACAC,EAUC,EAVDA,MACAC,EASC,EATDA,OACAC,EAQC,EARDA,OACAC,EAOC,EAPDA,aACAC,EAMC,EANDA,gBACAC,EAKC,EALDA,gBACAC,EAIC,EAJDA,sBACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,yBACAC,EACC,EADDA,iBACC,oBACDC,OAAOC,OAAOC,KAAM,CAClBb,YACAC,QACAC,SACAC,SACAC,eACAC,kBACAC,kBACAC,wBACAC,gBACAC,2BACAC,qB,gEAIiBI,EAAWC,GAC9B,IAAMC,EAAmB,IAAIC,EAAgBJ,KAAKX,OAAQW,KAAKV,QACzDe,EAAuB,IAAID,EAC/BJ,KAAKR,gBACLQ,KAAKP,iBAEP,OACEQ,EACAK,EACED,EACAF,EAvFgB,KAwFhBD,K,qDAK0BD,EAAWd,GACzC,OACEa,KAAKO,oBAAoBN,EAAW,IACvB,GAAZA,EAAkBD,KAAKT,aACtBtB,KAAKuC,IAAIR,KAAKZ,MAAOJ,EAAgBG,M,gCAYzC,MAAO,CACLsB,SAReT,KAAKU,+BACpB,YAAK,EAAK,IACVV,KAAKb,WAOLwB,sBAL4BX,KAAKO,oBAAoB,YAAK,EAAK,IAAI,KAMnEK,eALqBZ,KAAKO,oBAAoB,YAAK,EAAK,IAAI,S,4DAwC9D,IA/BsC,IAEpCpB,EAWEa,KAXFb,UACAC,EAUEY,KAVFZ,MACAC,EASEW,KATFX,OACAC,EAQEU,KARFV,OACAC,EAOES,KAPFT,aACAC,EAMEQ,KANFR,gBACAC,EAKEO,KALFP,gBACAC,EAIEM,KAJFN,sBACAC,EAGEK,KAHFL,cACAC,EAEEI,KAFFJ,yBACAC,EACEG,KADFH,iBAGIM,EAAmB,IAAIC,EAAgBf,EAAQC,GAC/Ce,EAAuB,IAAID,EAC/BZ,EACAC,GAEIoB,EACJnB,EAAwBC,EAzIN,KA0IdmB,EACJlB,EAA2BD,EA3IT,KA6IdoB,EAAoB,GACtBC,EAAqB,EACrBC,EAAiB7B,EACjB8B,EAAqBrB,EACrBsB,EAAkBtD,EAA4BgC,GAG5CZ,EAAIE,EAAY,EACpBF,EAAIE,EArJc,KAqJFQ,EAAiC,EACjDV,IACA,CAEA,IAAMmC,EACJN,GACCR,EACCD,EACAF,EACA,OAEC,GAAMZ,EAAgBtB,KAAKuC,IAAIS,EAAgBjC,EAAgBC,KACpE8B,EAAkBM,KAAKD,GACvBJ,GAAsBI,EAItB,IAAME,EAAiBzD,EADvBqD,GADAD,GAAkBJ,GAGZU,EAAYjD,EAChBW,EACAA,EAAI,EACJqC,EACAH,GAEFd,EAAqBmB,YAAYD,EAAW,GAC5CpB,EAAiBqB,YAAYP,EAAgB,GAC7CE,EAAkBG,EAGpB,MAAO,CAAEP,oBAAmBC,0B,KAI1BZ,E,WACJ,WAAaqB,EAAGC,GAAI,oBAClB1B,KAAK2B,MAAQ,OACb3B,KAAK4B,KAAO,OACZ5B,KAAKyB,EAAIA,EACTzB,KAAK0B,EAAIA,E,wDAGEG,EAAOC,GAClB9B,KAAKyB,GAAKzB,KAAK0B,EAAII,EACnB,IAAMC,EAAWF,EAAQ7B,KAAKyB,EAC9BzB,KAAKyB,GAAKzB,KAAK2B,MAAQI,EACvB/B,KAAKyB,EAAIxD,KAAKuC,IAAIR,KAAKyB,EAAG,GAC1BzB,KAAK0B,GAAM1B,KAAK4B,KAAOG,EAAYD,M,KAIjCxB,EAAyB,SAAU0B,EAAWC,EAAaC,GAC/D,IAAMC,EAAMlE,KAAKG,IAAI6D,EAAYR,EAAIQ,EAAYP,GAC3CU,EAAMnE,KAAKG,IAAI6D,EAAYR,EAAIQ,EAAYP,EAAIO,EAAYP,EAAIQ,GAIrE,OAHWD,EAAYP,EAAIM,EAAUP,GAAKW,EAAMD,GAE9CH,EAAUN,GAAKO,EAAYR,GAAKU,EAAMC,GAAOH,EAAYP,EAAIQ,IAC5CjE,KAAKC,IAAI+D,EAAYP,EAAG,I,yBCvMvCW,EAAKC,EAAQ,IACbC,EAAIF,EAAGG,OAAO,QAIdC,EAHKH,EAAQ,IAGPI,CADV,oEAEIC,EAAKL,EAAQ,IAEbM,EAASN,EAAQ,KAA0CO,QAC9DC,SAEH,SAASC,EAASN,GAChB,GAAY,KAARA,EAAY,OAAOO,OAAOC,OAAO,GACrC,IAAIC,EAAMC,KAAKV,GACXW,EAAM,GAUV,OARAF,EAAIG,MAAM,IAAIC,SAAQ,SAAUC,GAC9B,IAAIC,EAAID,EAAGE,WAAW,GAAGC,SAAS,IAC9BF,EAAEG,OAAS,IACbH,EAAI,IAAMA,GAEZJ,EAAI/B,KAAKmC,MAGJR,OAAOC,OAAO,KAAOG,EAAIQ,KAAK,KAGvC,IAAMC,EAAkB,SAAAC,GAEtB,OADAC,QAAQ3F,IAAI,cAAe0F,IACtBA,GAAUA,GAAU,OAChB,CACLE,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,WAAY,SACZC,WAAY,SACZC,iBAAkB,MAClBC,gBAAiB,MACjBC,UAAW,CACTlG,EAAG,SACHmG,EAAG,UAELC,cAAe,CACbpG,EAAG,SACHmG,EAAG,UAELE,YAAa,CACXrG,EAAG,SACHmG,EAAG,UAELG,gBAAiB,CACftG,EAAG,SACHmG,EAAG,WAIF,CACLR,QAAS,SACTE,OAAQ,SACRC,WAAY,SACZC,WAAY,SACZC,iBAAkB,MAClBC,gBAAiB,MACjBC,UAAW,CACTlG,EAAG,SACHmG,EAAG,UAELE,YAAa,CACXrG,EAAG,SACHmG,EAAG,UAELG,gBAAiB,CACftG,EAAG,SACHmG,EAAG,YAKHI,EAAkB,CACtBC,KAAM,OACNC,IAAK,SACLjD,MAAO,CACLkD,KAAM,CACJC,WAAY,MACZC,cAAe,MACfC,WAAY,MACZC,gBAAiB,MACjBC,SAAU,CAAC,OAAQ,OACnBC,WAAY,MACZC,iBAAkB,OAClBC,wBAAyB,MACzBC,yBAA0B,MAC1BC,sBAAuB,OAEzBC,kBAAmB,SACnBC,gBAAiB,MACjBC,YAAa,SACbC,qBAAsB,WAI1B,SAASC,EAAYrE,GAEnB,IADA,IAAIsE,EAAM,GACDC,EAAI,EAAGA,EAAIvE,EAAEkC,OAAQqC,IAC5BD,GAAO,KACPA,GAAO/C,OAAOC,OAAOxB,EAAEuE,IAEzB,OAAOD,EAGT,SAASE,EAAexE,GAEtB,IADA,IAAIsE,EAAM,IAAIpD,EAAG,GACRqD,EAAI,EAAGA,EAAIvE,EAAEkC,OAAQqC,IAE5BD,GADAA,EAAMA,EAAIG,IAAI,IAAIvD,EAAG,OACXwD,IAAI,IAAIxD,EAAGlB,EAAEA,EAAEkC,OAASqC,EAAI,KAExC,OAAOD,EAGT,SAASK,EAAUC,EAAKC,GAEtB,IAAMC,EAAMF,EAAIG,IAAIC,IAAI,IAAI9D,EAAG,GAAG+D,KAAKJ,GAAGK,IAAI,IAAIhE,EAAG,KAGrD,OAFA0D,EAAIG,IAAMH,EAAIG,IAAII,KAAKN,GACvBD,EAAIQ,MAAQP,EACLC,EAAIO,WA+Cb,SAASC,EAAYC,GAAM,IAAD,IA5C1B,SAAoBA,GAQlB,IAPA,IAAMX,EAAM,CACVQ,KAAM,EAAIG,EAAIrD,OACd6C,IAAKP,EAAce,IAGfC,GADUb,EAASC,EAAK,GAChBD,EAASC,EAAK,IACtBE,EAAM,GACLF,EAAIQ,KAAO,GAAG,CAEnB,GAAW,IADFT,EAASC,EAAK,GAMvB,GAAW,IADFD,EAASC,EAAK,GACvB,CAOA,IAFA,IAAIa,EAAI,EACJC,EAAI,EACCnB,EAAI,GAASA,IAAK,CACzB,GAAU,KAANA,EACF,MAAM,IAAIoB,MAAM,gBAElB,IAAI5C,EAAI4B,EAASC,EAAK,GACtB,GAAI7B,EAAI,IAAM,CACZ,GAAIwB,EAAI,GAAY,IAANA,GAAWxB,EAAI,EAC3B,MAAM,IAAI4C,MAAM,gBACX,GAAU,IAAN5C,GAAW2C,EAAI,EACxB,MAAM,IAAIC,MAAM,eAElBF,GAAK1C,GAAK2C,EACV,MAEFD,IAAU,IAAJ1C,IAAa2C,EACnBA,GAAK,EAEPZ,EAAIlF,KAAK6F,OAxBT,CACE,IAAM7I,EAAI+H,EAASC,EAAK,GACxBE,EAAIlF,KAAKhD,QANTkI,EAAIlF,KAAK,GA8Bb,MAAO,CAAE4F,QAAOI,KAAMd,GAIEe,CAAUN,GAA1BC,EADgB,EAChBA,MAAOI,EADS,EACTA,KACXE,EAAMN,EACJV,EAAM,GACRR,EAAM,EAJc,cAKVsB,GALU,IAKxB,2BAAoB,CAClB,IADmB,IAAZG,EAAW,QACTxB,EAAI,EAAGA,EAAIwB,EAAGxB,IACT,IAARuB,GAAWhB,EAAIlF,KAAK0E,GACxBA,IAEFwB,EAAM,EAAIA,GAVY,8BAYxB,OAAOhB,E,IAGYkB,E,WACnB,WAAaC,GAAc,oBACzB1H,KAAK2H,IAAMD,EACX,IAAME,EAAW,IAAIC,IAAgBH,GACrC3D,QAAQ3F,IAAI,eAAgBsJ,GAC5B1H,KAAK8H,OAAS,IAAIC,WAASH,EAAU,CAAEhF,W,6FAG1BoF,EAAMC,EAAMrF,G,oFACnBsF,EAAQF,EAAKG,OAAO,GAAGC,gBAAgB,KACvCC,EACJL,EAAKM,QAAU,OAAf,UAA2BJ,EAA3B,cAAsCD,GAAtC,UAAkDC,EAAlD,YAA2DD,G,SACzCjI,KAAK8H,OAAOS,aAAaF,G,cAAvCG,E,OAA8CC,IAE9CC,EAAO1I,K,SACA2I,IAAIC,QAAQC,OAAOjG,EAAQ4F,GAAMM,SAAjC,uCAA0C,WAAMzK,GAAN,eAAAA,EAAA,sEACnCqK,EAAKZ,OAAOS,aAAalK,GADU,cAC/CkI,EAD+C,yBAE9CA,EAAIkC,KAF0C,2CAA1C,uD,+SAOAzI,KAAK8H,OAAOiB,Y,oOAGGC,EAAKlF,G,uFACb9D,KAAK8H,OAAOS,aAAZ,UAA4BS,EAAI,O,cAA9CX,E,OAAuDI,IAAI,GAAG,G,kBAC7DJ,EAAKY,KAAI,SAAAC,GACd,IAAMC,EAAeR,IAAIC,QAAQC,OAC/BhF,EAAgBC,GAChBoF,GAEF,MAAO,CACL,CACElF,QAAS+C,EAAWoC,EAAanF,SACjCE,OAAQ6C,EAAWoC,EAAajF,QAAQkF,QAAO,SAACrD,EAAKsD,GAEnD,OADAtD,EAAIsD,IAAQ,EACLtD,IACN,IACH3B,WAAY2C,EAAWoC,EAAa/E,YAAYgF,QAC9C,SAACrD,EAAKsD,GAEJ,OADAtD,EAAIsD,IAAQ,EACLtD,IAET,IAEF5B,WAAY4C,EAAWoC,EAAahF,YAAYiF,QAC9C,SAACrD,EAAKsD,GAEJ,OADAtD,EAAIsD,IAAQ,EACLtD,IAET,U,wLAOajC,G,iFACR9D,KAAK8H,OAAOwB,uBAAuBxF,EAAQ,M,yNAGxCkE,G,kFACVE,EAAQF,EAAKG,OAAO,GAAGC,gBAAgB,KACvCC,EACJL,EAAKM,QAAU,OAAf,UAA2BJ,EAA3B,0BAAoDA,EAApD,c,SACkClI,KAAK8H,OAAOS,aAAaF,G,cAAvDkB,E,OAA8Dd,I,kBAC7D,CACLe,kBAAmB1D,EAAWrD,EAAIoG,OAAOU,EAAqB,KAC9DE,oBAAqB3D,EAAWrD,EAAIoG,OAAOU,EAAqB,KAChEG,qBAAsB5D,EAAWrD,EAAIoG,OAAOU,EAAqB,KACjEI,sBAAuB7D,EAAWrD,EAAIoG,OAAOU,EAAqB,KAClEK,sBAAuB9D,EAAWrD,EAAIoG,OAAOU,EAAqB,KAClEM,sBAAuB/D,EAAWrD,EAAIoG,OAAOU,EAAqB,KAClEO,yBAA0BhE,EAAWrD,EAAIoG,OAAOU,EAAqB,KACrEQ,0BAA2BjE,EAAWrD,EAAIoG,OAAOU,EAAqB,O,oLAIrDS,EAAMhC,G,qGACLhI,KAAK8H,OAAOmC,eAAeD,EAAMhC,EAAKkC,M,cAApDhC,E,OACEiC,EAAmBjC,EAAnBiC,MAAOC,EAAYlC,EAAZkC,QACPC,EAA2DF,EAA3DE,kBAAmBC,EAAwCH,EAAxCG,YAAaC,EAA2BJ,EAA3BI,cAAeC,EAAYL,EAAZK,QACjDC,EAAYL,EAAUG,EAAgBF,EAAoBC,E,kBAEzD,CACLF,QAAS7H,EAAE6H,EAAU,MACrBG,cAAehI,EAAEgI,EAAgB,MACjCE,UAAWlI,EAAEkI,EAAY,MACzBH,YAAa/H,EAAE+H,EAAc,MAC7BD,kBAAmB9H,EAAE8H,EAAoB,MACzCG,QAASjI,EAAEiI,EAAU,Q,oQAKjBE,EAAS1H,OAAO2H,aAAaC,QAAQ,UACrCC,EAAa7H,OAAO2H,aAAaC,QAAQ,UAC3CF,GAAUG,GAAcC,KAAKC,OAASF,EAAa,K,yCAC9CG,KAAKC,MAAMP,I,uBAGZQ,MAAM,6D,8BACZC,O,cAFIA,E,OAGAC,EAASD,EAAKC,OAAOhC,QAAO,SAACrD,EAAKsD,GAEtC,OADAtD,EAAIsD,EAAKgC,SAAWhC,EACbtD,IACN,IAEH/C,OAAO2H,aAAaW,QAAQ,SAAUN,KAAKO,UAAUH,IACrDpI,OAAO2H,aAAaW,QAAQ,OAAQR,KAAKC,O,kBAElCK,G,qLAGkBI,EAAOxD,G,2FAC1BE,EAAQF,EAAKG,OAAO,GAAGC,gBAAgB,KACvCC,EACJL,EAAKM,QAAU,OAAf,UACOJ,EADP,kBACsBsD,EADtB,mBAEOtD,EAFP,gBAEoBsD,EAFpB,S,SAG2BxL,KAAK8H,OAAOS,aAAaF,G,cAAhDoD,E,OAAuDhD,IAAI,G,SAEzCiD,IAAU,GAAID,EAAL,uCAAoB,WAAME,GAAN,eAAAtN,EAAA,sEAC3B,EAAKyJ,OAAO8D,aAAZ,UAA4BD,EAAS,OADV,cAC7CE,EAD6C,OACmBpD,IADnB,kBAE5C,CACLqD,WAAYD,EAAS,GACrBE,YAAaF,EAAS,GACtBG,aAAcH,EAAS,GACvBnH,YAAa,CAAEuH,IAAKC,OAAOnJ,EAAQ8I,EAAS,GAAG,QANE,2CAApB,uD,cAA3BM,E,yBASCA,G,uLAGanC,EAAMhC,G,0FACnBhI,KAAK8H,OAAOsE,eAAepC,EAAMhC,EAAKkC,O,uLAGzBF,EAAMhC,G,mGACUqE,QAAQC,IAAI,CAC9CtM,KAAK8H,OAAOyE,0BAA0BvC,EAAMhC,EAAKkC,MACjDlK,KAAKwM,oBAAoBxC,EAAMhC,K,0CAF1B6D,E,KAAUM,E,KAIjBpI,QAAQ3F,IAAI,iCAENqO,EAAgB,YAAIC,MAAM,KAAKzD,KAAI,SAAC0D,EAAG3G,GAAJ,mBAAC,eACrCmG,GAAWN,EAASe,MAAQ5G,GAAK,KADG,IAEvC6G,MAAOhB,EAASgB,MAAY,GAAJ7G,EACxB4G,OAAQf,EAASe,MAAQ5G,GAAK,QAG1B8G,EAAeX,EAClBlD,KAAI,SAAA8D,GAAC,OAAKA,EAAEhB,eACZ3C,QAAO,SAACrD,EAAKsD,GAAN,OAAetD,EAAMsD,IAAM,GAE/B2D,EACJb,EACGlD,KAAI,SAAA8D,GAAC,OAAKA,EAAErI,YAAYuH,OACxB7C,QAAO,SAACrD,EAAKsD,GAAN,OAAetD,EAAMsD,IAAM,GAFrC,Y,kBAKK,CACL8C,UAAWA,EAAUlD,KAAI,SAAC8D,EAAG/G,GAAJ,mBAAC,eACrBmG,EAAUnG,IADU,IAEvB6G,MAAOhB,EAASgB,MAAY,GAAJ7G,EACxB4G,MAAO5G,OAETyG,gBACAK,eACAE,cACAC,YAAaH,EAAeE,EAC5BnB,a,kMAI4B7B,EAAMhC,G,kFAC9BK,EAAOL,EAAKM,QAAU,OAAf,cAA+B0B,EAA/B,sBAAmDA,EAAnD,Q,SACqBhK,KAAKkN,QAAQlF,EAAMK,EAAMzD,G,cAArDuI,E,OACAC,EAAqB/K,EACxBgL,OACCvN,OAAOwN,KAAKH,GAAqBlE,KAAI,SAAA8D,GAAC,MAAK,CACzCQ,aAAcJ,EAAoBJ,GAAGhI,KAAKE,cAC1CuI,OAAQL,EAAoBJ,GAAGpH,gBAAvB,WAEV,SAAAoH,GAAC,OAAIA,EAAES,UAERvE,KAAI,yCAAwB,CAC3BuE,OADG,KAEHxJ,QAFG,KAEciF,KAAI,SAAA8D,GAAC,OAAIA,EAAEQ,oBAE7BE,MAAK,SAACpP,EAAGmG,GAAJ,OAAUnG,EAAEmP,OAAShJ,EAAEgJ,U,kBAExB,CACLJ,qBACAM,MAAO5N,OAAOwN,KAAKH,GAAqBxJ,S,qLAIxBqG,EAAMhC,G,2FACChI,KAAK8H,OAAO6F,kBACnC3D,EACA,KACAhC,EAAKkC,M,cAHD0D,E,OAKA5J,EAAU4J,EAAWxE,QAAO,SAACrD,EAAKsD,GAEtC,OADAtD,EAAIsD,EAAKwE,IAAM,CAAEC,OAAQzE,EAAKwE,GAAI9I,KAAMsE,GACjCtD,IACN,IAEGgI,EAAejO,OAAOwN,KAAKtJ,GAASL,O,kBACnC,CAAEoK,eAAc/J,Y,2LAGCgE,G,+FACcqE,QAAQC,IAAI,CAChDtM,KAAK8H,OAAOkG,uBAAuBhG,EAAKkC,MACxClK,KAAK8H,OAAOmC,eAAe,MAAOjC,EAAKkC,MACvClK,KAAK8H,OAAOmC,eAAe,MAAOjC,EAAKkC,Q,0CAHlC+D,E,KAAQC,E,KAAQC,E,uBAMhB,CAAEF,SAAQC,SAAQC,U,8IAIzBnG,E,KAOC,IANCiG,EAMF,EANEA,OAAQC,EAMV,EANUA,OAAQC,EAMlB,EANkBA,MAEhBxO,EAIF,EAJEA,cAIF,IAHED,6BAGF,MAH0B,YAAK,EAAK,IAGpC,MAFEE,gCAEF,eAF6B,EAAK,IAElC,EACMwO,EAAS,CACbjP,WAAY6I,EAAKM,OACjBlJ,OAAQ+O,EAAMhE,MAAML,yBACpBzK,QAAS8O,EAAMhE,MAAMkE,yBAAyBC,iBAAtC,SAAyD,EAAK,KACtEhP,QAAS6O,EAAMhE,MAAMkE,yBAAyBE,iBAAtC,SAAyD,EAAK,KACtEhP,cAAe0O,EAAOO,eAAiB,KACvChP,iBACG0O,EAAO/D,MAAMsE,wBAAwBH,kBAC1B,KAAX,WAAK,MACR7O,iBACGyO,EAAO/D,MAAMsE,wBAAwBF,kBAC1B,KAAX,WAAK,MACR1O,kBAAmBqO,EAAO/D,MAAMuE,eAChChP,wBACAC,gBACAC,4BAKF,OAFa,IAAI+O,EAAUP,GAEfQ,c,KC3bD,SAASC,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,MAAOnH,EAAa,EAAbA,IAAKoH,EAAQ,EAARA,KAC7C,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,iBACZrH,EAAM,uBAAGsH,KAAMtH,GAAMmH,GAAa,oCAAGA,IAExC,yBAAKE,UAAU,gBAAgBD,ICJrC,IAAM1M,EAAKC,EAAQ,IAEb4M,GADI7M,EAAGG,OAAO,KACTH,EAAGG,OAAO,SAEN,SAAS2M,EAAT,GAA0C,IAAzB/D,EAAwB,EAAxBA,OAAQtD,EAAgB,EAAhBA,OAAQE,EAAQ,EAARA,KAAQ,EAChBoH,qBADgB,mBAC/CC,EAD+C,KAClCC,EADkC,KAgBtD,OAbAC,qBAAU,WACHvH,GACa,uCAAG,8BAAA3J,EAAA,sEACEyJ,EAAO0H,mBAAmBxH,GAD5B,OACbyH,EADa,OAEbb,EAAU9G,EAAO4H,iBAAiB1H,EAAMyH,EAAQ,CACpD9P,cAAe,IAEjBoE,QAAQ3F,IAAI,UAAWwQ,GACvBU,EAAeV,GANI,2CAAH,oDAQlBe,KACC,CAAC7H,EAAQE,IAGV,6BAAS4H,GAAG,OAAOZ,UAAU,aAC3B,yBAAKA,UAAU,aACb,0CACC5D,GACCtL,OAAOwN,KAAKlC,GACTyE,MAAM,EAAG,GACT5G,KAAI,SAAC8D,EAAG/G,GAAJ,OACH,yBAAKlB,IAAKkB,GACPA,EAAI,EADP,IACW,IACT,kBAAC,IAAD,CAAM8J,GAAE,kBAAa1E,EAAO2B,GAAG1B,UAC5BD,EAAO2B,GAAG1B,aAIrB,iDACmB,kBAAC,IAAD,CAAMyE,GAAG,SAAT,iBADnB,yCAE2B,kBAAC,IAAD,CAAMA,GAAG,WAAT,kBAF3B,MAKDT,GACC,yBAAKO,GAAG,WAAWZ,UAAU,WAC3B,yCACA,yBAAKA,UAAU,QACZK,GACC,kBAACR,EAAD,CACEC,MAAK,UAAKI,EAAGG,EAAY5O,UAAY,GAAhC,QACLsO,KAAK,WAIRM,GACC,kBAACR,EAAD,CACEC,MAAK,UAAKI,EAAGG,EAAY1O,uBAAyB,GAA7C,QACLoO,KAAK,oBAIRM,GACC,kBAACR,EAAD,CACEE,KAAK,YACLD,MAAK,UAAKI,EAAGG,EAAYzO,gBAAkB,GAAtC,WApBb,uJC3CO,SAASmP,EAAT,GAAgD,IAAnBlE,EAAkB,EAAlBA,SAAU7D,EAAQ,EAARA,KAC9C+E,EAAIlB,EAEV,OACE,yBAAKmD,UAAU,wBACb,yBAAKA,UAA6B,IAAlBjC,EAAEhB,YAAoB,oBAAsB,YAC1D,yBAAKiD,UAAU,OAAf,MACMjC,EAAEF,MAAQ7E,EAAKM,QAGrB,yBAAK0G,UAAU,cACb,yBAAKA,UAAU,MACZ/Q,KAAK+R,MAAuB,GAAhBjD,EAAEhB,YAAoB,MADrC,QAGA,yBAAKiD,UAAU,QACZ,YACItC,MACDzO,KAAKgS,KACHhS,KAAK+R,MACc,GAAhBjD,EAAEhB,YAAoB,MACpBgB,EAAErI,YAAYuH,IAAf,eACA,KAGRhD,KAAI,SAACvH,EAAGsE,GAAJ,OACJ,yBAAKlB,IAAKkB,EAAGgJ,UAAU,OACpB,QAGJ,YACItC,MACDzO,KAAKgS,KACHhS,KAAK+R,OAAOjD,EAAErI,YAAYuH,IAAf,eACT,KAGNhD,KAAI,SAACvH,EAAGsE,GAAJ,OACJ,yBAAKlB,IAAKkB,EAAGgJ,UAAU,cACpB,YClCjB,IACMkB,EADK5N,EAAQ,IACLE,OAAO,QAGN,SAAS2N,EAAT,GAAiD,IAA9BrI,EAA6B,EAA7BA,OAAQsI,EAAqB,EAArBA,IAAKpI,EAAgB,EAAhBA,KAAMoD,EAAU,EAAVA,OAAU,EACfgE,mBAAS,IADM,mBACtDiB,EADsD,KACrCC,EADqC,OAEPlB,mBAAS,IAFF,mBAEtDmB,EAFsD,KAEjCC,EAFiC,OAGjCpB,qBAHiC,mBAGtDqB,EAHsD,KAG9CC,EAH8C,OAI/BtB,qBAJ+B,mBAItDuB,EAJsD,KAI7CC,EAJ6C,KAkD7D,OA5CArB,qBAAU,WACHvH,GAEiB,uCAAG,oCAAA3J,EAAA,6DACjBwS,EADiB,+BAAAxS,EAAA,MACP,WAAMyS,GAAN,iBAAAzS,EAAA,sEACSyJ,EAAOiJ,gBAAgB/I,EAAKM,OAASwI,GAD9C,cACRE,EADQ,gBAEQlJ,EAAOmJ,WAAWD,GAF1B,cAERE,EAFQ,yBAGPA,GAHO,2CADO,+DAOS7E,QAAQC,IAAI,CAACuE,EAAQ,IAAKA,EAAQ,OAP3C,0CAOhBJ,EAPgB,KAORE,EAPQ,cASjBD,EAAUD,GATO,wBAUjBG,EAAWD,GAVM,4CAAH,oDAYtBQ,KACC,CAACnJ,IAEJuH,qBAAU,WACR,IAAI6B,GAAU,EACd,GAAKpJ,EAAL,CAEA,IAAMqJ,EAAavR,OAAOwN,KAAKlC,GAC5ByE,MAAM,EAAG,IACT5G,KAAI,SAAA8D,GAAC,OAAI3B,EAAO2B,GAAG1B,WAetB,OAdAK,IAAU,EAAG2F,EAAJ,uCAAgB,WAAMC,GAAN,mBAAAjT,EAAA,yDAClB+S,EADkB,iEAECtJ,EAAOyJ,eAAeD,EAAStJ,GAFhC,UAEjBmE,EAFiB,OAGlBiF,EAHkB,iEAIAtJ,EAAOiJ,gBAAgB/I,EAAKM,OAAS,MAJrC,UAIjB0I,EAJiB,OAKlBI,EALkB,oEAMKtJ,EAAOyJ,eAAeD,EAASN,GANpC,WAMjBQ,EANiB,OAOlBJ,EAPkB,0DAQvBf,EAAgBiB,GAAWnF,EAC3BoE,EAAoBe,GAAWE,EATR,UAUjBlB,EAAmB,eAAKD,IAVP,yBAWVG,EAAuB,eAAKD,IAXlB,qFAAhB,uDAcF,WACLa,GAAU,MAEX,CAACtJ,EAAQE,EAAMoD,IAGhB,6BAAS4D,UAAU,aACjB,yBAAKY,GAAG,WAAWZ,UAAU,WAC3B,yBAAKA,UAAU,QACZoB,GACC,oCACE,kBAACvB,EAAD,CACEC,MAAOoB,EAAGuB,SAASrB,EAAI1G,sBA3DpB,iBA4DHqF,KAAK,oBAIV0B,GAAUL,GACT,oCACE,kBAACvB,EAAD,CACEC,MAAOoB,EACLuB,SACErB,EAAI1G,qBAAuB+G,EAAO/G,sBArEnC,iBAwEHqF,KAAK,qBAIV4B,GAAWP,GACV,oCACE,kBAACvB,EAAD,CACEC,MAAOoB,EACLuB,SACErB,EAAI1G,qBAAuBiH,EAAQjH,sBAjFpC,iBAoFHqF,KAAK,wBA/BjB,kDAsCG3D,GACCtL,OAAOwN,KAAKlC,GACTyE,MAAM,EAAG,IACT5G,KAAI,SAAC8D,EAAG/G,GAAJ,OACH,yBAAKgJ,UAAU,OAAOlK,IAAKkB,GACzB,kBAAC,IAAD,CAAM8J,GAAE,kBAAa1E,EAAO2B,GAAG1B,UAC5BD,EAAO2B,GAAG1B,SAEZgF,GAAmBA,EAAgBjF,EAAO2B,GAAG1B,UAC5C,kBAAC0E,EAAD,CACE/H,KAAMA,EACN6D,SACEwE,EAAgBjF,EAAO2B,GAAG1B,SAASoB,cAAc,MAItD8D,GACCA,EAAoBnF,EAAO2B,GAAG1B,UAC5B,kBAAC0E,EAAD,CACE/H,KAAMA,EACN6D,SACE0E,EAAoBnF,EAAO2B,GAAG1B,SAASoB,cAAc,WCrH5D,SAASiF,EAAT,GAA+D,IAAxCJ,EAAuC,EAAvCA,QAASnF,EAA8B,EAA9BA,UAAWnE,EAAmB,EAAnBA,KAAM2J,EAAa,EAAbA,KAAMC,EAAO,EAAPA,IAOpE,OANKD,IACHA,EAAO,SAAA5E,GAAC,wBAAeuE,EAAf,sBAAoCvE,EAAEH,SAE3CgF,IACHA,EAAM,gBAAG7E,EAAH,EAAGA,EAAG/E,EAAN,EAAMA,KAAN,EAAYhC,EAAZ,mBAA0B+G,EAAEF,MAAQ7E,EAAKM,UAE5CN,GAASmE,EAIZ,yBAAK6C,UAAU,wBACZ7C,GACCA,EAAUlD,KAAI,SAAC8D,EAAG/G,GAAJ,OACZ,yBACElB,IAAKkB,EACLgJ,UAA6B,IAAlBjC,EAAEhB,YAAoB,oBAAsB,YAEvD,kBAAC,IAAD,CAAM+D,GAAI6B,EAAK5E,IACb,yBAAKiC,UAAU,OACZ4C,EAAI,CAAE7E,IAAG/E,OAAMhC,OAGlB,yBAAKgJ,UAAU,cACb,yBAAKA,UAAU,MACZ/Q,KAAK+R,MAAuB,GAAhBjD,EAAEhB,YAAoB,MADrC,QAGA,yBAAKiD,UAAU,QACZ,YACItC,MACDzO,KAAKgS,KACHhS,KAAK+R,MACc,GAAhBjD,EAAEhB,YAAoB,MACpBgB,EAAErI,YAAYuH,IAAf,eACA,KAGRhD,KAAI,SAACvH,EAAGsE,GAAJ,OACJ,yBAAKlB,IAAKkB,EAAGgJ,UAAU,OACpB,QAIJ,YACItC,MACDzO,KAAKgS,KACHhS,KAAK+R,OACFjD,EAAErI,YAAYuH,IAAf,eACE,KAGRhD,KAAI,SAACvH,EAAGsE,GAAJ,OACJ,yBAAKlB,IAAKkB,EAAGgJ,UAAU,cACpB,gBA7CZ,qCCLI,SAAS6C,EAAT,GAAoC,IAAnBzG,EAAkB,EAAlBA,OAAQtD,EAAU,EAAVA,OAAU,EACFsH,mBAAS,IADP,mBACzCiB,EADyC,KACxBC,EADwB,OAExBlB,qBAFwB,mBAEzCpH,EAFyC,KAEnC8J,EAFmC,KAgChD,OA5BAvC,qBAAU,YACU,uCAAG,4BAAAlR,EAAA,sEACGyJ,EAAOiK,YADV,OACbC,EADa,OAEnBF,EAAQE,GAFW,2CAAH,qDAIlBC,KACC,CAACnK,IAEJyH,qBAAU,WACR,IAAI6B,GAAU,EACd,GAAKpJ,EAAL,CAEA,IAAMqJ,EAAavR,OAAOwN,KAAKlC,GAC5ByE,MAAM,EAAG,IACT5G,KAAI,SAAA8D,GAAC,OAAI3B,EAAO2B,GAAG1B,WAStB,OARAK,IAAU,EAAG2F,EAAJ,uCAAgB,WAAMC,GAAN,eAAAjT,EAAA,yDAClB+S,EADkB,iEAECtJ,EAAOyJ,eAAeD,EAAStJ,GAFhC,UAEjBmE,EAFiB,OAGlBiF,EAHkB,wDAIvBf,EAAgBiB,GAAWnF,EAAUM,cAJd,UAKV6D,EAAmB,eAAKD,IALd,qFAAhB,uDAQF,WACLe,GAAU,MAEX,CAACtJ,EAAQE,EAAMoD,IAGhB,6BAASwE,GAAG,SAASZ,UAAU,aAA/B,kDAEG5D,GACCtL,OAAOwN,KAAKlC,GACTyE,MAAM,EAAG,IACT5G,KAAI,SAAC8D,EAAG/G,GAAJ,OACH,yBAAKlB,IAAKkB,GACR,kBAAC,IAAD,CAAM8J,GAAE,kBAAa1E,EAAO2B,GAAG1B,UAC5BD,EAAO2B,GAAG1B,SAGb,kBAACqG,EAAD,CACEvF,UAAWkE,EAAgBjF,EAAO2B,GAAG1B,SACrCrD,KAAMA,S,YCjDP,SAASkK,EAAT,GAMZ,EALDpK,OAKE,IAJFsD,EAIC,EAJDA,OACAkG,EAGC,EAHDA,QACAa,EAEC,EAFDA,WACA3G,EACC,EADDA,MAEA,OACE,yBAAKwD,UAAU,oBAEb,yBAAKA,UAAU,YACXmD,GACA,oCACE,kBAAC,IAAD,CAAMrC,GAAE,kBAAawB,IAAYA,GACjC,0BAAMtC,UAAU,aACd,uBAAGC,KAAI,yCAAoCqC,IAA3C,WAED9F,GAASA,EAAM4G,UAAwC,KAA3B5G,EAAM4G,SAAS5H,SAC1C,0BAAMwE,UAAU,QAAhB,SAILmD,GACC,oCACE,kBAAC,IAAD,CAAMrC,GAAE,kBAAawB,EAAb,sBAAkCa,IAA1C,YACYA,KAKjBA,GACC,oCACE,yBAAKnD,UAAU,UACb,kBAAC,IAAD,CAAMc,GAAE,kBAAawB,IAArB,YAEE,0BAAMtC,UAAU,UAAhB,IAA2BsC,OAKjCa,GACA,6BACG/G,GAAUA,EAAOkG,IAAYlG,EAAOkG,GAASe,KAC5C,0BAAMrD,UAAU,cACb5D,EAAOkG,GAASe,IAAIC,KAEpBlH,GAAUA,EAAOkG,GAASiB,UACzB,kCAAQnH,EAAOkG,GAASiB,SAASC,cC3CjD,IAAMnQ,GAAKC,EAAQ,IACbC,GAAIF,GAAGG,OAAO,KACd0N,GAAK7N,GAAGG,OAAO,QAuLNiQ,oBArLf,YAA8C,IAatBzM,EAbHoF,EAAwB,EAAxBA,OAAQtD,EAAgB,EAAhBA,OAAQE,EAAQ,EAARA,KAAQ,EACX0K,cAAxBpB,EADmC,EACnCA,QAASa,EAD0B,EAC1BA,WAD0B,EAEP/C,qBAFO,mBAEpCuD,EAFoC,KAExBC,EAFwB,OAICxD,mBAAS,IAJV,mBAIpCyD,EAJoC,KAIpBC,EAJoB,OAKC1D,qBALD,mBAKpC2D,EALoC,KAKpBC,EALoB,KA4E3C,OAvDAzD,qBAAU,WACHwD,GACLjL,EACGmL,uBAAuBF,EAAe5G,UAAUgG,GAAYrG,YAC5DoH,MAAK,SAAAnG,GACJ6F,EAAc7F,QAEjB,CAACgG,IAEJxD,qBAAU,WACR,GAAK+B,GAAYtJ,GAASmK,EAA1B,CAIA,IAIMgB,EAAS,YAAIzG,MAAM,KAAKzD,KAAI,SAAC0D,EAAG3G,GAAJ,MAAW,CAC3ClC,OAAQkE,EAAKM,OAAa,KAAJtC,EACtBoN,IAAKpN,MAGP,KAAI+M,GACE/K,EAAKM,OAASyK,EAAe5G,UAAUgG,GAAYtF,OADzD,CAOA,IACEnB,IAAU,GAAIyH,EAAL,uCAAa,mCAAA9U,EAAA,6DAAS+U,EAAT,EAASA,IAAKtP,EAAd,EAAcA,OAAd,kBAEKgE,EAAOiJ,gBAAgBjN,GAF5B,OAEZkN,EAFY,6CAIMlJ,EAAOyJ,eAAeD,EAASN,GAJrC,OAIZ7E,EAJY,+BAMlB0G,EAAeO,GAAOjH,EACtB2G,EAAkB,eAAKD,IACX,IAARO,GACFJ,EAAkB7G,GATF,kDAYlBpI,QAAQ3F,IAAI,iBAAkBgV,EAAKtP,GAZjB,0DAAb,uDAeT,MAAO7E,GACP8E,QAAQ3F,IAAI,gBAAiBa,GAG/B,OAAO,YACK,GA1BR8E,QAAQ3F,IAAI4J,EAAKM,OAAQyK,EAAe5G,UAAUgG,GAAYtF,UA4BjE,CAAC/E,EAAQE,EAAMsJ,EAASa,EAAYY,IAGrC,6BAAS/D,UAAU,aACjB,kBAACkD,EAAD,CACEpK,OAAQA,EACRsD,OAAQA,EACRkG,QAASA,EACTa,WAAYA,IAEd,yBAAKnD,UAAU,iBACb,yBAAKA,UAAU,QACZ6D,GAAkBA,EAAe,IAChC,kBAAChE,EAAD,CACEC,MAAK,UAAKoB,GACgD,IAAtD2C,EAAe,GAAG1G,UAAUgG,GAAYpG,YACxC,MAFC,QAILgD,KAAI,UAAKxM,GACPsQ,EAAe,GAAG1G,UAAUgG,GAAYpG,aADtC,mBAKP8G,GAAkBA,EAAe,IAChC,kBAAChE,EAAD,CACEC,MAAK,UAAKoB,IACP2C,EAAe,GAAG1G,UAAUgG,GAAYzN,YAAYuH,IAArD,eADG,QAIL8C,KAAI,UAAKxM,IACNsQ,EAAe,GAAG1G,UAAUgG,GAAYzN,YAAYuH,IAArD,aADE,uBAQZ,yBAAK+C,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,uCACA,uBAAGqE,YAAA,EAASC,WAAS,cAArB,mBAGA,kBAAC,IAAD,CAAc1D,GAAG,aAAa2D,OAAO,QAAQC,MAAM,OACjD,4GAGE,6BAHF,uFAUN,kBAAC9B,EAAD,CACEC,KAAM,SAAA5E,GAAC,wBAAeuE,EAAf,sBAAoCa,IAC3ChG,WAtHcnG,EAsHWmM,EA3HxBrS,OAAOwN,KAAKuF,GAChBpF,MAAK,SAACpP,EAAGmG,GAAJ,OAAWnG,GAAKmG,KACrByE,KAAI,SAAAjL,GAAC,MAAI,CAACA,EAAG6U,EAAe7U,OAK5BiL,KAAI,YAAyB,IAAD,mBAC3B,OAD2B,UACVkD,UAAUnG,MAE5ByN,QAkHGzL,KAAMA,EACN4J,IAAK,cAAG7E,EAAH,EAAM/E,KAAN,IAAYhC,EAAZ,EAAYA,EAAZ,OAA2B,IAANA,EAAA,kBAAuBA,EAAvB,aAG9B,yBAAKgJ,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,uCACA,uBAAGqE,YAAA,EAASC,WAAS,gBAArB,mBAGA,kBAAC,IAAD,CAAc1D,GAAG,eAAe2D,OAAO,QAAQC,MAAM,OACnD,mEAILb,GACC,6BACGA,EAAW1J,KAAI,SAACyK,EAAW1N,GAAZ,OACd,yBAAKlB,IAAKkB,GACR,yCACaA,EAAG,IACblG,OAAOwN,KAAKoG,EAAU,GAAGxP,QAAQP,SAChC+P,EAAU,GAAG1P,QAAQL,QACrB,0BAAMqL,UAAU,QAAhB,SAGJ,yBAAKA,UAAU,eACZ0E,EAAU,GAAG1P,QAAQiF,KAAI,SAAA0K,GAAM,OAC9B,yBACE7O,IAAK6O,EACL3E,UAAS,mBAAc0E,EAAU,GAAGxP,OAAOyP,IACzC,SADO,YACKD,EAAU,GAAGtP,WAAWuP,IACpC,aAFO,YAESD,EAAU,GAAGvP,WAAWwP,IACxC,eAEF,8BAAOA,kBC3KvBtR,GAAKC,EAAQ,IACbC,GAAIF,GAAGG,OAAO,KACd0N,GAAK7N,GAAGG,OAAO,QAoRNiQ,oBAlRf,YAA+C,IAAzB3K,EAAwB,EAAxBA,OAAQsD,EAAgB,EAAhBA,OAAQpD,EAAQ,EAARA,KAC5BsJ,EAAYoB,cAAZpB,QADoC,EAElBlC,mBAAS,CAAEQ,GAAI0B,IAFG,mBAErC9F,EAFqC,KAE9BoI,EAF8B,KAwE5C,OAnEArE,qBAAU,WACR,GAAK+B,GAAYtJ,GAASF,EAA1B,CAIA,IAAIsJ,GAAU,EAyDd,OAtDEwC,EAAS,eAAKpI,IAEd1D,EACG+L,eAAevC,EAAStJ,GACxBkL,MAAK,SAAAnO,GACAqM,IACF5F,EAAMzG,KAAOA,EACb6O,EAAS,eAAKpI,QAGjBsI,OAAM,SAAA7U,GACL8E,QAAQgQ,MAAM,iCAGlBjM,EACGyJ,eAAeD,EAAStJ,GACxBkL,MAAK,SAAA/G,GACAiF,IACF5F,EAAMW,UAAYA,EAClByH,EAAS,eAAKpI,IACdzH,QAAQ3F,IAAI,yBAGf0V,OAAM,SAAA7U,GACL8E,QAAQgQ,MAAM,gCAGlBjM,EACGkM,cAAc1C,EAAStJ,GACvBkL,MAAK,SAAAd,GACAhB,IACF5F,EAAM4G,SAAWA,EACjBwB,EAAS,eAAKpI,QAGjBsI,OAAM,SAAA7U,GACL8E,QAAQgQ,MAAM,+BAGlBjM,EACGmM,yBAAyB3C,EAAStJ,GAClCkL,MAAK,SAAAgB,GACA9C,IACF5F,EAAM0I,WAAaA,EACnBN,EAAS,eAAKpI,QAGjBsI,OAAM,SAAA7U,GACL8E,QAAQgQ,MAAM,uCAAwC9U,MAMrD,WACLmS,GAAU,MAEX,CAACtJ,EAAQE,EAAMsJ,IAEb9F,GAAUxD,EAKb,6BAASgH,UAAU,aACjB,kBAACkD,EAAD,CACEpK,OAAQA,EACRsD,OAAQA,EACRkG,QAASA,EACT9F,MAAOA,IAET,yBAAKoE,GAAG,WAAWZ,UAAU,WAC3B,yBAAKA,UAAU,QACZxD,EAAM4G,UACL,kBAACvD,EAAD,CACEC,MAAK,UAAKvM,GAAEiJ,EAAM4G,SAAShI,SAAW,GAAjC,QACL2E,KAAK,YAIRvD,EAAM4G,UACL,kBAACvD,EAAD,CACEC,MAAK,UAAKvM,GAAEiJ,EAAM4G,SAAS3H,WAAa,GAAnC,QACLsE,KAAK,cAIRvD,EAAM4G,UACL,kBAACvD,EAAD,CACEE,KAAK,UACLD,MAAK,UAAKvM,GAAEiJ,EAAM4G,SAAS9H,aAAe,GAArC,WAIX,yBAAK0E,UAAU,QACZxD,EAAM4G,UACL,kBAACvD,EAAD,CACEC,MAAK,UAAKvM,GAAEiJ,EAAM4G,SAAS7H,eAAiB,GAAvC,QACLwE,KAAK,mBAGRvD,EAAM4G,UACL,kBAACvD,EAAD,CACEE,KAAK,oBACLD,MAAK,UAAKvM,GAAEiJ,EAAM4G,SAAS/H,mBAAqB,GAA3C,UAGRmB,EAAM4G,UACL,kBAACvD,EAAD,CACEC,MAAK,UAAKvM,GAAEiJ,EAAM4G,SAAS5H,SAAW,GAAjC,QACLuE,KAAK,eAMb,yBAAKa,GAAG,WACN,yBAAKZ,UAAU,eACZxD,EAAMW,WACL,kBAAC0C,EAAD,CACEC,MAAK,UAAKoB,GAAmC,GAA/B1E,EAAMW,UAAUW,aAAqB,MAA9C,QACLiC,KAAI,UAAKxM,GAAEiJ,EAAMW,UAAUW,cAAgB,GAAvC,oBAGPtB,EAAMW,WACL,kBAAC0C,EAAD,CACEC,MAAK,UAAKoB,GAAkC,GAA9B1E,EAAMW,UAAUc,YAAoB,MAA7C,QACL8B,KAAI,UAAKxM,GAAEiJ,EAAMW,UAAUc,aAAe,GAAtC,qBAGPzB,EAAMW,WACL,kBAAC0C,EAAD,CACEC,MAAK,UAAKoB,GAAkC,GAA9B1E,EAAMW,UAAUa,YAAoB,MAA7C,QACL+B,KAAI,UAAKxM,GAAEiJ,EAAMW,UAAUa,aAAe,GAAtC,qBAGPxB,EAAM0I,YACL,kBAACrF,EAAD,CAASC,MAAOvM,GAAEiJ,EAAM0I,WAAWxG,OAAS,GAAIqB,KAAK,iBAK1DvD,EAAMW,WACL,yBAAK6C,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,yCACA,uBAAGqE,YAAA,EAASC,WAAS,cAArB,mBAGA,kBAAC,IAAD,CAAc1D,GAAG,aAAa2D,OAAO,QAAQC,MAAM,OACjD,2GAGE,6BAHF,uFAUN,kBAAC9B,EAAD,CACEJ,QAASA,EACTnF,UAAWX,EAAMW,UAAUM,cAC3BzE,KAAMA,KAKXwD,EAAMW,WACL,yBAAK6C,UAAU,WACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,mDAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACf,4BACE,+CAEGxD,EAAMW,UAAUM,cAAc,GAAG0H,iBAEpC,gDACoB,IACjB3I,EAAMW,UAAUM,cAAc,GAAGV,aAEpC,iDAAuBP,EAAMW,UAAUN,SAASe,OAChD,2CACe,IACZpB,EAAMW,UAAUN,SAASuI,YAAcpM,EAAKM,QAE/C,0CACckD,EAAMW,UAAUN,SAASwI,UAAYrM,EAAKM,QAExD,4BACGkD,EAAMW,UAAUN,SAASyI,KAAOtM,EAAKM,OAAS,EAC3C,OACA,SAHN,KAIKkD,EAAMW,UAAUN,SAASyI,KAAOtM,EAAKM,QAE1C,sCAAYkD,EAAMW,UAAUN,SAASgB,MAAQ7E,EAAKM,UAGtD,yBAAK0G,UAAU,OACb,kBAAC0C,EAAD,CACEJ,QAASA,EACTnF,UAAW,CAACX,EAAMW,UAAUM,cAAc,IAC1CzE,KAAMA,OAOfwD,EAAM0I,YACL,yBAAKtE,GAAG,cAAcZ,UAAU,WAC9B,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,2CACA,uBAAGqE,YAAA,EAASC,WAAS,oBAArB,mBAGA,kBAAC,IAAD,CAAc1D,GAAG,mBAAmB2D,OAAO,QAAQC,MAAM,OACvD,sFAEE,6BAFF,8CAQN,yBAAKxE,UAAU,yBACZxD,EAAM0I,WAAW9G,mBAAmBnE,KAAI,SAAC8D,EAAG/G,GAAJ,OACvC,yBAAKlB,IAAKkB,EAAGgJ,UAAU,YACrB,yBAAKA,UAAU,OAAf,MACMjC,EAAES,OAASxF,EAAKM,QAGtB,yBAAK0G,UAAU,cACb,yBAAKA,UAAU,MACZ/Q,KAAK+R,MAAMjD,EAAE/I,QAAQL,QADxB,YAGA,yBAAKqL,UAAU,QACZjC,EAAE/I,QAAQiF,KAAI,SAAAvH,GAAC,OACd,yBAAKoD,IAAKpD,EAAGsN,UAAU,OACpB,gBA3Ld,wCCrFI,+C,8CAAA,sBAAA3Q,EAAA,sEACO6M,MAAM,gCADb,8BAC8CC,OAD9C,oF,sBCGf,IACM5I,GADKD,EAAQ,IACNE,OAAO,KAEpB,SAAS+R,KACP,IAAMC,EAAa,IAAI1J,KAAK,wBAAwB2J,UACpD,OAAOxW,KAAKyW,OAAO5J,KAAKC,MAAQyJ,GAAc,IAAO,IAGxC,SAASG,GAAT,GAAyC,IAAjB7M,EAAgB,EAAhBA,OAAQE,EAAQ,EAARA,KAAQ,EACZoH,mBAASmF,MADG,mBAC9CK,EAD8C,KACpCC,EADoC,OAE3BzF,qBAF2B,mBAE9CY,EAF8C,KAEvC8E,EAFuC,KAsCrD,OAlCAvF,qBAAU,WACR,IAAI6B,GAAU,EAERa,EAAY,uCAAG,sBAAA5T,EAAA,sDACnB0W,KAAQ7B,MAAK,SAAAlB,GACNZ,IACDpB,GAASgC,EAAQgD,UAAYhF,EAAMgF,QACrCjR,QAAQ3F,IAAI,4BAGd2F,QAAQ3F,IAAI,eAAgB4T,GAC5B8C,EAAS9C,QAGPuC,OAAgCK,GAClCC,EAAqBN,MAZJ,2CAAH,qDAgBlBtC,IAEA,IAAMgD,EAAWC,aAAY,WACvB9D,GACFa,MAED,KAEH,OAAO,WACLb,GAAU,EACV+D,cAAcF,GACdlR,QAAQ3F,IAAI,wBAEb,CAAC0J,EAAQE,EAAMgI,IAGhB,yBAAKhB,UAAU,aACZhH,GAAQ4M,GACP,+CACkB,IAChB,8BACG5M,EAAKM,OAASsM,EACXA,EAAW5M,EAAKM,SAAW,EACzB,mBACA,cACF,OAITN,GACC,yBAAKgH,UAAU,QAAf,iBACiB,IACf,uBAAGC,KAAI,wCAAmCjH,EAAKM,SAC5C/F,GAAEyF,EAAKM,UAIbsM,GACC,yBAAK5F,UAAU,QAAf,kBACkB,IAChB,uBAAGC,KAAI,wCAAmC2F,IACvCrS,GAAEqS,KAIR5E,GACC,oCACE,yBAAKhB,UAAU,QAAf,eACe,IACb,8BAAOgB,EAAMgF,QAAUhF,EAAM4E,SAAW,cAAgB,OAE1D,yBAAK5F,UAAU,QAAf,gBACgB,IACd,uBAAGC,KAAI,sCAAiCe,EAAMgF,UAC3CzS,GAAEyN,EAAMgF,WAGb,yBAAKhG,UAAU,QAAf,iBACiB,IACf,uBAAGC,KAAI,sCAAiCe,EAAM4E,WAC3CrS,GAAEyN,EAAM4E,c,cCmCRQ,OAlHf,WACErR,QAAQ3F,IAAI,YADE,MAEcgR,qBAFd,mBAEPhE,EAFO,KAECiK,EAFD,OAGUjG,qBAHV,mBAGPpH,EAHO,KAGD8J,EAHC,OAIU1C,mBAAS,2CAJnB,mBAIP/G,EAJO,aAKiB+G,mBAAS,IAAI3H,EAASY,KALvC,mBAKPP,EALO,KAKCwN,EALD,OAMQlG,qBANR,mBAMPgB,EANO,KA4Dd,OA5Dc,KAQdb,qBAAU,YACI,uCAAG,sBAAAlR,EAAA,sEACPyT,IADO,uBAEPwD,EAAa,IAAI7N,EAASY,IAFnB,2CAAH,qDAKZkN,KACC,CAAClN,IAUJkH,qBAAU,WACR,IAAI6B,GAAU,EAEdtJ,EAAO0N,YAAYtC,MAAK,SAAA3M,GACjB6K,GACLiE,EAAU9O,MAGZ,IAAM0L,EAAY,uCAAG,sBAAA5T,EAAA,sDACnByJ,EAAOiK,YAAYmB,MAAK,SAAAlB,GACjBZ,IACDpJ,GAAQgK,EAAQ1J,SAAWN,EAAKM,OAClCvE,QAAQ3F,IAAI,4BAGd2F,QAAQ3F,IAAI,eAAgB4T,EAAQ1J,OAAQN,GAAQA,EAAKM,QACzDwJ,EAAQE,QARS,2CAAH,qDAYlBC,IAEA,IAAMgD,EAAWC,aAAY,WACvB9D,GACFa,MAED,KAEH,OAAO,WACLb,GAAU,EACV+D,cAAcF,GACdlR,QAAQ3F,IAAI,wBAEb,CAAC0J,EAAQE,IAGV,kBAAC,IAAD,KACE,yBAAKgH,UAAU,OACb,yBAAKA,UAAU,aAoBb,kBAAC2F,GAAD,CAAa7M,OAAQA,EAAQE,KAAMA,KAErC,4BAAQgH,UAAU,mBAChB,kBAAC,IAAD,CAAMc,GAAG,KACP,wBAAIF,GAAG,OAAOZ,UAAU,QACtB,6CAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO/G,KAAK,0CACV,kBAAC,GAAD,CAAUH,OAAQA,EAAQsD,OAAQA,EAAQpD,KAAMA,KAElD,kBAAC,IAAD,CAAOC,KAAK,oBACV,kBAAC,GAAD,CAAWH,OAAQA,EAAQsD,OAAQA,EAAQpD,KAAMA,KAEnD,kBAAC,IAAD,CAAOC,KAAK,SACV,kBAAC4J,EAAD,CAAM/J,OAAQA,EAAQsD,OAAQA,KAEhC,kBAAC,IAAD,CAAOnD,KAAK,WACV,kBAACkI,EAAD,CAAQnI,KAAMA,EAAMoI,IAAKA,EAAKtI,OAAQA,EAAQsD,OAAQA,KAExD,kBAAC,IAAD,CAAOnD,KAAK,KACV,kBAACkH,EAAD,CAAMrH,OAAQA,EAAQE,KAAMA,EAAMoD,OAAQA,SC7GlCqK,QACW,cAA7BzS,OAAOuP,SAASmD,UAEe,UAA7B1S,OAAOuP,SAASmD,UAEhB1S,OAAOuP,SAASmD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEdvC,OAAM,SAAAC,GACLhQ,QAAQgQ,MAAMA,EAAMuC,a","file":"static/js/main.263df86d.chunk.js","sourcesContent":["const EPOCHS_PER_DAY = (24 * 60 * 60) / 30\nconst EPOCHS_PER_YEAR = 365 * EPOCHS_PER_DAY\nconst INITIAL_BASELINE = 2888888880000000000\nconst BASELINE_ANNUAL_GROWTH = 1\n\nconst computeEffectiveNetworkTime = function (cumsumRealized) {\n  const x0 = INITIAL_BASELINE\n  const annualGrowth = BASELINE_ANNUAL_GROWTH\n  const k = Math.pow(1 + annualGrowth, 1 / EPOCHS_PER_YEAR)\n  const c = 1 / Math.log(k)\n  const a = -x0 * c\n  return Math.log((cumsumRealized - a) / (x0 * c)) / Math.log(k)\n}\n\nconst computeBlockReward = function (\n  newWallClockEpoch,\n  prevWallClockEpoch,\n  newNetworkTimeEpoch,\n  prevNetworkTimeEpoch\n) {\n  const totalSimpleSupply = 330e6\n  const totalBaselineSupply = 770e6\n  const mintRate = Math.log(2) / (6 * EPOCHS_PER_YEAR)\n\n  const prevSimpleSupply =\n    totalSimpleSupply * (1 - Math.pow(Math.E, -mintRate * prevWallClockEpoch))\n  const newSimpleSupply =\n    totalSimpleSupply * (1 - Math.pow(Math.E, -mintRate * newWallClockEpoch))\n\n  const prevBaselineSupply =\n    totalBaselineSupply *\n    (1 - Math.pow(Math.E, -mintRate * prevNetworkTimeEpoch))\n  const newBaselineSupply =\n    totalBaselineSupply *\n    (1 - Math.pow(Math.E, -mintRate * newNetworkTimeEpoch))\n\n  return (\n    newSimpleSupply + newBaselineSupply - prevSimpleSupply - prevBaselineSupply\n  )\n}\n\nconst getCurrBaseline = function (e) {\n  const x0 = INITIAL_BASELINE\n  const annualGrowth = BASELINE_ANNUAL_GROWTH\n  const k = Math.pow(1 + annualGrowth, 1 / EPOCHS_PER_YEAR)\n  return x0 * Math.pow(k, e)\n}\n\nexport default class Comp {\n  constructor ({\n    currEpoch,\n    nwqap,\n    nwqapP,\n    nwqapV,\n    nwCircSupply,\n    perEpochRewardP,\n    perEpochRewardV,\n    perDurationNwRbGrowth,\n    projectedDays,\n    perDurationMinerQaGrowth,\n    nwCumsumRealized\n  }) {\n    Object.assign(this, {\n      currEpoch,\n      nwqap,\n      nwqapP,\n      nwqapV,\n      nwCircSupply,\n      perEpochRewardP,\n      perEpochRewardV,\n      perDurationNwRbGrowth,\n      projectedDays,\n      perDurationMinerQaGrowth,\n      nwCumsumRealized\n    })\n  }\n\n  projectFutureReward (sectorQAP, days) {\n    const networkQAPFilter = new AlphaBetaFilter(this.nwqapP, this.nwqapV)\n    const perEpochRewardFilter = new AlphaBetaFilter(\n      this.perEpochRewardP,\n      this.perEpochRewardV\n    )\n    return (\n      sectorQAP *\n      extrapolateCumsumRatio(\n        perEpochRewardFilter,\n        networkQAPFilter,\n        days * EPOCHS_PER_DAY\n      )\n    )\n  }\n\n  computeInitialPledgeForQAPower (sectorQAP, currEpoch) {\n    return (\n      this.projectFutureReward(sectorQAP, 20) +\n      (sectorQAP * 0.3 * this.nwCircSupply) /\n        Math.max(this.nwqap, getCurrBaseline(currEpoch))\n    )\n  }\n\n  summary () {\n    const sectorIp = this.computeInitialPledgeForQAPower(\n      32 * 2 ** 30,\n      this.currEpoch\n    )\n    const sectorProjectedReward = this.projectFutureReward(32 * 2 ** 30, 360)\n    const sectorFaultFee = this.projectFutureReward(32 * 2 ** 30, 3.51)\n\n    return {\n      sectorIp,\n      sectorProjectedReward,\n      sectorFaultFee\n    }\n  }\n\n  computeInitialPledgeFromAssumptions () {\n    const {\n      currEpoch,\n      nwqap,\n      nwqapP,\n      nwqapV,\n      nwCircSupply,\n      perEpochRewardP,\n      perEpochRewardV,\n      perDurationNwRbGrowth,\n      projectedDays,\n      perDurationMinerQaGrowth,\n      nwCumsumRealized\n    } = this\n\n    const networkQAPFilter = new AlphaBetaFilter(nwqapP, nwqapV)\n    const perEpochRewardFilter = new AlphaBetaFilter(\n      perEpochRewardP,\n      perEpochRewardV\n    )\n    const perEpochNwRbGrowth =\n      perDurationNwRbGrowth / projectedDays / EPOCHS_PER_DAY\n    const perEpochMinerQaGrowth =\n      perDurationMinerQaGrowth / projectedDays / EPOCHS_PER_DAY\n\n    const newInitialPledges = []\n    var totalInitialPledge = 0\n    let currNetworkQAP = nwqap\n    let currCumsumRealized = nwCumsumRealized\n    var prevNetworkTime = computeEffectiveNetworkTime(nwCumsumRealized)\n\n    for (\n      var e = currEpoch + 1;\n      e < currEpoch + projectedDays * EPOCHS_PER_DAY + 1;\n      e++\n    ) {\n      // first compute initial pledge required for this epoch\n      const newInitialPledge =\n        perEpochMinerQaGrowth *\n        (extrapolateCumsumRatio(\n          perEpochRewardFilter,\n          networkQAPFilter,\n          20 * EPOCHS_PER_DAY\n        ) +\n          (0.3 * nwCircSupply) / Math.max(currNetworkQAP, getCurrBaseline(e)))\n      newInitialPledges.push(newInitialPledge)\n      totalInitialPledge += newInitialPledge\n      // then update filter values\n      currNetworkQAP += perEpochNwRbGrowth\n      currCumsumRealized += currNetworkQAP\n      const newNetworkTime = computeEffectiveNetworkTime(currCumsumRealized)\n      const newReward = computeBlockReward(\n        e,\n        e - 1,\n        newNetworkTime,\n        prevNetworkTime\n      )\n      perEpochRewardFilter.addNewEntry(newReward, 1)\n      networkQAPFilter.addNewEntry(currNetworkQAP, 1)\n      prevNetworkTime = newNetworkTime\n    }\n\n    return { newInitialPledges, totalInitialPledge }\n  }\n}\n\nclass AlphaBetaFilter {\n  constructor (p, v) {\n    this.alpha = 9.25e-4\n    this.beta = 2.84e-7\n    this.p = p\n    this.v = v\n  }\n\n  addNewEntry (value, deltaT) {\n    this.p += this.v * deltaT\n    const residual = value - this.p\n    this.p += this.alpha * residual\n    this.p = Math.max(this.p, 0)\n    this.v += (this.beta * residual) / deltaT\n  }\n}\n\nconst extrapolateCumsumRatio = function (numerator, denominator, futureT) {\n  const x2a = Math.log(denominator.p + denominator.v)\n  const x2b = Math.log(denominator.p + denominator.v + denominator.v * futureT)\n  const m1 = denominator.v * numerator.p * (x2b - x2a)\n  const m2 =\n    numerator.v * (denominator.p * (x2a - x2b) + denominator.v * futureT)\n  return (m1 + m2) / Math.pow(denominator.v, 2)\n}\n","import { LotusRPC } from '@filecoin-shipyard/lotus-client-rpc'\nimport { BrowserProvider } from '@filecoin-shipyard/lotus-client-provider-browser'\nimport Fil from 'js-hamt-filecoin'\nimport Economics from './economics'\nimport { partition } from 'd3'\nimport asyncPool from 'tiny-async-pool'\nconst d3 = require('d3')\nconst f = d3.format('0.2f')\nconst bx = require('base-x')\nconst BASE64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nconst b64 = bx(BASE64)\nconst BN = require('bn.js')\n\nconst schema = require('@filecoin-shipyard/lotus-client-schema').testnet\n  .fullNode\n\nfunction b64ToBn (b64) {\n  if (b64 === '') return window.BigInt(0)\n  var bin = atob(b64)\n  var hex = []\n\n  bin.split('').forEach(function (ch) {\n    var h = ch.charCodeAt(0).toString(16)\n    if (h.length % 2) {\n      h = '0' + h\n    }\n    hex.push(h)\n  })\n\n  return window.BigInt('0x' + hex.join(''))\n}\n\nconst partitionSchema = height => {\n  console.log('>>>> HEIGHT', height)\n  if (!height || height >= 138720) {\n    return {\n      Sectors: 'buffer',\n      Unproven: 'buffer',\n      Faults: 'buffer',\n      Recoveries: 'buffer',\n      Terminated: 'buffer',\n      ExpirationEpochs: 'cid',\n      EarlyTerminated: 'cid',\n      LivePower: {\n        a: 'bigint',\n        b: 'bigint'\n      },\n      UnprovenPower: {\n        a: 'bigint',\n        b: 'bigint'\n      },\n      FaultyPower: {\n        a: 'bigint',\n        b: 'bigint'\n      },\n      RecoveringPower: {\n        a: 'bigint',\n        b: 'bigint'\n      }\n    }\n  }\n  return {\n    Sectors: 'buffer',\n    Faults: 'buffer',\n    Recoveries: 'buffer',\n    Terminated: 'buffer',\n    ExpirationEpochs: 'cid',\n    EarlyTerminated: 'cid',\n    LivePower: {\n      a: 'bigint',\n      b: 'bigint'\n    },\n    FaultyPower: {\n      a: 'bigint',\n      b: 'bigint'\n    },\n    RecoveringPower: {\n      a: 'bigint',\n      b: 'bigint'\n    }\n  }\n}\n\nconst preCommitSchema = {\n  type: 'hamt',\n  key: 'bigint',\n  value: {\n    info: {\n      seal_proof: 'int',\n      sector_number: 'int',\n      sealed_cid: 'cid',\n      seal_rand_epoch: 'int',\n      deal_ids: ['list', 'int'],\n      expiration: 'int',\n      replace_capacity: 'bool',\n      replace_sector_deadline: 'int',\n      replace_sector_partition: 'int',\n      replace_sector_number: 'int'\n    },\n    precommit_deposit: 'bigint',\n    precommit_epoch: 'int',\n    deal_weight: 'bigint',\n    verified_deal_weight: 'bigint'\n  }\n}\n\nfunction bytesToBig (p) {\n  let acc = 0n\n  for (let i = 0; i < p.length; i++) {\n    acc *= 256n\n    acc += window.BigInt(p[i])\n  }\n  return acc\n}\n\nfunction bytesToBigRev (p) {\n  let acc = new BN(0)\n  for (let i = 0; i < p.length; i++) {\n    acc = acc.mul(new BN(256))\n    acc = acc.add(new BN(p[p.length - i - 1]))\n  }\n  return acc\n}\n\nfunction nextBits (obj, n) {\n  // if (obj.left < n) throw new Error(\"out of bits\")\n  const res = obj.num.and(new BN(1).shln(n).sub(new BN(1)))\n  obj.num = obj.num.shrn(n)\n  obj.left -= n\n  return res.toNumber()\n}\n\nfunction decodeRLE (buf) {\n  const obj = {\n    left: 8 * buf.length,\n    num: bytesToBigRev(buf)\n  }\n  const version = nextBits(obj, 2)\n  const first = nextBits(obj, 1)\n  const res = []\n  while (obj.left > 0) {\n    let b1 = nextBits(obj, 1)\n    if (b1 === 1) {\n      res.push(1)\n      continue\n    }\n    let b2 = nextBits(obj, 1)\n    if (b2 === 1) {\n      const a = nextBits(obj, 4)\n      res.push(a)\n      continue\n    }\n    let x = 0\n    let s = 0\n    for (let i = 0; true; i++) {\n      if (i === 10) {\n        throw new Error('run too long')\n      }\n      let b = nextBits(obj, 8)\n      if (b < 0x80) {\n        if (i > 9 || (i === 9 && b > 1)) {\n          throw new Error('run too long')\n        } else if (b === 0 && s > 0) {\n          throw new Error('invalid run')\n        }\n        x |= b << s\n        break\n      }\n      x |= (b & 0x7f) << s\n      s += 7\n    }\n    res.push(x)\n  }\n  return { first, runs: res }\n}\n\nfunction decodeRLE2 (buf) {\n  const { first, runs } = decodeRLE(buf)\n  let cur = first\n  const res = []\n  let acc = 0\n  for (let r of runs) {\n    for (let i = 0; i < r; i++) {\n      if (cur === 1) res.push(acc)\n      acc++\n    }\n    cur = 1 - cur\n  }\n  return res\n}\n\nexport default class Filecoin {\n  constructor (endpointUrl) {\n    this.url = endpointUrl\n    const provider = new BrowserProvider(endpointUrl)\n    console.log('new endpoint', endpointUrl)\n    this.client = new LotusRPC(provider, { schema })\n  }\n\n  async getData (head, path, schema) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const node =\n      head.Height >= 138720 ? `${state}/1/${path}` : `${state}/${path}`\n    const data = (await this.client.chainGetNode(node)).Obj\n\n    const self = this\n    return await Fil.methods.decode(schema, data).asObject(async a => {\n      const res = await self.client.chainGetNode(a)\n      return res.Obj\n    })\n  }\n\n  async fetchHead () {\n    return await this.client.chainHead()\n  }\n\n  async fetchPartitionsSectors (cid, height) {\n    const node = (await this.client.chainGetNode(`${cid['/']}`)).Obj[2][2]\n    return node.map(partitionRaw => {\n      const partitionObj = Fil.methods.decode(\n        partitionSchema(height),\n        partitionRaw\n      )\n      return [\n        {\n          Sectors: decodeRLE2(partitionObj.Sectors),\n          Faults: decodeRLE2(partitionObj.Faults).reduce((acc, curr) => {\n            acc[curr] = true\n            return acc\n          }, {}),\n          Terminated: decodeRLE2(partitionObj.Terminated).reduce(\n            (acc, curr) => {\n              acc[curr] = true\n              return acc\n            },\n            {}\n          ),\n          Recoveries: decodeRLE2(partitionObj.Recoveries).reduce(\n            (acc, curr) => {\n              acc[curr] = true\n              return acc\n            },\n            {}\n          )\n        }\n      ]\n    })\n  }\n\n  async fetchTipsetHead (height) {\n    return await this.client.ChainGetTipSetByHeight(height, null)\n  }\n\n  async fetchPower (head) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const node =\n      head.Height >= 138720 ? `${state}/1/@Ha:t04/1` : `${state}/@Ha:t04/1`\n    const storagePowerActorRaw = (await this.client.chainGetNode(node)).Obj\n    return {\n      TotalRawBytePower: bytesToBig(b64.decode(storagePowerActorRaw[0])),\n      TotalBytesCommitted: bytesToBig(b64.decode(storagePowerActorRaw[1])),\n      TotalQualityAdjPower: bytesToBig(b64.decode(storagePowerActorRaw[2])),\n      TotalQABytesCommitted: bytesToBig(b64.decode(storagePowerActorRaw[3])),\n      TotalPledgeCollateral: bytesToBig(b64.decode(storagePowerActorRaw[4])),\n      ThisEpochRawBytePower: bytesToBig(b64.decode(storagePowerActorRaw[5])),\n      ThisEpochQualityAdjPower: bytesToBig(b64.decode(storagePowerActorRaw[6])),\n      ThisEpochPledgeCollateral: bytesToBig(b64.decode(storagePowerActorRaw[7]))\n    }\n  }\n\n  async fetchDeposits (hash, head) {\n    const state = await this.client.StateReadState(hash, head.Cids)\n    const { State, Balance } = state\n    const { PreCommitDeposits, LockedFunds, InitialPledge, FeeDebt } = State\n    const Available = Balance - InitialPledge - PreCommitDeposits - LockedFunds\n\n    return {\n      Balance: f(Balance / 1000000000000000000),\n      InitialPledge: f(InitialPledge / 1000000000000000000),\n      Available: f(Available / 1000000000000000000),\n      LockedFunds: f(LockedFunds / 1000000000000000000),\n      PreCommitDeposits: f(PreCommitDeposits / 1000000000000000000),\n      FeeDebt: f(FeeDebt / 1000000000000000000)\n    }\n  }\n\n  async getMiners () {\n    const cached = window.localStorage.getItem('miners')\n    const cachedTime = window.localStorage.getItem('time')\n    if (cached && cachedTime && Date.now() - +cachedTime > 60000)\n      return JSON.parse(cached)\n\n    const json = await (\n      await fetch('https://filfox.info/api/v0/miner/list/power?pageSize=1000')\n    ).json()\n    const miners = json.miners.reduce((acc, curr) => {\n      acc[curr.address] = curr\n      return acc\n    }, {})\n\n    window.localStorage.setItem('miners', JSON.stringify(miners))\n    window.localStorage.setItem('time', Date.now())\n\n    return miners\n  }\n\n  async fetchDeadlinesProxy (miner, head) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const node =\n      head.Height >= 138720\n        ? `${state}/1/@Ha:${miner}/1/12`\n        : `${state}/@Ha:${miner}/1/11`\n    const deadlinesCids = (await this.client.chainGetNode(node)).Obj[0]\n\n    const deadlines = await asyncPool(24, deadlinesCids, async minerCid => {\n      const deadline = (await this.client.ChainGetNode(`${minerCid['/']}`)).Obj\n      return {\n        Partitions: deadline[0],\n        LiveSectors: deadline[4],\n        TotalSectors: deadline[5],\n        FaultyPower: { Raw: Number(b64ToBn(deadline[6][0])) }\n      }\n    })\n    return deadlines\n  }\n\n  async fetchMinerInfo (hash, head) {\n    return this.client.StateMinerInfo(hash, head.Cids)\n  }\n\n  async fetchDeadlines (hash, head) {\n    const [deadline, deadlines] = await Promise.all([\n      this.client.StateMinerProvingDeadline(hash, head.Cids),\n      this.fetchDeadlinesProxy(hash, head)\n    ])\n    console.log('>>> got deadline and deadline')\n\n    const nextDeadlines = [...Array(48)].map((_, i) => ({\n      ...deadlines[(deadline.Index + i) % 48],\n      Close: deadline.Close + i * 60,\n      Index: (deadline.Index + i) % 48\n    }))\n\n    const SectorsCount = deadlines\n      .map(d => +d.LiveSectors)\n      .reduce((acc, curr) => acc + curr, 0)\n\n    const FaultsCount =\n      deadlines\n        .map(d => +d.FaultyPower.Raw)\n        .reduce((acc, curr) => acc + curr, 0) /\n      (32 * 1024 * 1024 * 1024)\n\n    return {\n      deadlines: deadlines.map((d, i) => ({\n        ...deadlines[i],\n        Close: deadline.Close + i * 60,\n        Index: i\n      })),\n      nextDeadlines,\n      SectorsCount,\n      FaultsCount,\n      ActiveCount: SectorsCount - FaultsCount,\n      deadline\n    }\n  }\n\n  async fetchPreCommittedSectors (hash, head) {\n    const node = head.Height >= 138720 ? `@Ha:${hash}/1/6` : `@Ha:${hash}/1/5`\n    const preCommittedSectors = await this.getData(head, node, preCommitSchema)\n    const PreCommitDeadlines = d3\n      .groups(\n        Object.keys(preCommittedSectors).map(d => ({\n          SectorNumber: preCommittedSectors[d].info.sector_number,\n          Expiry: preCommittedSectors[d].precommit_epoch + (10000 + 60 + 150)\n        })),\n        d => d.Expiry\n      )\n      .map(([Expiry, Sectors]) => ({\n        Expiry,\n        Sectors: Sectors.map(d => d.SectorNumber)\n      }))\n      .sort((a, b) => a.Expiry - b.Expiry)\n\n    return {\n      PreCommitDeadlines,\n      Count: Object.keys(preCommittedSectors).length\n    }\n  }\n\n  async fetchSectors (hash, head) {\n    const sectorList = await this.client.StateMinerSectors(\n      hash,\n      null,\n      head.Cids\n    )\n    const Sectors = sectorList.reduce((acc, curr) => {\n      acc[curr.ID] = { number: curr.ID, info: curr }\n      return acc\n    }, {})\n\n    const sectorsCount = Object.keys(Sectors).length\n    return { sectorsCount, Sectors }\n  }\n\n  async fetchGenesisActors (head) {\n    const [Supply, Reward, Power] = await Promise.all([\n      this.client.StateCirculatingSupply(head.Cids),\n      this.client.StateReadState('f02', head.Cids),\n      this.client.StateReadState('f04', head.Cids)\n    ])\n\n    return { Supply, Reward, Power }\n  }\n\n  computeEconomics (\n    head,\n    { Supply, Reward, Power },\n    {\n      projectedDays,\n      perDurationNwRbGrowth = 10 * 2 ** 50,\n      perDurationMinerQaGrowth = 2 ** 51\n    }\n  ) {\n    const inputs = {\n      currEpoch: +head.Height,\n      nwqap: +Power.State.ThisEpochQualityAdjPower,\n      nwqapP: +Power.State.ThisEpochQAPowerSmoothed.PositionEstimate / 2 ** 128,\n      nwqapV: +Power.State.ThisEpochQAPowerSmoothed.VelocityEstimate / 2 ** 128,\n      nwCircSupply: +Supply.FilCirculating / 1e18,\n      perEpochRewardP:\n        +Reward.State.ThisEpochRewardSmoothed.PositionEstimate /\n        (2 ** 128 * 1e18),\n      perEpochRewardV:\n        +Reward.State.ThisEpochRewardSmoothed.VelocityEstimate /\n        (2 ** 128 * 1e18),\n      nwCumsumRealized: +Reward.State.CumsumRealized,\n      perDurationNwRbGrowth,\n      projectedDays,\n      perDurationMinerQaGrowth\n    }\n\n    const econ = new Economics(inputs)\n\n    return econ.summary()\n  }\n}\n","import React from 'react'\n\nexport default function Summary ({ title, url, desc }) {\n  return (\n    <div className='summary col-sm'>\n      <div className='summary-title'>\n        {url ? <a href={url}>{title}</a> : <>{title}</>}\n      </div>\n      <div className='summary-desc'>{desc}</div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Summary from '../components/Summary'\n\nconst d3 = require('d3')\nconst f = d3.format(',')\nconst f3 = d3.format(',.3f')\n\nexport default function Home ({ miners, client, head }) {\n  const [econSummary, setEconSummary] = useState()\n\n  useEffect(() => {\n    if (!head) return\n    const fetchingEcon = async () => {\n      const actors = await client.fetchGenesisActors(head)\n      const summary = client.computeEconomics(head, actors, {\n        projectedDays: 1\n      })\n      console.log('summary', summary)\n      setEconSummary(summary)\n    }\n    fetchingEcon()\n  }, [client, head])\n\n  return (\n    <section id='home' className='container'>\n      <div className='spacerace'>\n        <h3>Top miners</h3>\n        {miners &&\n          Object.keys(miners)\n            .slice(0, 5)\n            .map((d, i) => (\n              <div key={i}>\n                {i + 1}.{' '}\n                <Link to={`/miners/${miners[d].address}`}>\n                  {miners[d].address}\n                </Link>\n              </div>\n            ))}\n        <div>\n          See deadlines of <Link to='/full'>top 50 miners</Link> or click on\n          individual miners or the <Link to='/status'>network status</Link>.\n        </div>\n      </div>\n      {econSummary && (\n        <div id='deposits' className='section'>\n          <h3>Economics</h3>\n          <div className='grid'>\n            {econSummary && (\n              <Summary\n                title={`${f3(econSummary.sectorIp || 0)} FIL`}\n                desc='Pledge'\n              />\n            )}\n\n            {econSummary && (\n              <Summary\n                title={`${f3(econSummary.sectorProjectedReward || 0)} FIL`}\n                desc='180 Days Reward'\n              />\n            )}\n\n            {econSummary && (\n              <Summary\n                desc='Fault Fee'\n                title={`${f3(econSummary.sectorFaultFee || 0)} FIL`}\n              />\n            )}\n          </div>\n          These numbers are approximate projections based on the current network\n          state and may be incorrect, do your own research. All costs are per\n          sector.\n        </div>\n      )}\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function WindowPoStStatus ({ deadline, head }) {\n  const d = deadline\n\n  return (\n    <div className='deadlines windowpost'>\n      <div className={d.LiveSectors === 0 ? 'deadline opacity5' : 'deadline'}>\n        <div className='out'>\n          In {d.Close - head.Height}\n          {/* <span className=\"epochs\">epochs</span> */}\n        </div>\n        <div className='hddWrapper'>\n          <div className='in'>\n            {Math.round((d.LiveSectors * 32) / 1024)} TiB\n          </div>\n          <div className='hdds'>\n            {[\n              ...Array(\n                Math.ceil(\n                  Math.round(\n                    (d.LiveSectors * 32) / 1024 -\n                      +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                  ) / 8\n                )\n              )\n            ].map((v, i) => (\n              <div key={i} className='hdd'>\n                {' '}\n              </div>\n            ))}\n            {[\n              ...Array(\n                Math.ceil(\n                  Math.round(+d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)) /\n                    8\n                )\n              )\n            ].map((v, i) => (\n              <div key={i} className='hdd faulty'>\n                {' '}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport asyncPool from 'tiny-async-pool'\nimport { Link } from 'react-router-dom'\nimport Summary from '../components/Summary'\nimport WindowPoStStatus from '../components/WindowPoStStatus'\n\nconst d3 = require('d3')\nconst f2 = d3.format(',.2f')\nconst bytesToPiB = 1024 * 1024 * 1024 * 1024 * 1024\n\nexport default function Status ({ client, spa, head, miners }) {\n  const [minersDeadlines, setMinersDeadlines] = useState({})\n  const [minersDeadlines2880, setMinersDeadlines2880] = useState({})\n  const [prev60, setPrev60] = useState()\n  const [prev120, setPrev120] = useState()\n\n  useEffect(() => {\n    if (!head) return\n\n    const fetchingPrevious = async () => {\n      const getPrev = async diff => {\n        const prevHead = await client.fetchTipsetHead(head.Height - diff)\n        const prevSpa = await client.fetchPower(prevHead)\n        return prevSpa\n      }\n\n      const [prev60, prev120] = await Promise.all([getPrev(60), getPrev(120)])\n\n      await setPrev60(prev60)\n      await setPrev120(prev120)\n    }\n    fetchingPrevious()\n  }, [head])\n\n  useEffect(() => {\n    let mounted = true\n    if (!head) return\n\n    const minersList = Object.keys(miners)\n      .slice(0, 40)\n      .map(d => miners[d].address)\n    asyncPool(5, minersList, async minerId => {\n      if (!mounted) return\n      const deadlines = await client.fetchDeadlines(minerId, head)\n      if (!mounted) return\n      const prevHead = await client.fetchTipsetHead(head.Height - 2880)\n      if (!mounted) return\n      const deadlines2880 = await client.fetchDeadlines(minerId, prevHead)\n      if (!mounted) return\n      minersDeadlines[minerId] = deadlines\n      minersDeadlines2880[minerId] = deadlines2880\n      await setMinersDeadlines({ ...minersDeadlines })\n      return await setMinersDeadlines2880({ ...minersDeadlines2880 })\n    })\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, miners])\n\n  return (\n    <section className='container'>\n      <div id='deposits' className='section'>\n        <div className='grid'>\n          {spa && (\n            <>\n              <Summary\n                title={f2(parseInt(spa.TotalQualityAdjPower) / bytesToPiB)}\n                desc='Total QA Power'\n              />\n            </>\n          )}\n          {prev60 && spa && (\n            <>\n              <Summary\n                title={f2(\n                  parseInt(\n                    spa.TotalQualityAdjPower - prev60.TotalQualityAdjPower\n                  ) / bytesToPiB\n                )}\n                desc='60 Epochs delta'\n              />\n            </>\n          )}\n          {prev120 && spa && (\n            <>\n              <Summary\n                title={f2(\n                  parseInt(\n                    spa.TotalQualityAdjPower - prev120.TotalQualityAdjPower\n                  ) / bytesToPiB\n                )}\n                desc='120 Epochs delta'\n              />\n            </>\n          )}\n        </div>\n      </div>\n      Listing WindowPoSt duties of the top 50 miners.\n      {miners &&\n        Object.keys(miners)\n          .slice(0, 40)\n          .map((d, i) => (\n            <div className='flex' key={i}>\n              <Link to={`/miners/${miners[d].address}`}>\n                {miners[d].address}\n              </Link>\n              {minersDeadlines && minersDeadlines[miners[d].address] && (\n                <WindowPoStStatus\n                  head={head}\n                  deadline={\n                    minersDeadlines[miners[d].address].nextDeadlines[47]\n                  }\n                />\n              )}\n              {minersDeadlines2880 &&\n                minersDeadlines2880[miners[d].address] && (\n                  <WindowPoStStatus\n                    head={head}\n                    deadline={\n                      minersDeadlines2880[miners[d].address].nextDeadlines[47]\n                    }\n                  />\n                )}\n            </div>\n          ))}\n    </section>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function WindowPoSt ({ minerId, deadlines, head, link, out }) {\n  if (!link) {\n    link = d => `/miners/${minerId}/deadlines/${d.Index}`\n  }\n  if (!out) {\n    out = ({ d, head, i }) => `In ${d.Close - head.Height}`\n  }\n  if (!head || !deadlines) {\n    return <></>\n  }\n  return (\n    <div className='deadlines windowpost'>\n      {deadlines &&\n        deadlines.map((d, i) => (\n          <div\n            key={i}\n            className={d.LiveSectors === 0 ? 'deadline opacity5' : 'deadline'}\n          >\n            <Link to={link(d)}>\n              <div className='out'>\n                {out({ d, head, i })}\n                {/* <span className=\"epochs\">epochs</span> */}\n              </div>\n              <div className='hddWrapper'>\n                <div className='in'>\n                  {Math.round((d.LiveSectors * 32) / 1024)} TiB\n                </div>\n                <div className='hdds'>\n                  {[\n                    ...Array(\n                      Math.ceil(\n                        Math.round(\n                          (d.LiveSectors * 32) / 1024 -\n                            +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                        ) / 8\n                      )\n                    )\n                  ].map((v, i) => (\n                    <div key={i} className='hdd'>\n                      {' '}\n                    </div>\n                  ))}\n                  {/* {Math.round(+d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024))} */}\n                  {[\n                    ...Array(\n                      Math.ceil(\n                        Math.round(\n                          +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                        ) / 8\n                      )\n                    )\n                  ].map((v, i) => (\n                    <div key={i} className='hdd faulty'>\n                      {' '}\n                    </div>\n                  ))}\n                </div>\n              </div>\n              {/* <div className=\"partitions\">\n                            {\n                            [...Array(Math.ceil(d.LiveSectors/2349))].map(v =>\n                            <div className='partition'></div>\n                            )\n                            }\n                            </div> */}\n            </Link>\n          </div>\n        ))}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport asyncPool from 'tiny-async-pool'\n\nimport WindowPoSt from '../components/WindowPoSt'\n\nexport default function Full ({ miners, client }) {\n  const [minersDeadlines, setMinersDeadlines] = useState({})\n  const [head, setHead] = useState()\n\n  useEffect(() => {\n    const fetchingHead = async () => {\n      const fetched = await client.fetchHead()\n      setHead(fetched)\n    }\n    fetchingHead()\n  }, [client])\n\n  useEffect(() => {\n    let mounted = true\n    if (!head) return\n\n    const minersList = Object.keys(miners)\n      .slice(0, 50)\n      .map(d => miners[d].address)\n    asyncPool(5, minersList, async minerId => {\n      if (!mounted) return\n      const deadlines = await client.fetchDeadlines(minerId, head)\n      if (!mounted) return\n      minersDeadlines[minerId] = deadlines.nextDeadlines\n      return await setMinersDeadlines({ ...minersDeadlines })\n    })\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, miners])\n\n  return (\n    <section id='LookUp' className='container'>\n      Listing WindowPoSt duties of the top 50 miners.\n      {miners &&\n        Object.keys(miners)\n          .slice(0, 50)\n          .map((d, i) => (\n            <div key={i}>\n              <Link to={`/miners/${miners[d].address}`}>\n                {miners[d].address}\n              </Link>\n\n              <WindowPoSt\n                deadlines={minersDeadlines[miners[d].address]}\n                head={head}\n              />\n            </div>\n          ))}\n    </section>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function MinerBar ({\n  client,\n  miners,\n  minerId,\n  deadlineId,\n  miner\n}) {\n  return (\n    <div className='section minerbar'>\n      {/* <div>{miner && miner.info && JSON.stringify(miner.info)}</div> */}\n      <div className='minerId'>\n        {!deadlineId && (\n          <>\n            <Link to={`/miners/${minerId}`}>{minerId}</Link>\n            <span className='tinyarrow'>\n              <a href={`https://filfox.info/en/address/${minerId}`}>↗</a>\n            </span>\n            {miner && miner.deposits && +miner.deposits.FeeDebt !== 0 && (\n              <span className='rekt'>DEBT</span>\n            )}\n          </>\n        )}\n        {deadlineId && (\n          <>\n            <Link to={`/miners/${minerId}/deadlines/${deadlineId}`}>\n              Deadline {deadlineId}\n            </Link>\n          </>\n        )}\n      </div>\n      {deadlineId && (\n        <>\n          <div className='backto'>\n            <Link to={`/miners/${minerId}`}>\n              See miner\n              <span className='bolder'> {minerId}</span>\n            </Link>\n          </div>\n        </>\n      )}\n      {!deadlineId && (\n        <div>\n          {miners && miners[minerId] && miners[minerId].tag && (\n            <span className='miner-name'>\n              {miners[minerId].tag.name}\n\n              {miners && miners[minerId].location && (\n                <span> {miners[minerId].location.flagEmoji}</span>\n              )}\n            </span>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams, withRouter } from 'react-router-dom'\nimport ReactTooltip from 'react-tooltip'\nimport WindowPoSt from '../components/WindowPoSt'\nimport Summary from '../components/Summary'\nimport asyncPool from 'tiny-async-pool'\nimport MinerBar from '../components/MinerBar'\nconst d3 = require('d3')\nconst f = d3.format(',')\nconst f2 = d3.format(',.1f')\n\nfunction Deadline ({ miners, client, head }) {\n  const { minerId, deadlineId } = useParams()\n  const [partitions, setPartitions] = useState()\n  // const [miner, setMiner] = useState({ id: minerId })\n  const [minerDeadlines, setMinerDeadlines] = useState({})\n  const [todayDeadlines, setTodayDeadlines] = useState()\n\n  const deadlinesArray = () => {\n    return Object.keys(minerDeadlines)\n      .sort((a, b) => +a - +b)\n      .map(k => [k, minerDeadlines[k]])\n  }\n\n  const deadlineArray = i => {\n    return deadlinesArray()\n      .map(([epoch, deadlines]) => {\n        return deadlines.deadlines[i]\n      })\n      .flat()\n  }\n\n  useEffect(() => {\n    if (!todayDeadlines) return\n    client\n      .fetchPartitionsSectors(todayDeadlines.deadlines[deadlineId].Partitions)\n      .then(d => {\n        setPartitions(d)\n      })\n  }, [todayDeadlines])\n\n  useEffect(() => {\n    if (!minerId || !head || !deadlineId) {\n      return\n    }\n\n    let mounted = true\n    let firstTime = true\n    const continueLoad = () => firstTime || mounted\n\n    const epochs = [...Array(38)].map((_, i) => ({\n      height: head.Height - i * 2880,\n      day: i\n    }))\n\n    if (todayDeadlines) {\n      if (head.Height < todayDeadlines.deadlines[deadlineId].Close) {\n        console.log(head.Height, todayDeadlines.deadlines[deadlineId].Close)\n        return\n      }\n    }\n\n    try {\n      asyncPool(40, epochs, async ({ day, height }) => {\n        try {\n          const prevHead = await client.fetchTipsetHead(height)\n          if (!continueLoad()) return\n          const deadlines = await client.fetchDeadlines(minerId, prevHead)\n          if (!continueLoad()) return\n          minerDeadlines[day] = deadlines\n          setMinerDeadlines({ ...minerDeadlines })\n          if (day === 0) {\n            setTodayDeadlines(deadlines)\n          }\n        } catch (e) {\n          console.log('could not find', day, height)\n        }\n      })\n    } catch (e) {\n      console.log('trouble with ', e)\n    }\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, minerId, deadlineId, todayDeadlines])\n\n  return (\n    <section className='container'>\n      <MinerBar\n        client={client}\n        miners={miners}\n        minerId={minerId}\n        deadlineId={deadlineId}\n      />\n      <div className='section wpost'>\n        <div className='grid'>\n          {minerDeadlines && minerDeadlines[0] && (\n            <Summary\n              title={`${f2(\n                (+minerDeadlines[0].deadlines[deadlineId].LiveSectors * 32) /\n                  1024\n              )} TiB`}\n              desc={`${f(\n                minerDeadlines[0].deadlines[deadlineId].LiveSectors\n              )} Live Sectors`}\n            />\n          )}\n          {minerDeadlines && minerDeadlines[0] && (\n            <Summary\n              title={`${f2(\n                +minerDeadlines[0].deadlines[deadlineId].FaultyPower.Raw /\n                  (1024 * 1024 * 1024 * 1024)\n              )} TiB`}\n              desc={`${f(\n                +minerDeadlines[0].deadlines[deadlineId].FaultyPower.Raw /\n                  ((1024 * 1024 * 1024 * 1024) / 32)\n              )} Faulty Sectors`}\n            />\n          )}\n        </div>\n      </div>\n      <div className='section wpost'>\n        <div className='row'>\n          <div className='col section-title'>\n            <h3>History</h3>\n            <a data-tip data-for='wpost-desc'>\n              (what is this?)\n            </a>\n            <ReactTooltip id='wpost-desc' effect='solid' place='top'>\n              <span>\n                List of 48 WindowPoSt submission deadlines ordered by due time\n                (in epochs).\n                <br />\n                Bars represent ~8TB disks to be proven, white are healthy disks,\n                red are faulty.\n              </span>\n            </ReactTooltip>\n          </div>\n        </div>\n        <WindowPoSt\n          link={d => `/miners/${minerId}/deadlines/${deadlineId}`}\n          deadlines={deadlineArray(deadlineId)}\n          head={head}\n          out={({ d, head, i }) => (i === 0 ? `Today` : `${i}d ago`)}\n        />\n      </div>\n      <div className='section sectors'>\n        <div className='row'>\n          <div className='col section-title'>\n            <h3>Sectors</h3>\n            <a data-tip data-for='sectors-desc'>\n              (what is this?)\n            </a>\n            <ReactTooltip id='sectors-desc' effect='solid' place='top'>\n              <span>Each square is a 32GiB sector.</span>\n            </ReactTooltip>\n          </div>\n        </div>\n        {partitions && (\n          <div>\n            {partitions.map((partition, i) => (\n              <div key={i}>\n                <h4>\n                  Partition {i}{' '}\n                  {Object.keys(partition[0].Faults).length ===\n                    partition[0].Sectors.length && (\n                    <span className='rekt'>REKT</span>\n                  )}\n                </h4>\n                <div className='s-partition'>\n                  {partition[0].Sectors.map(sector => (\n                    <div\n                      key={sector}\n                      className={`s-sector ${partition[0].Faults[sector] &&\n                        'faulty'} ${partition[0].Terminated[sector] &&\n                        'terminated'} ${partition[0].Recoveries[sector] &&\n                        'recovering'}`}\n                    >\n                      <span>{sector}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </section>\n  )\n}\n\nexport default withRouter(Deadline)\n","import React, { useState, useEffect } from 'react'\nimport { useParams, withRouter } from 'react-router-dom'\n\nimport Summary from '../components/Summary'\nimport ReactTooltip from 'react-tooltip'\nimport WindowPoSt from '../components/WindowPoSt'\nimport MinerBar from '../components/MinerBar'\n\nconst d3 = require('d3')\nconst f = d3.format(',')\nconst f2 = d3.format(',.0f')\n\nfunction MinerInfo ({ client, miners, head }) {\n  const { minerId } = useParams()\n  const [miner, setMiner] = useState({ id: minerId })\n\n  // On new (hash or head): fetch miner\n  useEffect(() => {\n    if (!minerId || !head || !client) {\n      return\n    }\n\n    let mounted = true\n\n    const fetchInfo = () => {\n      setMiner({ ...miner })\n\n      client\n        .fetchMinerInfo(minerId, head)\n        .then(info => {\n          if (mounted) {\n            miner.info = info\n            setMiner({ ...miner })\n          }\n        })\n        .catch(e => {\n          console.error('failed to fetch miner info')\n        })\n\n      client\n        .fetchDeadlines(minerId, head)\n        .then(deadlines => {\n          if (mounted) {\n            miner.deadlines = deadlines\n            setMiner({ ...miner })\n            console.log('deadlines setting')\n          }\n        })\n        .catch(e => {\n          console.error('failed to fetch deadlines')\n        })\n\n      client\n        .fetchDeposits(minerId, head)\n        .then(deposits => {\n          if (mounted) {\n            miner.deposits = deposits\n            setMiner({ ...miner })\n          }\n        })\n        .catch(e => {\n          console.error('failed to fetch deposits')\n        })\n\n      client\n        .fetchPreCommittedSectors(minerId, head)\n        .then(preCommits => {\n          if (mounted) {\n            miner.preCommits = preCommits\n            setMiner({ ...miner })\n          }\n        })\n        .catch(e => {\n          console.error('failed to fetch precommitted sectors', e)\n        })\n    }\n\n    fetchInfo()\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, minerId])\n\n  if (!miner || !head) {\n    return <></>\n  }\n\n  return (\n    <section className='container'>\n      <MinerBar\n        client={client}\n        miners={miners}\n        minerId={minerId}\n        miner={miner}\n      />\n      <div id='deposits' className='section'>\n        <div className='grid'>\n          {miner.deposits && (\n            <Summary\n              title={`${f(miner.deposits.Balance || 0)} FIL`}\n              desc='Balance'\n            />\n          )}\n\n          {miner.deposits && (\n            <Summary\n              title={`${f(miner.deposits.Available || 0)} FIL`}\n              desc='Available'\n            />\n          )}\n\n          {miner.deposits && (\n            <Summary\n              desc='Vesting'\n              title={`${f(miner.deposits.LockedFunds || 0)} FIL`}\n            />\n          )}\n        </div>\n        <div className='grid'>\n          {miner.deposits && (\n            <Summary\n              title={`${f(miner.deposits.InitialPledge || 0)} FIL`}\n              desc='Initial Pledge'\n            />\n          )}\n          {miner.deposits && (\n            <Summary\n              desc='PreCommit Deposit'\n              title={`${f(miner.deposits.PreCommitDeposits || 0)} FIL`}\n            />\n          )}\n          {miner.deposits && (\n            <Summary\n              title={`${f(miner.deposits.FeeDebt || 0)} FIL`}\n              desc='Fee Debt'\n            />\n          )}\n        </div>\n      </div>\n\n      <div id='sectors'>\n        <div className='grid grid-4'>\n          {miner.deadlines && (\n            <Summary\n              title={`${f2((miner.deadlines.SectorsCount * 32) / 1024)} TiB`}\n              desc={`${f(miner.deadlines.SectorsCount || 0)} Total Sectors`}\n            />\n          )}\n          {miner.deadlines && (\n            <Summary\n              title={`${f2((miner.deadlines.ActiveCount * 32) / 1024)} TiB`}\n              desc={`${f(miner.deadlines.ActiveCount || 0)} Active Sectors`}\n            />\n          )}\n          {miner.deadlines && (\n            <Summary\n              title={`${f2((miner.deadlines.FaultsCount * 32) / 1024)} TiB`}\n              desc={`${f(miner.deadlines.FaultsCount || 0)} Faulty Sectors`}\n            />\n          )}\n          {miner.preCommits && (\n            <Summary title={f(miner.preCommits.Count || 0)} desc='PreCommits' />\n          )}\n        </div>\n      </div>\n\n      {miner.deadlines && (\n        <div className='section wpost'>\n          <div className='row'>\n            <div className='col section-title'>\n              <h3>Deadlines</h3>\n              <a data-tip data-for='wpost-desc'>\n                (what is this?)\n              </a>\n              <ReactTooltip id='wpost-desc' effect='solid' place='top'>\n                <span>\n                  List of 48 WindoPoSt submission deadlines ordered by due time\n                  (in epochs).\n                  <br />\n                  Bars represent ~8TB disks to be proven, white are healthy\n                  disks, red are faulty.\n                </span>\n              </ReactTooltip>\n            </div>\n          </div>\n          <WindowPoSt\n            minerId={minerId}\n            deadlines={miner.deadlines.nextDeadlines}\n            head={head}\n          />\n        </div>\n      )}\n\n      {miner.deadlines && (\n        <div className='section'>\n          <div className='row'>\n            <div className='col section-title'>\n              <h3>Upcoming Deadline</h3>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='col'>\n              <div className='timeline'></div>\n              <ul>\n                <li>\n                  PoStSubmissions:\n                  {miner.deadlines.nextDeadlines[0].PostSubmissions}\n                </li>\n                <li>\n                  Sectors to Prove:{' '}\n                  {miner.deadlines.nextDeadlines[0].LiveSectors}\n                </li>\n                <li>Current Deadline: {miner.deadlines.deadline.Index}</li>\n                <li>\n                  FaultCutoff:{' '}\n                  {miner.deadlines.deadline.FaultCutoff - head.Height}\n                </li>\n                <li>\n                  Challenge: {miner.deadlines.deadline.Challenge - head.Height}\n                </li>\n                <li>\n                  {miner.deadlines.deadline.Open - head.Height > 0\n                    ? 'Open'\n                    : 'Opened'}\n                  : {miner.deadlines.deadline.Open - head.Height}\n                </li>\n                <li>Close: {miner.deadlines.deadline.Close - head.Height}</li>\n              </ul>\n            </div>\n            <div className='col'>\n              <WindowPoSt\n                minerId={minerId}\n                deadlines={[miner.deadlines.nextDeadlines[0]]}\n                head={head}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {miner.preCommits && (\n        <div id='provecommit' className='section'>\n          <div className='row'>\n            <div className='col section-title'>\n              <h3>New sectors</h3>\n              <a data-tip data-for='provecommit-desc'>\n                (what is this?)\n              </a>\n              <ReactTooltip id='provecommit-desc' effect='solid' place='top'>\n                <span>\n                  List of ProveCommits ordered by due time (in epochs).\n                  <br />\n                  Circles represent sectors to be proven.\n                </span>\n              </ReactTooltip>\n            </div>\n          </div>\n          <div className='deadlines provecommit'>\n            {miner.preCommits.PreCommitDeadlines.map((d, i) => (\n              <div key={i} className='deadline'>\n                <div className='out'>\n                  In {d.Expiry - head.Height}\n                  {/* <span className=\"epochs\">epochs</span> */}\n                </div>\n                <div className='hddWrapper'>\n                  <div className='in'>\n                    {Math.round(d.Sectors.length)} sectors\n                  </div>\n                  <div className='hdds'>\n                    {d.Sectors.map(v => (\n                      <div key={v} className='hdd'>\n                        {''}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </section>\n  )\n}\n\nexport default withRouter(MinerInfo)\n","export default async function () {\n  return await (await fetch('https://api3.drand.sh/health')).json()\n}\n","import React, { useState, useEffect } from 'react'\nimport Drand from '../services/drand'\n\nconst d3 = require('d3')\nconst f = d3.format(',')\n\nfunction getFilecoinExpectedHeight () {\n  const filGenesis = new Date('2020-08-24 22:00:00Z').getTime()\n  return Math.floor((Date.now() - filGenesis) / 1000 / 30)\n}\n\nexport default function TinySummary ({ client, head }) {\n  const [expected, setFilExpectedHeight] = useState(getFilecoinExpectedHeight())\n  const [round, setRound] = useState()\n\n  useEffect(() => {\n    let mounted = true\n\n    const fetchingHead = async () => {\n      Drand().then(fetched => {\n        if (!mounted) return\n        if (round && fetched.current === round.current) {\n          console.log('   repeated drand, skip')\n          return\n        }\n        console.log('   new drand', fetched)\n        setRound(fetched)\n      })\n\n      if (getFilecoinExpectedHeight() !== expected) {\n        setFilExpectedHeight(getFilecoinExpectedHeight())\n      }\n    }\n\n    fetchingHead()\n\n    const interval = setInterval(() => {\n      if (mounted) {\n        fetchingHead()\n      }\n    }, 5000)\n\n    return () => {\n      mounted = false\n      clearInterval(interval)\n      console.log('removing interval')\n    }\n  }, [client, head, round])\n\n  return (\n    <div className='tiny-grid'>\n      {head && expected && (\n        <div>\n          Filecoin Status{' '}\n          <span>\n            {head.Height < expected\n              ? expected - head.Height === 1\n                ? 'gathering blocks'\n                : 'catching up'\n              : 'ok'}\n          </span>\n        </div>\n      )}\n      {head && (\n        <div className='tiny'>\n          Current Tipset{' '}\n          <a href={`https://filfox.info/en/tipset/${head.Height}`}>\n            {f(head.Height)}\n          </a>\n        </div>\n      )}\n      {expected && (\n        <div className='tiny'>\n          Expected Tipset{' '}\n          <a href={`https://filfox.info/en/tipset/${expected}`}>\n            {f(expected)}\n          </a>\n        </div>\n      )}\n      {round && (\n        <>\n          <div className='tiny'>\n            Drand Status{' '}\n            <span>{round.current < round.expected ? 'catching up' : 'ok'}</span>\n          </div>\n          <div className='tiny'>\n            Current Drand{' '}\n            <a href={`https://api.drand.sh/public/${round.current}`}>\n              {f(round.current)}\n            </a>\n          </div>\n          <div className='tiny'>\n            Expected Drand{' '}\n            <a href={`https://api.drand.sh/public/${round.expected}`}>\n              {f(round.expected)}\n            </a>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\nimport Filecoin from './services/filecoin'\n\nimport Home from './views/Home'\nimport Status from './views/Status'\nimport Full from './views/Full'\nimport Deadline from './views/Deadline'\nimport MinerInfo from './views/MinerInfo'\nimport TinySummary from './components/TinySummary'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.scss'\n\nfunction App () {\n  console.log('reloaded')\n  const [miners, setMiners] = useState()\n  const [head, setHead] = useState()\n  const [node, setNode] = useState('wss://node.glif.io/space07/lotus/rpc/v0')\n  const [client, setFilClient] = useState(new Filecoin(node))\n  const [spa, setSpa] = useState()\n\n  useEffect(() => {\n    const reload = async () => {\n      await setHead()\n      await setFilClient(new Filecoin(node))\n    }\n\n    reload()\n  }, [node])\n\n  // useEffect(() => {\n  //   if (!head) return\n\n  //   client.fetchPower(head).then(power => {\n  //     setSpa(power)\n  //   })\n  // }, [head, client])\n\n  useEffect(() => {\n    let mounted = true\n\n    client.getMiners().then(res => {\n      if (!mounted) return\n      setMiners(res)\n    })\n\n    const fetchingHead = async () => {\n      client.fetchHead().then(fetched => {\n        if (!mounted) return\n        if (head && fetched.Height === head.Height) {\n          console.log('   repeated block, skip')\n          return\n        }\n        console.log('   new block', fetched.Height, head && head.Height)\n        setHead(fetched)\n      })\n    }\n\n    fetchingHead()\n\n    const interval = setInterval(() => {\n      if (mounted) {\n        fetchingHead()\n      }\n    }, 5000)\n\n    return () => {\n      mounted = false\n      clearInterval(interval)\n      console.log('removing interval')\n    }\n  }, [client, head])\n\n  return (\n    <Router>\n      <div className='App'>\n        <div className='container'>\n          {/* <div className='row'>\n            <div className='col'>\n              Connected to Filecoin Network via&nbsp;\n              <select onChange={e => setNode(e.target.value)} value={node}>\n                <option value='wss://lotus.jimpick.com/spacerace_api/0/node/rpc/v0'>\n                  Jim's node 0\n                </option>\n                <option value='wss://lotus.jimpick.com/spacerace_api/1/node/rpc/v0'>\n                  Jim's node 1\n                </option>\n                <option value='ws://www.border.ninja:12342/node/rpc/v0'>\n                  Border's node\n                </option>\n                <option value='wss://node.glif.io/space07/lotus/rpc/v0'>\n                  Glif's node\n                </option>\n              </select>\n            </div>\n          </div> */}\n          <TinySummary client={client} head={head} />\n        </div>\n        <header className='container-fluid'>\n          <Link to='/'>\n            <h1 id='logo' className='logo'>\n              <span>spacegap</span>\n            </h1>\n          </Link>\n        </header>\n        <Switch>\n          <Route path='/miners/:minerId/deadlines/:deadlineId'>\n            <Deadline client={client} miners={miners} head={head} />\n          </Route>\n          <Route path='/miners/:minerId'>\n            <MinerInfo client={client} miners={miners} head={head} />\n          </Route>\n          <Route path='/full'>\n            <Full client={client} miners={miners} />\n          </Route>\n          <Route path='/status'>\n            <Status head={head} spa={spa} client={client} miners={miners} />\n          </Route>\n          <Route path='/'>\n            <Home client={client} head={head} miners={miners} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}