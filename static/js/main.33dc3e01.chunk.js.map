{"version":3,"sources":["services/filecoin/index.js","services/drand/index.js","views/Home.js","components/Summary.js","components/WindowPoStStatus.js","views/Status.js","components/WindowPoSt.js","views/Full.js","components/Miner.js","components/TinySummary.js","App.js","serviceWorker.js","index.js"],"names":["d3","require","f","format","b64","bx","schema","testnet","fullNode","preCommitSchema","type","key","value","info","seal_proof","sector_number","sealed_cid","seal_rand_epoch","deal_ids","expiration","replace_capacity","replace_sector_deadline","replace_sector_partition","replace_sector_number","precommit_deposit","precommit_epoch","deal_weight","verified_deal_weight","bytesToBig","p","acc","i","length","window","BigInt","Filecoin","endpointUrl","this","url","provider","BrowserProvider","console","log","client","LotusRPC","head","path","state","Blocks","ParentStateRoot","chainGetNode","data","Obj","self","Fil","methods","decode","asObject","a","res","chainHead","height","ChainGetTipSetByHeight","storagePowerActorRaw","TotalRawBytePower","TotalBytesCommitted","TotalQualityAdjPower","TotalQABytesCommitted","TotalPledgeCollateral","ThisEpochRawBytePower","ThisEpochQualityAdjPower","ThisEpochPledgeCollateral","hash","StateReadState","Cids","precommitdeposits","State","PreCommitDeposits","locked","LockedFunds","collateral","Balance","available","cached","localStorage","getItem","JSON","parse","fetch","json","miners","reduce","curr","address","setItem","stringify","Promise","all","StateMinerProvingDeadline","StateMinerDeadlines","deadline","deadlines","nextDeadlines","Array","map","_","Index","Close","LiveSectors","TotalSectors","FaultyPower","SectorsCount","d","FaultsCount","Raw","ActiveCount","getData","preCommittedSectors","PreCommitDeadlines","groups","Object","keys","SectorNumber","Expiry","Sectors","sort","b","Count","StateMinerSectors","sectorList","ID","number","sectorsCount","Home","id","className","slice","to","Summary","title","desc","href","WindowPoStStatus","Height","Math","round","ceil","v","f2","Status","spa","useState","minersDeadlines","setMinersDeadlines","minersDeadlines2880","setMinersDeadlines2880","prev60","setPrev60","prev120","setPrev120","useEffect","getPrev","diff","fetchTipsetHead","prevHead","fetchPower","prevSpa","fetchingPrevious","mounted","minersList","asyncPool","minerId","fetchDeadlines","deadlines2880","parseInt","WindowPoSt","Full","setHead","fetchHead","fetched","fetchingHead","Miner","useParams","miner","setMiner","canvasRef","React","useRef","context","setContext","then","catch","err","error","fetchDeposits","deposits","fetchPreCommittedSectors","preCommits","fetchSectors","sectors","current","Blockies","render","seed","renderCtx","getContext","tag","en","location","flagEmoji","identicon","data-tip","data-for","effect","place","TinySummary","expected","getFilecoinExpectedHeight","filGenesis","Date","getTime","floor","now","App","setMiners","setRound","node","setNode","setFilClient","filExpectedHeight","setFilExpectedHeight","setSpa","reload","power","getMiners","Drand","interval","setInterval","clearInterval","name","onChange","e","target","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"2WAGMA,EAAKC,EAAQ,IACbC,EAAIF,EAAGG,OAAO,QAIdC,EAHKH,EAAQ,IAGPI,CADV,oEAGIC,EAASL,EAAQ,IAA0CM,QAC9DC,SAEGC,EAAkB,CACtBC,KAAM,OACNC,IAAK,SACLC,MAAO,CACLC,KAAM,CACJC,WAAY,MACZC,cAAe,MACfC,WAAY,MACZC,gBAAiB,MACjBC,SAAU,CAAC,OAAQ,OACnBC,WAAY,MACZC,iBAAkB,OAClBC,wBAAyB,MACzBC,yBAA0B,MAC1BC,sBAAuB,OAEzBC,kBAAmB,SACnBC,gBAAiB,MACjBC,YAAa,SACbC,qBAAsB,WAI1B,SAASC,EAAYC,GAEnB,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIF,EAAEG,OAAQD,IAC5BD,GAAO,KACPA,GAAOG,OAAOC,OAAOL,EAAEE,IAEzB,OAAOD,E,IAGYK,E,WACnB,WAAaC,GAAc,oBACzBC,KAAKC,IAAMF,EACX,IAAMG,EAAW,IAAIC,IAAgBJ,GACrCK,QAAQC,IAAI,eAAgBN,GAC5BC,KAAKM,OAAS,IAAIC,WAASL,EAAU,CAAEjC,W,6FAG1BuC,EAAMC,EAAMxC,G,kFACnByC,EAAQF,EAAKG,OAAO,GAAGC,gBAAgB,K,SACzBZ,KAAKM,OAAOO,aAAZ,UAA4BH,EAA5B,YAAqCD,I,cAAnDK,E,OAA4DC,IAE5DC,EAAOhB,K,SACAiB,IAAIC,QAAQC,OAAOlD,EAAQ6C,GAAMM,SAAjC,uCAA0C,WAAMC,GAAN,eAAAA,EAAA,sEACnCL,EAAKV,OAAOO,aAAaQ,GADU,cAC/CC,EAD+C,yBAE9CA,EAAIP,KAF0C,2CAA1C,uD,+SAOAf,KAAKM,OAAOiB,Y,6NAGJC,G,iFACRxB,KAAKM,OAAOmB,uBAAuBD,EAAQ,M,yNAGxChB,G,gFACVE,EAAQF,EAAKG,OAAO,GAAGC,gBAAgB,K,SAErCZ,KAAKM,OAAOO,aAAZ,UAA4BH,EAA5B,e,cADFgB,E,OAEJX,I,kBACK,CACLY,kBAAmBpC,EAAWxB,EAAIoD,OAAOO,EAAqB,KAC9DE,oBAAqBrC,EAAWxB,EAAIoD,OAAOO,EAAqB,KAChEG,qBAAsBtC,EAAWxB,EAAIoD,OAAOO,EAAqB,KACjEI,sBAAuBvC,EAAWxB,EAAIoD,OAAOO,EAAqB,KAClEK,sBAAuBxC,EAAWxB,EAAIoD,OAAOO,EAAqB,KAClEM,sBAAuBzC,EAAWxB,EAAIoD,OAAOO,EAAqB,KAClEO,yBAA0B1C,EAAWxB,EAAIoD,OAAOO,EAAqB,KACrEQ,0BAA2B3C,EAAWxB,EAAIoD,OAAOO,EAAqB,O,oLAIrDS,EAAM3B,G,+FACLR,KAAKM,OAAO8B,eAAeD,EAAM3B,EAAK6B,M,cAApD3B,E,OACA4B,EAAoB5B,EAAM6B,MAAMC,kBAChCC,EAAS/B,EAAM6B,MAAMG,YACrBC,EAAajC,EAAMkC,QACnBC,EAAYF,EAAaL,EAAoBG,E,kBAE5C,CACLE,WAAY9E,EAAE6C,EAAMkC,QAAU,MAC9BC,UAAWhF,EAAEgF,EAAY,MACzBJ,OAAQ5E,EAAE4E,EAAS,MACnBH,kBAAmBzE,EAAEyE,EAAoB,Q,oQAKrCQ,EAASlD,OAAOmD,aAAaC,QAAQ,W,yCACxBC,KAAKC,MAAMJ,I,uBAGtBK,MACJ,oE,8BAEFC,O,cAJIA,E,OAKAC,EAASD,EAAKC,OAAOC,QAAO,SAAC7D,EAAK8D,GAEtC,OADA9D,EAAI8D,EAAKC,SAAWD,EACb9D,IACN,IAEHG,OAAOmD,aAAaU,QAAQ,SAAUR,KAAKS,UAAUL,I,kBAE9CA,G,gLAGalB,EAAM3B,G,mGACUmD,QAAQC,IAAI,CAC9C5D,KAAKM,OAAOuD,0BAA0B1B,EAAM3B,EAAK6B,MACjDrC,KAAKM,OAAOwD,oBAAoB3B,EAAM3B,EAAK6B,Q,0CAFtC0B,E,KAAUC,E,KAKXC,EAAgB,YAAIC,MAAM,KAC7BC,KAAI,SAACC,EAAG1E,GAAJ,mBAAC,eACDsE,GAAWD,EAASM,MAAQ3E,GAAK,KADjC,IAEH4E,MAAOP,EAASO,MAAY,GAAJ5E,OAEzByE,KAAI,kBAAwD,CAC3DG,MADG,EAAGA,MAENC,YAFG,EAAUA,YAGbC,aAHG,EAAuBA,aAI1BC,YAJG,EAAqCA,gBAOtCC,EAAeV,EAClBG,KAAI,SAAAQ,GAAC,OAAKA,EAAEJ,eACZjB,QAAO,SAAC7D,EAAK8D,GAAN,OAAe9D,EAAM8D,IAAM,GAE/BqB,EACJZ,EACGG,KAAI,SAAAQ,GAAC,OAAKA,EAAEF,YAAYI,OACxBvB,QAAO,SAAC7D,EAAK8D,GAAN,OAAe9D,EAAM8D,IAAM,GAFrC,Y,kBAKK,CACLU,gBACAS,eACAE,cACAE,YAAaJ,EAAeE,I,kMAIAzC,EAAM3B,G,yFACFR,KAAK+E,QACrCvE,EADgC,cAEzB2B,EAFyB,QAGhC/D,G,cAHI4G,E,OAKAC,EAAqBtH,EACxBuH,OACCC,OAAOC,KAAKJ,GAAqBb,KAAI,SAAAQ,GAAC,MAAK,CACzCU,aAAcL,EAAoBL,GAAGnG,KAAKE,cAC1C4G,OAAQN,EAAoBL,GAAGvF,gBAAvB,WAEV,SAAAuF,GAAC,OAAIA,EAAEW,UAERnB,KAAI,yCAAwB,CAC3BmB,OADG,KAEHC,QAFG,KAEcpB,KAAI,SAAAQ,GAAC,OAAIA,EAAEU,oBAE7BG,MAAK,SAACnE,EAAGoE,GAAJ,OAAUpE,EAAEiE,OAASG,EAAEH,U,kBAExB,CACLL,qBACAS,MAAOP,OAAOC,KAAKJ,GAAqBrF,S,qLAIxBwC,EAAM3B,G,2FACCR,KAAKM,OAAOqF,kBACnCxD,EACA,KACA,KACA3B,EAAK6B,M,cAJDuD,E,OAMAL,EAAUK,EAAWtC,QAAO,SAAC7D,EAAK8D,GAEtC,OADA9D,EAAI8D,EAAKsC,IAAM,CAAEC,OAAQvC,EAAKsC,GAAIrH,KAAM+E,GACjC9D,IACN,IAEGsG,EAAeZ,OAAOC,KAAKG,GAAS5F,O,kBACnC,CAAEoG,eAAcR,Y,gHCtMZ,6C,4CAAA,sBAAAlE,EAAA,sEACO8B,MAAM,4CADb,8BAC0DC,OAD1D,oF,sBCGA,SAAS4C,EAAT,GAA4B,IAAX3C,EAAU,EAAVA,OAC9B,OACE,6BAAS4C,GAAG,OAAOC,UAAU,aAC3B,yBAAKA,UAAU,aAAf,cAEG7C,GACC8B,OAAOC,KAAK/B,GACT8C,MAAM,EAAG,GACThC,KAAI,SAACQ,EAAGjF,GAAJ,OACH,yBAAKpB,IAAKoB,GACPA,EAAI,EADP,IACW,IACT,kBAAC,IAAD,CAAM0G,GAAE,kBAAa/C,EAAOsB,GAAGnB,UAC5BH,EAAOsB,GAAGnB,cAKvB,iDACmB,kBAAC,IAAD,CAAM4C,GAAG,SAAT,iBADnB,yCAE2B,kBAAC,IAAD,CAAMA,GAAG,WAAT,kBAF3B,M,qBClBS,SAASC,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,MAAOrG,EAAa,EAAbA,IAAKsG,EAAQ,EAARA,KAC7C,OACE,yBAAKL,UAAU,kBACb,yBAAKA,UAAU,iBACZjG,EAAM,uBAAGuG,KAAMvG,GAAMqG,GAAa,oCAAGA,IAExC,yBAAKJ,UAAU,gBAAgBK,ICNtB,SAASE,EAAT,GAAgD,IAAnB1C,EAAkB,EAAlBA,SAAUvD,EAAQ,EAARA,KAC9CmE,EAAIZ,EAEV,OACE,yBAAKmC,UAAU,wBACb,yBAAKA,UAA8B,IAAnBvB,EAAEH,aAAqB,oBAAsB,YAC3D,yBAAK0B,UAAU,OAAf,MACMvB,EAAEL,MAAQ9D,EAAKkG,QAGrB,yBAAKR,UAAU,cACb,yBAAKA,UAAU,MACZS,KAAKC,MAAwB,GAAjBjC,EAAEH,aAAqB,MADtC,QAGA,yBAAK0B,UAAU,QACZ,YACIhC,MACDyC,KAAKE,KACHF,KAAKC,MACe,GAAjBjC,EAAEH,aAAqB,MACrBG,EAAEF,YAAYI,IAAf,eACA,KAGRV,KAAI,SAAC2C,EAAGpH,GAAJ,OACJ,yBAAKpB,IAAKoB,EAAGwG,UAAU,OACpB,QAGJ,YACIhC,MACDyC,KAAKE,KACHF,KAAKC,OAAOjC,EAAEF,YAAYI,IAAf,eACT,KAGNV,KAAI,SAAC2C,EAAGpH,GAAJ,OACJ,yBAAKpB,IAAKoB,EAAGwG,UAAU,cACpB,YClCjB,IACMa,EADKnJ,EAAQ,IACLE,OAAO,QAGN,SAASkJ,EAAT,GAAiD,IAA9B1G,EAA6B,EAA7BA,OAAQ2G,EAAqB,EAArBA,IAAKzG,EAAgB,EAAhBA,KAAM6C,EAAU,EAAVA,OAAU,EACf6D,mBAAS,IADM,mBACtDC,EADsD,KACrCC,EADqC,OAEPF,mBAAS,IAFF,mBAEtDG,EAFsD,KAEjCC,EAFiC,OAGjCJ,qBAHiC,mBAGtDK,EAHsD,KAG9CC,EAH8C,OAI/BN,qBAJ+B,mBAItDO,EAJsD,KAI7CC,EAJ6C,KAkD7D,OA5CAC,qBAAU,WACHnH,GAEiB,uCAAG,oCAAAa,EAAA,6DACjBuG,EADiB,+BAAAvG,EAAA,MACP,WAAMwG,GAAN,iBAAAxG,EAAA,sEACSf,EAAOwH,gBAAgBtH,EAAKkG,OAASmB,GAD9C,cACRE,EADQ,gBAEQzH,EAAO0H,WAAWD,GAF1B,cAERE,EAFQ,yBAGPA,GAHO,2CADO,+DAOStE,QAAQC,IAAI,CAACgE,EAAQ,IAAKA,EAAQ,OAP3C,0CAOhBL,EAPgB,KAORE,EAPQ,cASjBD,EAAUD,GATO,wBAUjBG,EAAWD,GAVM,4CAAH,oDAYtBS,KACC,CAAC1H,IAEJmH,qBAAU,WACR,IAAIQ,GAAU,EACd,GAAK3H,EAAL,CAEA,IAAM4H,EAAajD,OAAOC,KAAK/B,GAC5B8C,MAAM,EAAG,IACThC,KAAI,SAAAQ,GAAC,OAAItB,EAAOsB,GAAGnB,WAetB,OAdA6E,IAAU,EAAGD,EAAJ,uCAAgB,WAAME,GAAN,mBAAAjH,EAAA,yDAClB8G,EADkB,iEAEC7H,EAAOiI,eAAeD,EAAS9H,GAFhC,UAEjBwD,EAFiB,OAGlBmE,EAHkB,iEAIA7H,EAAOwH,gBAAgBtH,EAAKkG,OAAS,MAJrC,UAIjBqB,EAJiB,OAKlBI,EALkB,oEAMK7H,EAAOiI,eAAeD,EAASP,GANpC,WAMjBS,EANiB,OAOlBL,EAPkB,0DAQvBhB,EAAgBmB,GAAWtE,EAC3BqD,EAAoBiB,GAAWE,EATR,UAUjBpB,EAAmB,eAAKD,IAVP,yBAWVG,EAAuB,eAAKD,IAXlB,qFAAhB,uDAcF,WACLc,GAAU,MAEX,CAAC7H,EAAQE,EAAM6C,IAGhB,6BAAS6C,UAAU,aACjB,yBAAKD,GAAG,WAAWC,UAAU,WAC3B,yBAAKA,UAAU,QACZe,GACC,oCACE,kBAACZ,EAAD,CACEC,MAAOS,EAAG0B,SAASxB,EAAIpF,sBA3DpB,iBA4DH0E,KAAK,oBAIVgB,GAAUN,GACT,oCACE,kBAACZ,EAAD,CACEC,MAAOS,EACL0B,SACExB,EAAIpF,qBAAuB0F,EAAO1F,sBArEnC,iBAwEH0E,KAAK,qBAIVkB,GAAWR,GACV,oCACE,kBAACZ,EAAD,CACEC,MAAOS,EACL0B,SACExB,EAAIpF,qBAAuB4F,EAAQ5F,sBAjFpC,iBAoFH0E,KAAK,wBA/BjB,kDAsCGlD,GACC8B,OAAOC,KAAK/B,GACT8C,MAAM,EAAG,IACThC,KAAI,SAACQ,EAAGjF,GAAJ,OACH,yBAAKwG,UAAU,OAAO5H,IAAKoB,GACzB,kBAAC,IAAD,CAAM0G,GAAE,kBAAa/C,EAAOsB,GAAGnB,UAC5BH,EAAOsB,GAAGnB,SAEZ2D,GAAmBA,EAAgB9D,EAAOsB,GAAGnB,UAC5C,kBAACiD,EAAD,CACEjG,KAAMA,EACNuD,SACEoD,EAAgB9D,EAAOsB,GAAGnB,SAASS,cAAc,MAItDoD,GACCA,EAAoBhE,EAAOsB,GAAGnB,UAC5B,kBAACiD,EAAD,CACEjG,KAAMA,EACNuD,SACEsD,EAAoBhE,EAAOsB,GAAGnB,SAASS,cAAc,WCtH5D,SAASyE,EAAT,GAA2C,IAApB1E,EAAmB,EAAnBA,UAAWxD,EAAQ,EAARA,KAC/C,OACE,yBAAK0F,UAAU,wBACZlC,GACCA,EAAUC,cAAcE,KAAI,SAACQ,EAAGjF,GAAJ,OAC1B,yBACEpB,IAAKoB,EACLwG,UAA8B,IAAnBvB,EAAEH,aAAqB,oBAAsB,YAExD,yBAAK0B,UAAU,OAAf,MACMvB,EAAEL,MAAQ9D,EAAKkG,QAGrB,yBAAKR,UAAU,cACb,yBAAKA,UAAU,MACZS,KAAKC,MAAwB,GAAjBjC,EAAEH,aAAqB,MADtC,QAGA,yBAAK0B,UAAU,QACZ,YACIhC,MACDyC,KAAKE,KACHF,KAAKC,MACe,GAAjBjC,EAAEH,aAAqB,MACrBG,EAAEF,YAAYI,IAAf,eACA,KAGRV,KAAI,SAAC2C,EAAGpH,GAAJ,OACJ,yBAAKpB,IAAKoB,EAAGwG,UAAU,OACpB,QAGJ,YACIhC,MACDyC,KAAKE,KACHF,KAAKC,OACFjC,EAAEF,YAAYI,IAAf,eACE,KAGRV,KAAI,SAAC2C,EAAGpH,GAAJ,OACJ,yBAAKpB,IAAKoB,EAAGwG,UAAU,cACpB,eCtCN,SAASyC,EAAT,GAAoC,IAAnBtF,EAAkB,EAAlBA,OAAQ/C,EAAU,EAAVA,OAAU,EACF4G,mBAAS,IADP,mBACzCC,EADyC,KACxBC,EADwB,OAExBF,qBAFwB,mBAEzC1G,EAFyC,KAEnCoI,EAFmC,KAgChD,OA5BAjB,qBAAU,YACU,uCAAG,4BAAAtG,EAAA,sEACGf,EAAOuI,YADV,OACbC,EADa,OAEnBF,EAAQE,GAFW,2CAAH,qDAIlBC,KACC,CAACzI,IAEJqH,qBAAU,WACR,IAAIQ,GAAU,EACd,GAAK3H,EAAL,CAEA,IAAM4H,EAAajD,OAAOC,KAAK/B,GAC5B8C,MAAM,EAAG,IACThC,KAAI,SAAAQ,GAAC,OAAItB,EAAOsB,GAAGnB,WAStB,OARA6E,IAAU,EAAGD,EAAJ,uCAAgB,WAAME,GAAN,eAAAjH,EAAA,yDAClB8G,EADkB,iEAEC7H,EAAOiI,eAAeD,EAAS9H,GAFhC,UAEjBwD,EAFiB,OAGlBmE,EAHkB,wDAIvBhB,EAAgBmB,GAAWtE,EAJJ,UAKVoD,EAAmB,eAAKD,IALd,qFAAhB,uDAQF,WACLgB,GAAU,MAEX,CAAC7H,EAAQE,EAAM6C,IAGhB,6BAAS4C,GAAG,SAASC,UAAU,aAA/B,kDAEG7C,GACC8B,OAAOC,KAAK/B,GACT8C,MAAM,EAAG,IACThC,KAAI,SAACQ,EAAGjF,GAAJ,OACH,yBAAKpB,IAAKoB,GACR,kBAAC,IAAD,CAAM0G,GAAE,kBAAa/C,EAAOsB,GAAGnB,UAC5BH,EAAOsB,GAAGnB,SAGb,kBAACkF,EAAD,CACE1E,UAAWmD,EAAgB9D,EAAOsB,GAAGnB,SACrChD,KAAMA,S,6BC3ChB3C,EADKD,EAAQ,IACNE,OAAO,KAEL,SAASkL,EAAT,GAA2C,IAAzB1I,EAAwB,EAAxBA,OAAQ+C,EAAgB,EAAhBA,OAAQ7C,EAAQ,EAARA,KACvC8H,EAAYW,cAAZX,QAD+C,EAE7BpB,mBAAS,CAAEjB,GAAIqC,IAFc,mBAEhDY,EAFgD,KAEzCC,EAFyC,KAIjDC,EAAYC,IAAMC,OAAO,MAJwB,EAKzBD,IAAMnC,SAAS,MALU,mBAKhDqC,EALgD,KAKvCC,EALuC,KAsEvD,OA9DA7B,qBAAU,WACR,GAAKW,GAAY9H,EAAjB,CAEA,IAAI2H,GAAU,EA0Cd,OAvCE/H,QAAQC,IAAI,MAAOC,EAAOL,IAAIkG,MAAM,IAAK3F,EAAK6B,KAAM7B,EAAKkG,QACzDyC,EAAS,eAAKD,IAEd5I,EACGiI,eAAeD,EAAS9H,GACxBiJ,MAAK,SAAAzF,GACAmE,IACFe,EAAMlF,UAAYA,EAClBmF,EAAS,eAAKD,QAGjBQ,OAAM,SAAAC,GACLvJ,QAAQwJ,MAAMD,MAGlBrJ,EAAOuJ,cAAcvB,EAAS9H,GAAMiJ,MAAK,SAAAK,GACnC3B,IACFe,EAAMY,SAAWA,EACjBX,EAAS,eAAKD,QAIlB5I,EAAOyJ,yBAAyBzB,EAAS9H,GAAMiJ,MAAK,SAAAO,GAC9C7B,IACFe,EAAMc,WAAaA,EACnBb,EAAS,eAAKD,QAIlB5I,EAAO2J,aAAa3B,EAAS9H,GAAMiJ,MAAK,SAAAS,GAClC/B,IACFe,EAAMgB,QAAUA,EAChBf,EAAS,eAAKD,QAOb,WACLf,GAAU,MAEX,CAAC7H,EAAQE,EAAM8H,IAElBX,qBAAU,WACR,GAAIyB,EAAUe,QAAS,CACrBC,IAASC,OAAO,CAAEC,KAAMpB,EAAMjD,IAAMmD,EAAUe,SAE9C,IAAMI,EAAYnB,EAAUe,QAAQK,WAAW,MAE3CD,GACFf,EAAWe,MAGd,CAAChB,EAASL,IAERA,GAAU1I,EAKb,6BACE,yBAAKyF,GAAG,QAAQC,UAAU,WAExB,4BAAKgD,EAAMjD,IACX,6BACG5C,GAAUA,EAAO6F,EAAMjD,IAAIwE,KAC1B,0BAAMvE,UAAU,cAAc7C,EAAO6F,EAAMjD,IAAIwE,IAAIC,IAEpDrH,GAAUA,EAAO6F,EAAMjD,IAAI0E,UAC1B,uCAAatH,EAAO6F,EAAMjD,IAAI0E,SAASC,WAL3C,SAQE,uBAAGpE,KAAI,yCAAoC0C,EAAMjD,KAAjD,UARF,QAUE,uBACEO,KAAI,6DAAwD0C,EAAM2B,YADpE,WAVF,QAgBE,uBAAGrE,KAAI,+CAA0C0C,EAAMjD,KAAvD,YAhBF,MAuBF,yBAAKA,GAAG,WAAWC,UAAU,WAC3B,yBAAKA,UAAU,QACZgD,EAAMY,UACL,kBAACzD,EAAD,CACEC,MAAOzI,EAAEqL,EAAMY,SAASnH,YAAc,GACtC4D,KAAK,eAIR2C,EAAMY,UACL,kBAACzD,EAAD,CACEC,MAAOzI,EAAEqL,EAAMY,SAASjH,WAAa,GACrC0D,KAAK,cAIR2C,EAAMY,UACL,kBAACzD,EAAD,CAASC,MAAOzI,EAAEqL,EAAMY,SAASrH,QAAU,GAAI8D,KAAK,aAK1D,yBAAKN,GAAG,WACN,yBAAKC,UAAU,QACZgD,EAAMlF,WACL,kBAACqC,EAAD,CACEC,MAAOzI,EAAEqL,EAAMlF,UAAUU,cAAgB,GACzC6B,KAAK,iBAGR2C,EAAMlF,WACL,kBAACqC,EAAD,CACEC,MAAOzI,EAAEqL,EAAMlF,UAAUc,aAAe,GACxCyB,KAAK,mBAGR2C,EAAMlF,WACL,kBAACqC,EAAD,CACEC,MAAOzI,EAAEqL,EAAMlF,UAAUY,aAAe,GACxC2B,KAAK,mBAGR2C,EAAMc,YACL,kBAAC3D,EAAD,CAASC,MAAOzI,EAAEqL,EAAMc,WAAWtE,OAAS,GAAIa,KAAK,iBAK3D,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,8CACA,uBAAG4E,YAAA,EAASC,WAAS,cAArB,mBAGA,kBAAC,IAAD,CAAc9E,GAAG,aAAa+E,OAAO,QAAQC,MAAM,OACjD,2GAGE,6BAHF,uFAUN,kBAACvC,EAAD,CAAY1E,UAAWkF,EAAMlF,UAAWxD,KAAMA,KAEhD,yBAAKyF,GAAG,cAAcC,UAAU,WAC9B,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,gDACA,uBAAG4E,YAAA,EAASC,WAAS,oBAArB,mBAGA,kBAAC,IAAD,CAAc9E,GAAG,mBAAmB+E,OAAO,QAAQC,MAAM,OACvD,sFAEE,6BAFF,8CAQN,yBAAK/E,UAAU,yBACZgD,EAAMc,YACLd,EAAMc,WAAW/E,mBAAmBd,KAAI,SAACQ,EAAGjF,GAAJ,OACtC,yBAAKpB,IAAKoB,EAAGwG,UAAU,YACrB,yBAAKA,UAAU,OAAf,MACMvB,EAAEW,OAAS9E,EAAKkG,QAGtB,yBAAKR,UAAU,cACb,yBAAKA,UAAU,MACZS,KAAKC,MAAMjC,EAAEY,QAAQ5F,QADxB,YAGA,yBAAKuG,UAAU,QACZvB,EAAEY,QAAQpB,KAAI,SAAA2C,GAAC,OACd,yBACExI,IAAKwI,EACLZ,UAAS,gBAAWgD,EAAMgB,WACtBhB,EAAMgB,QAAQ3E,QAAQuB,KAEnB,SAANA,EACGoC,EAAMgB,SAAWhB,EAAMgB,QAAQ3E,QAAQuB,GACvC,gBAxIjB,qCChFX,IACMjJ,EADKD,EAAQ,IACNE,OAAO,KAEL,SAASoN,EAAT,GAAkD,IAA1B1K,EAAyB,EAAzBA,KAAM2K,EAAmB,EAAnBA,SAAUvE,EAAS,EAATA,MACrD,OACE,yBAAKV,UAAU,aACZ1F,GAAQ2K,GACP,+CACkB,IAChB,8BACG3K,EAAKkG,OAASyE,EACXA,EAAW3K,EAAKkG,SAAW,EACzB,mBACA,cACF,OAITlG,GACC,yBAAK0F,UAAU,QAAf,iBACiB,IACf,uBAAGM,KAAI,wCAAmChG,EAAKkG,SAC5C7I,EAAE2C,EAAKkG,UAIbyE,GACC,+CACkB,IAChB,uBAAG3E,KAAI,wCAAmC2E,IACvCtN,EAAEsN,KAIRvE,GACC,oCACE,4CACe,IACb,8BAAOA,EAAMuD,QAAUvD,EAAMuE,SAAW,cAAgB,OAE1D,6CACgB,IACd,uBAAG3E,KAAI,sCAAiCI,EAAMuD,UAC3CtM,EAAE+I,EAAMuD,WAGb,8CACiB,IACf,uBAAG3D,KAAI,sCAAiCI,EAAMuE,WAC3CtN,EAAE+I,EAAMuE,c,cCpCvB,SAASC,IACP,IAAMC,EAAa,IAAIC,KAAK,wBAAwBC,UACpD,OAAO5E,KAAK6E,OAAOF,KAAKG,MAAQJ,GAAc,IAAO,IAsIxCK,MAnIf,WAAiB,IAAD,EACcxE,qBADd,mBACP7D,EADO,KACCsI,EADD,OAEUzE,qBAFV,mBAEP1G,EAFO,KAEDoI,EAFC,OAGY1B,qBAHZ,mBAGPN,EAHO,KAGAgF,EAHA,OAIU1E,mBACtB,uDALY,mBAIP2E,EAJO,KAIDC,EAJC,OAOiB5E,mBAAS,IAAIpH,EAAS+L,IAPvC,mBAOPvL,EAPO,KAOCyL,EAPD,OAQoC7E,mBAChDkE,KATY,mBAQPY,EARO,KAQYC,EARZ,OAWQ/E,qBAXR,mBAWPD,EAXO,KAWFiF,EAXE,KA0Ed,OA7DAvE,qBAAU,YACI,uCAAG,sBAAAtG,EAAA,sEACPuH,IADO,uBAEPmD,EAAa,IAAIjM,EAAS+L,IAFnB,2CAAH,qDAKZM,KACC,CAACN,IAEJlE,qBAAU,WACHnH,GAELF,EAAO0H,WAAWxH,GAAMiJ,MAAK,SAAA2C,GAC3BF,EAAOE,QAER,CAAC5L,IAEJmH,qBAAU,WACR,IAAIQ,GAAU,EAEd7H,EAAO+L,YAAY5C,MAAK,SAAAnI,GACjB6G,GACLwD,EAAUrK,MAGZ,IAAMyH,EAAY,uCAAG,sBAAA1H,EAAA,sDACnBf,EAAOuI,YAAYY,MAAK,SAAAX,GACjBX,IACD3H,GAAQsI,EAAQpC,SAAWlG,EAAKkG,OAClCtG,QAAQC,IAAI,yBAGdD,QAAQC,IAAI,YAAayI,EAAQpC,OAAQlG,GAAQA,EAAKkG,QACtDkC,EAAQE,QAGVwD,IAAQ7C,MAAK,SAAAX,GACNX,IACDvB,GAASkC,EAAQqB,UAAYvD,EAAMuD,QACrC/J,QAAQC,IAAI,yBAGdD,QAAQC,IAAI,YAAayI,GACzB8C,EAAS9C,QAGXmD,EAAqBb,KArBF,2CAAH,qDAwBlBrC,IAEA,IAAMwD,EAAWC,aAAY,WAC3BzD,MACC,KAEH,OAAO,WACLZ,GAAU,EACVsE,cAAcF,MAEf,CAACjM,EAAQE,EAAMoG,IAGhB,kBAAC,IAAD,KACE,yBAAKV,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,4BACED,GAAG,GACHyG,KAAK,GACLC,SAAU,SAAAC,GAAC,OAAId,EAAQc,EAAEC,OAAOtO,QAChCA,MAAOsN,GAEP,4BAAQtN,MAAM,uDAAd,gBAGA,4BAAQA,MAAM,uDAAd,gBAGA,4BAAQA,MAAM,2CAAd,iBAGA,4BAAQA,MAAM,2CAAd,kBAMN,kBAAC2M,EAAD,CAAa1K,KAAMA,EAAM2K,SAAUa,EAAmBpF,MAAOA,KAE/D,4BAAQV,UAAU,mBAChB,kBAAC,IAAD,CAAME,GAAG,KACP,wBAAIH,GAAG,OAAOC,UAAU,QACtB,6CAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzF,KAAK,oBACV,6BAASyF,UAAU,aACjB,kBAAC8C,EAAD,CAAO1I,OAAQA,EAAQ+C,OAAQA,EAAQ7C,KAAMA,MAGjD,kBAAC,IAAD,CAAOC,KAAK,SACV,kBAACkI,EAAD,CAAMrI,OAAQA,EAAQ+C,OAAQA,KAEhC,kBAAC,IAAD,CAAO5C,KAAK,WACV,kBAACuG,EAAD,CAAQxG,KAAMA,EAAMyG,IAAKA,EAAK3G,OAAQA,EAAQ+C,OAAQA,KAExD,kBAAC,IAAD,CAAO5C,KAAK,KACV,kBAACuF,EAAD,CAAM3C,OAAQA,SCnINyJ,QACW,cAA7BlN,OAAO+K,SAASoC,UAEe,UAA7BnN,OAAO+K,SAASoC,UAEhBnN,OAAO+K,SAASoC,SAASC,MACvB,2DCZNC,IAAS5C,OACP,kBAAC,IAAM6C,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9D,MAAK,SAAA+D,GACJA,EAAaC,gBAEd/D,OAAM,SAAAE,GACLxJ,QAAQwJ,MAAMA,EAAM8D,a","file":"static/js/main.33dc3e01.chunk.js","sourcesContent":["import { LotusRPC } from '@filecoin-shipyard/lotus-client-rpc'\nimport { BrowserProvider } from '@filecoin-shipyard/lotus-client-provider-browser'\nimport Fil from 'js-hamt-filecoin'\nconst d3 = require('d3')\nconst f = d3.format('0.2f')\nconst bx = require('base-x')\nconst BASE64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nconst b64 = bx(BASE64)\n\nconst schema = require('@filecoin-shipyard/lotus-client-schema').testnet\n  .fullNode\n\nconst preCommitSchema = {\n  type: 'hamt',\n  key: 'bigint',\n  value: {\n    info: {\n      seal_proof: 'int',\n      sector_number: 'int',\n      sealed_cid: 'cid',\n      seal_rand_epoch: 'int',\n      deal_ids: ['list', 'int'],\n      expiration: 'int',\n      replace_capacity: 'bool',\n      replace_sector_deadline: 'int',\n      replace_sector_partition: 'int',\n      replace_sector_number: 'int'\n    },\n    precommit_deposit: 'bigint',\n    precommit_epoch: 'int',\n    deal_weight: 'bigint',\n    verified_deal_weight: 'bigint'\n  }\n}\n\nfunction bytesToBig (p) {\n  let acc = 0n\n  for (let i = 0; i < p.length; i++) {\n    acc *= 256n\n    acc += window.BigInt(p[i])\n  }\n  return acc\n}\n\nexport default class Filecoin {\n  constructor (endpointUrl) {\n    this.url = endpointUrl\n    const provider = new BrowserProvider(endpointUrl)\n    console.log('new endpoint', endpointUrl)\n    this.client = new LotusRPC(provider, { schema })\n  }\n\n  async getData (head, path, schema) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const data = (await this.client.chainGetNode(`${state}/${path}`)).Obj\n\n    const self = this\n    return await Fil.methods.decode(schema, data).asObject(async a => {\n      const res = await self.client.chainGetNode(a)\n      return res.Obj\n    })\n  }\n\n  async fetchHead () {\n    return await this.client.chainHead()\n  }\n\n  async fetchTipsetHead (height) {\n    return await this.client.ChainGetTipSetByHeight(height, null)\n  }\n\n  async fetchPower (head) {\n    const state = head.Blocks[0].ParentStateRoot['/']\n    const storagePowerActorRaw = (\n      await this.client.chainGetNode(`${state}/@Ha:t04/1`)\n    ).Obj\n    return {\n      TotalRawBytePower: bytesToBig(b64.decode(storagePowerActorRaw[0])),\n      TotalBytesCommitted: bytesToBig(b64.decode(storagePowerActorRaw[1])),\n      TotalQualityAdjPower: bytesToBig(b64.decode(storagePowerActorRaw[2])),\n      TotalQABytesCommitted: bytesToBig(b64.decode(storagePowerActorRaw[3])),\n      TotalPledgeCollateral: bytesToBig(b64.decode(storagePowerActorRaw[4])),\n      ThisEpochRawBytePower: bytesToBig(b64.decode(storagePowerActorRaw[5])),\n      ThisEpochQualityAdjPower: bytesToBig(b64.decode(storagePowerActorRaw[6])),\n      ThisEpochPledgeCollateral: bytesToBig(b64.decode(storagePowerActorRaw[7]))\n    }\n  }\n\n  async fetchDeposits (hash, head) {\n    const state = await this.client.StateReadState(hash, head.Cids)\n    const precommitdeposits = state.State.PreCommitDeposits\n    const locked = state.State.LockedFunds\n    const collateral = state.Balance\n    const available = collateral - precommitdeposits - locked\n\n    return {\n      collateral: f(state.Balance / 1000000000000000000),\n      available: f(available / 1000000000000000000),\n      locked: f(locked / 1000000000000000000),\n      precommitdeposits: f(precommitdeposits / 1000000000000000000)\n    }\n  }\n\n  async getMiners () {\n    const cached = window.localStorage.getItem('miners')\n    if (cached) return JSON.parse(cached)\n\n    const json = await (\n      await fetch(\n        'https://filfox.info/api/v0/miner/list/power?pageSize=1000&page=0'\n      )\n    ).json()\n    const miners = json.miners.reduce((acc, curr) => {\n      acc[curr.address] = curr\n      return acc\n    }, {})\n\n    window.localStorage.setItem('miners', JSON.stringify(miners))\n\n    return miners\n  }\n\n  async fetchDeadlines (hash, head) {\n    const [deadline, deadlines] = await Promise.all([\n      this.client.StateMinerProvingDeadline(hash, head.Cids),\n      this.client.StateMinerDeadlines(hash, head.Cids)\n    ])\n\n    const nextDeadlines = [...Array(48)]\n      .map((_, i) => ({\n        ...deadlines[(deadline.Index + i) % 48],\n        Close: deadline.Close + i * 60\n      }))\n      .map(({ Close, LiveSectors, TotalSectors, FaultyPower }) => ({\n        Close,\n        LiveSectors,\n        TotalSectors,\n        FaultyPower\n      }))\n\n    const SectorsCount = deadlines\n      .map(d => +d.LiveSectors)\n      .reduce((acc, curr) => acc + curr, 0)\n\n    const FaultsCount =\n      deadlines\n        .map(d => +d.FaultyPower.Raw)\n        .reduce((acc, curr) => acc + curr, 0) /\n      (32 * 1024 * 1024 * 1024)\n\n    return {\n      nextDeadlines,\n      SectorsCount,\n      FaultsCount,\n      ActiveCount: SectorsCount - FaultsCount\n    }\n  }\n\n  async fetchPreCommittedSectors (hash, head) {\n    const preCommittedSectors = await this.getData(\n      head,\n      `@Ha:${hash}/1/5`,\n      preCommitSchema\n    )\n    const PreCommitDeadlines = d3\n      .groups(\n        Object.keys(preCommittedSectors).map(d => ({\n          SectorNumber: preCommittedSectors[d].info.sector_number,\n          Expiry: preCommittedSectors[d].precommit_epoch + (10000 + 60 + 150)\n        })),\n        d => d.Expiry\n      )\n      .map(([Expiry, Sectors]) => ({\n        Expiry,\n        Sectors: Sectors.map(d => d.SectorNumber)\n      }))\n      .sort((a, b) => a.Expiry - b.Expiry)\n\n    return {\n      PreCommitDeadlines,\n      Count: Object.keys(preCommittedSectors).length\n    }\n  }\n\n  async fetchSectors (hash, head) {\n    const sectorList = await this.client.StateMinerSectors(\n      hash,\n      null,\n      null,\n      head.Cids\n    )\n    const Sectors = sectorList.reduce((acc, curr) => {\n      acc[curr.ID] = { number: curr.ID, info: curr }\n      return acc\n    }, {})\n\n    const sectorsCount = Object.keys(Sectors).length\n    return { sectorsCount, Sectors }\n  }\n}\n","export default async function () {\n  return await (await fetch('https://pl-us.incentinet.drand.sh/health')).json()\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Home ({ miners }) {\n  return (\n    <section id='home' className='container'>\n      <div className='spacerace'>\n        Top miners:\n        {miners &&\n          Object.keys(miners)\n            .slice(0, 5)\n            .map((d, i) => (\n              <div key={i}>\n                {i + 1}.{' '}\n                <Link to={`/miners/${miners[d].address}`}>\n                  {miners[d].address}\n                </Link>\n              </div>\n            ))}\n      </div>\n      <div>\n        See deadlines of <Link to='/full'>top 50 miners</Link> or click on\n        individual miners or the <Link to='/status'>network status</Link>.\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function Summary ({ title, url, desc }) {\n  return (\n    <div className='summary col-sm'>\n      <div className='summary-title'>\n        {url ? <a href={url}>{title}</a> : <>{title}</>}\n      </div>\n      <div className='summary-desc'>{desc}</div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function WindowPoStStatus ({ deadline, head }) {\n  const d = deadline\n\n  return (\n    <div className='deadlines windowpost'>\n      <div className={d.TotalSectors === 0 ? 'deadline opacity5' : 'deadline'}>\n        <div className='out'>\n          In {d.Close - head.Height}\n          {/* <span className=\"epochs\">epochs</span> */}\n        </div>\n        <div className='hddWrapper'>\n          <div className='in'>\n            {Math.round((d.TotalSectors * 32) / 1024)} TiB\n          </div>\n          <div className='hdds'>\n            {[\n              ...Array(\n                Math.ceil(\n                  Math.round(\n                    (d.TotalSectors * 32) / 1024 -\n                      +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                  ) / 8\n                )\n              )\n            ].map((v, i) => (\n              <div key={i} className='hdd'>\n                {' '}\n              </div>\n            ))}\n            {[\n              ...Array(\n                Math.ceil(\n                  Math.round(+d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)) /\n                    8\n                )\n              )\n            ].map((v, i) => (\n              <div key={i} className='hdd faulty'>\n                {' '}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport asyncPool from 'tiny-async-pool'\nimport { Link } from 'react-router-dom'\nimport Summary from '../components/Summary'\nimport WindowPoStStatus from '../components/WindowPoStStatus'\n\nconst d3 = require('d3')\nconst f2 = d3.format(',.2f')\nconst bytesToPiB = 1024 * 1024 * 1024 * 1024 * 1024\n\nexport default function Status ({ client, spa, head, miners }) {\n  const [minersDeadlines, setMinersDeadlines] = useState({})\n  const [minersDeadlines2880, setMinersDeadlines2880] = useState({})\n  const [prev60, setPrev60] = useState()\n  const [prev120, setPrev120] = useState()\n\n  useEffect(() => {\n    if (!head) return\n\n    const fetchingPrevious = async () => {\n      const getPrev = async diff => {\n        const prevHead = await client.fetchTipsetHead(head.Height - diff)\n        const prevSpa = await client.fetchPower(prevHead)\n        return prevSpa\n      }\n\n      const [prev60, prev120] = await Promise.all([getPrev(60), getPrev(120)])\n\n      await setPrev60(prev60)\n      await setPrev120(prev120)\n    }\n    fetchingPrevious()\n  }, [head])\n\n  useEffect(() => {\n    let mounted = true\n    if (!head) return\n\n    const minersList = Object.keys(miners)\n      .slice(0, 40)\n      .map(d => miners[d].address)\n    asyncPool(5, minersList, async minerId => {\n      if (!mounted) return\n      const deadlines = await client.fetchDeadlines(minerId, head)\n      if (!mounted) return\n      const prevHead = await client.fetchTipsetHead(head.Height - 2880)\n      if (!mounted) return\n      const deadlines2880 = await client.fetchDeadlines(minerId, prevHead)\n      if (!mounted) return\n      minersDeadlines[minerId] = deadlines\n      minersDeadlines2880[minerId] = deadlines2880\n      await setMinersDeadlines({ ...minersDeadlines })\n      return await setMinersDeadlines2880({ ...minersDeadlines2880 })\n    })\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, miners])\n\n  return (\n    <section className='container'>\n      <div id='deposits' className='section'>\n        <div className='grid'>\n          {spa && (\n            <>\n              <Summary\n                title={f2(parseInt(spa.TotalQualityAdjPower) / bytesToPiB)}\n                desc='Total QA Power'\n              />\n            </>\n          )}\n          {prev60 && spa && (\n            <>\n              <Summary\n                title={f2(\n                  parseInt(\n                    spa.TotalQualityAdjPower - prev60.TotalQualityAdjPower\n                  ) / bytesToPiB\n                )}\n                desc='60 Epochs delta'\n              />\n            </>\n          )}\n          {prev120 && spa && (\n            <>\n              <Summary\n                title={f2(\n                  parseInt(\n                    spa.TotalQualityAdjPower - prev120.TotalQualityAdjPower\n                  ) / bytesToPiB\n                )}\n                desc='120 Epochs delta'\n              />\n            </>\n          )}\n        </div>\n      </div>\n      Listing WindowPoSt duties of the top 50 miners.\n      {miners &&\n        Object.keys(miners)\n          .slice(0, 40)\n          .map((d, i) => (\n            <div className='flex' key={i}>\n              <Link to={`/miners/${miners[d].address}`}>\n                {miners[d].address}\n              </Link>\n              {minersDeadlines && minersDeadlines[miners[d].address] && (\n                <WindowPoStStatus\n                  head={head}\n                  deadline={\n                    minersDeadlines[miners[d].address].nextDeadlines[47]\n                  }\n                />\n              )}\n              {minersDeadlines2880 &&\n                minersDeadlines2880[miners[d].address] && (\n                  <WindowPoStStatus\n                    head={head}\n                    deadline={\n                      minersDeadlines2880[miners[d].address].nextDeadlines[47]\n                    }\n                  />\n                )}\n            </div>\n          ))}\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function WindowPoSt ({ deadlines, head }) {\n  return (\n    <div className='deadlines windowpost'>\n      {deadlines &&\n        deadlines.nextDeadlines.map((d, i) => (\n          <div\n            key={i}\n            className={d.TotalSectors === 0 ? 'deadline opacity5' : 'deadline'}\n          >\n            <div className='out'>\n              In {d.Close - head.Height}\n              {/* <span className=\"epochs\">epochs</span> */}\n            </div>\n            <div className='hddWrapper'>\n              <div className='in'>\n                {Math.round((d.TotalSectors * 32) / 1024)} TiB\n              </div>\n              <div className='hdds'>\n                {[\n                  ...Array(\n                    Math.ceil(\n                      Math.round(\n                        (d.TotalSectors * 32) / 1024 -\n                          +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                      ) / 8\n                    )\n                  )\n                ].map((v, i) => (\n                  <div key={i} className='hdd'>\n                    {' '}\n                  </div>\n                ))}\n                {[\n                  ...Array(\n                    Math.ceil(\n                      Math.round(\n                        +d.FaultyPower.Raw / (1024 * 1024 * 1024 * 1024)\n                      ) / 8\n                    )\n                  )\n                ].map((v, i) => (\n                  <div key={i} className='hdd faulty'>\n                    {' '}\n                  </div>\n                ))}\n              </div>\n            </div>\n            {/* <div className=\"partitions\">\n                            {\n                            [...Array(Math.ceil(d.TotalSectors/2349))].map(v =>\n                            <div className='partition'></div>\n                            )\n                            }\n                            </div> */}\n          </div>\n        ))}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport asyncPool from 'tiny-async-pool'\n\nimport WindowPoSt from '../components/WindowPoSt'\n\nexport default function Full ({ miners, client }) {\n  const [minersDeadlines, setMinersDeadlines] = useState({})\n  const [head, setHead] = useState()\n\n  useEffect(() => {\n    const fetchingHead = async () => {\n      const fetched = await client.fetchHead()\n      setHead(fetched)\n    }\n    fetchingHead()\n  }, [client])\n\n  useEffect(() => {\n    let mounted = true\n    if (!head) return\n\n    const minersList = Object.keys(miners)\n      .slice(0, 50)\n      .map(d => miners[d].address)\n    asyncPool(5, minersList, async minerId => {\n      if (!mounted) return\n      const deadlines = await client.fetchDeadlines(minerId, head)\n      if (!mounted) return\n      minersDeadlines[minerId] = deadlines\n      return await setMinersDeadlines({ ...minersDeadlines })\n    })\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, miners])\n\n  return (\n    <section id='LookUp' className='container'>\n      Listing WindowPoSt duties of the top 50 miners.\n      {miners &&\n        Object.keys(miners)\n          .slice(0, 50)\n          .map((d, i) => (\n            <div key={i}>\n              <Link to={`/miners/${miners[d].address}`}>\n                {miners[d].address}\n              </Link>\n\n              <WindowPoSt\n                deadlines={minersDeadlines[miners[d].address]}\n                head={head}\n              />\n            </div>\n          ))}\n    </section>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Blockies from 'blockies-identicon'\n\nimport Summary from './Summary'\nimport ReactTooltip from 'react-tooltip'\nimport WindowPoSt from './WindowPoSt'\n\nconst d3 = require('d3')\nconst f = d3.format(',')\n\nexport default function Miner ({ client, miners, head }) {\n  const { minerId } = useParams()\n  const [miner, setMiner] = useState({ id: minerId })\n\n  const canvasRef = React.useRef(null)\n  const [context, setContext] = React.useState(null)\n\n  // On new (hash or head): fetch miner\n  useEffect(() => {\n    if (!minerId || !head) return\n\n    let mounted = true\n\n    const fetchInfo = () => {\n      console.log('url', client.url.slice(20), head.Cids, head.Height)\n      setMiner({ ...miner })\n\n      client\n        .fetchDeadlines(minerId, head)\n        .then(deadlines => {\n          if (mounted) {\n            miner.deadlines = deadlines\n            setMiner({ ...miner })\n          }\n        })\n        .catch(err => {\n          console.error(err)\n        })\n\n      client.fetchDeposits(minerId, head).then(deposits => {\n        if (mounted) {\n          miner.deposits = deposits\n          setMiner({ ...miner })\n        }\n      })\n\n      client.fetchPreCommittedSectors(minerId, head).then(preCommits => {\n        if (mounted) {\n          miner.preCommits = preCommits\n          setMiner({ ...miner })\n        }\n      })\n\n      client.fetchSectors(minerId, head).then(sectors => {\n        if (mounted) {\n          miner.sectors = sectors\n          setMiner({ ...miner })\n        }\n      })\n    }\n\n    fetchInfo()\n\n    return () => {\n      mounted = false\n    }\n  }, [client, head, minerId])\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      Blockies.render({ seed: miner.id }, canvasRef.current)\n\n      const renderCtx = canvasRef.current.getContext('2d')\n\n      if (renderCtx) {\n        setContext(renderCtx)\n      }\n    }\n  }, [context, miner])\n\n  if (!miner || !head) {\n    return <></>\n  }\n\n  return (\n    <div>\n      <div id='miner' className='section'>\n        {/* <span><canvas ref={canvasRef}></canvas></span> */}\n        <h1>{miner.id}</h1>\n        <div>\n          {miners && miners[miner.id].tag && (\n            <span className='miner-name'>{miners[miner.id].tag.en}</span>\n          )}\n          {miners && miners[miner.id].location && (\n            <span> from {miners[miner.id].location.flagEmoji}</span>\n          )}\n          &nbsp; (\n          <a href={`https://filfox.info/en/address/${miner.id}`}>filfox</a>\n          ,&nbsp;\n          <a\n            href={`https://filscan.io/#/tipset/address-detail?address=${miner.identicon}`}\n          >\n            filscan\n          </a>\n          ,&nbsp;\n          <a href={`https://filscout.io/en/pc/account?id=${miner.id}`}>\n            filscout\n          </a>\n          )\n        </div>\n      </div>\n\n      <div id='deposits' className='section'>\n        <div className='grid'>\n          {miner.deposits && (\n            <Summary\n              title={f(miner.deposits.collateral || 0)}\n              desc='Collateral'\n            />\n          )}\n\n          {miner.deposits && (\n            <Summary\n              title={f(miner.deposits.available || 0)}\n              desc='Available'\n            />\n          )}\n\n          {miner.deposits && (\n            <Summary title={f(miner.deposits.locked || 0)} desc='Locked' />\n          )}\n        </div>\n      </div>\n\n      <div id='sectors'>\n        <div className='grid'>\n          {miner.deadlines && (\n            <Summary\n              title={f(miner.deadlines.SectorsCount || 0)}\n              desc='Live Sectors'\n            />\n          )}\n          {miner.deadlines && (\n            <Summary\n              title={f(miner.deadlines.ActiveCount || 0)}\n              desc='Active Sectors'\n            />\n          )}\n          {miner.deadlines && (\n            <Summary\n              title={f(miner.deadlines.FaultsCount || 0)}\n              desc='Faulty Sectors'\n            />\n          )}\n          {miner.preCommits && (\n            <Summary title={f(miner.preCommits.Count || 0)} desc='PreCommits' />\n          )}\n        </div>\n      </div>\n\n      <div className='section wpost'>\n        <div className='row'>\n          <div className='col section-title'>\n            <h3>WindowPoSt due</h3>\n            <a data-tip data-for='wpost-desc'>\n              (what is this?)\n            </a>\n            <ReactTooltip id='wpost-desc' effect='solid' place='top'>\n              <span>\n                List of 48 WindoPoSt submission deadlines ordered by due time\n                (in epochs).\n                <br />\n                Bars represent ~8TB disks to be proven, white are healthy disks,\n                red are faulty.\n              </span>\n            </ReactTooltip>\n          </div>\n        </div>\n        <WindowPoSt deadlines={miner.deadlines} head={head} />\n      </div>\n      <div id='provecommit' className='section'>\n        <div className='row'>\n          <div className='col section-title'>\n            <h3>ProveCommits due</h3>\n            <a data-tip data-for='provecommit-desc'>\n              (what is this?)\n            </a>\n            <ReactTooltip id='provecommit-desc' effect='solid' place='top'>\n              <span>\n                List of ProveCommits ordered by due time (in epochs).\n                <br />\n                Circles represent sectors to be proven.\n              </span>\n            </ReactTooltip>\n          </div>\n        </div>\n        <div className='deadlines provecommit'>\n          {miner.preCommits &&\n            miner.preCommits.PreCommitDeadlines.map((d, i) => (\n              <div key={i} className='deadline'>\n                <div className='out'>\n                  In {d.Expiry - head.Height}\n                  {/* <span className=\"epochs\">epochs</span> */}\n                </div>\n                <div className='hddWrapper'>\n                  <div className='in'>\n                    {Math.round(d.Sectors.length)} sectors\n                  </div>\n                  <div className='hdds'>\n                    {d.Sectors.map(v => (\n                      <div\n                        key={v}\n                        className={`hdd ${!!miner.sectors &&\n                          !!miner.sectors.Sectors[v]}`}\n                      >\n                        {v === 215428\n                          ? miner.sectors && miner.sectors.Sectors[v]\n                          : ''}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nconst d3 = require('d3')\nconst f = d3.format(',')\n\nexport default function TinySummary ({ head, expected, round }) {\n  return (\n    <div className='tiny-grid'>\n      {head && expected && (\n        <div>\n          Filecoin Status{' '}\n          <span>\n            {head.Height < expected\n              ? expected - head.Height === 1\n                ? 'gathering blocks'\n                : 'catching up'\n              : 'ok'}\n          </span>\n        </div>\n      )}\n      {head && (\n        <div className='tiny'>\n          Current Tipset{' '}\n          <a href={`https://filfox.info/en/tipset/${head.Height}`}>\n            {f(head.Height)}\n          </a>\n        </div>\n      )}\n      {expected && (\n        <div>\n          Expected Tipset{' '}\n          <a href={`https://filfox.info/en/tipset/${expected}`}>\n            {f(expected)}\n          </a>\n        </div>\n      )}\n      {round && (\n        <>\n          <div>\n            Drand Status{' '}\n            <span>{round.current < round.expected ? 'catching up' : 'ok'}</span>\n          </div>\n          <div>\n            Current Drand{' '}\n            <a href={`https://api.drand.sh/public/${round.current}`}>\n              {f(round.current)}\n            </a>\n          </div>\n          <div>\n            Expected Drand{' '}\n            <a href={`https://api.drand.sh/public/${round.expected}`}>\n              {f(round.expected)}\n            </a>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\nimport Filecoin from './services/filecoin'\nimport Drand from './services/drand'\n\nimport Home from './views/Home'\nimport Status from './views/Status'\nimport Full from './views/Full'\nimport Miner from './components/Miner'\nimport TinySummary from './components/TinySummary'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.scss'\n\nfunction getFilecoinExpectedHeight () {\n  const filGenesis = new Date('2020-08-24 22:00:00Z').getTime()\n  return Math.floor((Date.now() - filGenesis) / 1000 / 30)\n}\n\nfunction App () {\n  const [miners, setMiners] = useState()\n  const [head, setHead] = useState()\n  const [round, setRound] = useState()\n  const [node, setNode] = useState(\n    'wss://lotus.jimpick.com/spacerace_api/0/node/rpc/v0'\n  )\n  const [client, setFilClient] = useState(new Filecoin(node))\n  const [filExpectedHeight, setFilExpectedHeight] = useState(\n    getFilecoinExpectedHeight()\n  )\n  const [spa, setSpa] = useState()\n\n  useEffect(() => {\n    const reload = async () => {\n      await setHead()\n      await setFilClient(new Filecoin(node))\n    }\n\n    reload()\n  }, [node])\n\n  useEffect(() => {\n    if (!head) return\n\n    client.fetchPower(head).then(power => {\n      setSpa(power)\n    })\n  }, [head])\n\n  useEffect(() => {\n    let mounted = true\n\n    client.getMiners().then(res => {\n      if (!mounted) return\n      setMiners(res)\n    })\n\n    const fetchingHead = async () => {\n      client.fetchHead().then(fetched => {\n        if (!mounted) return\n        if (head && fetched.Height === head.Height) {\n          console.log('repeated block, skip')\n          return\n        }\n        console.log('new block', fetched.Height, head && head.Height)\n        setHead(fetched)\n      })\n\n      Drand().then(fetched => {\n        if (!mounted) return\n        if (round && fetched.current === round.current) {\n          console.log('repeated drand, skip')\n          return\n        }\n        console.log('new drand', fetched)\n        setRound(fetched)\n      })\n\n      setFilExpectedHeight(getFilecoinExpectedHeight())\n    }\n\n    fetchingHead()\n\n    const interval = setInterval(() => {\n      fetchingHead()\n    }, 5000)\n\n    return () => {\n      mounted = false\n      clearInterval(interval)\n    }\n  }, [client, head, round])\n\n  return (\n    <Router>\n      <div className='App'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col'>\n              <select\n                id=''\n                name=''\n                onChange={e => setNode(e.target.value)}\n                value={node}\n              >\n                <option value='wss://lotus.jimpick.com/spacerace_api/0/node/rpc/v0'>\n                  Jim's node 0\n                </option>\n                <option value='wss://lotus.jimpick.com/spacerace_api/1/node/rpc/v0'>\n                  Jim's node 1\n                </option>\n                <option value='ws://www.border.ninja:12342/node/rpc/v0'>\n                  Border's node\n                </option>\n                <option value='wss://node.glif.io/space07/lotus/rpc/v0'>\n                  Glif's node\n                </option>\n              </select>\n            </div>\n          </div>\n          <TinySummary head={head} expected={filExpectedHeight} round={round} />\n        </div>\n        <header className='container-fluid'>\n          <Link to='/'>\n            <h1 id='logo' className='logo'>\n              <span>spacegap</span>\n            </h1>\n          </Link>\n        </header>\n        <Switch>\n          <Route path='/miners/:minerId'>\n            <section className='container'>\n              <Miner client={client} miners={miners} head={head} />\n            </section>\n          </Route>\n          <Route path='/full'>\n            <Full client={client} miners={miners} />\n          </Route>\n          <Route path='/status'>\n            <Status head={head} spa={spa} client={client} miners={miners} />\n          </Route>\n          <Route path='/'>\n            <Home miners={miners} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}